2022-09-10 22:01:36,366:INFO:PyCaret ClassificationExperiment
2022-09-10 22:01:36,366:INFO:Logging name: clf-default-name
2022-09-10 22:01:36,366:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2022-09-10 22:01:36,366:INFO:version 3.0.0.rc3
2022-09-10 22:01:36,366:INFO:Initializing setup()
2022-09-10 22:01:36,367:INFO:self.USI: 43af
2022-09-10 22:01:36,367:INFO:self.variable_keys: {'exp_id', 'display_container', '_all_models_internal', '_available_plots', '_all_metrics', 'fold_shuffle_param', '_is_multiclass', 'y', 'fold_generator', 'pipeline', 'n_jobs_param', 'X_test', '_gpu_n_jobs_param', 'y_train', 'USI', 'data', '_all_models', 'seed', 'logging_param', 'exp_name_log', 'idx', 'master_model_container', 'y_test', 'memory', 'html_param', 'X_train', 'X', '_ml_usecase', 'fix_imbalance', 'fold_groups_param', 'variable_keys', 'target_param', 'gpu_param', 'log_plots_param'}
2022-09-10 22:01:36,367:INFO:Checking environment
2022-09-10 22:01:36,367:INFO:python_version: 3.8.13
2022-09-10 22:01:36,367:INFO:python_build: ('default', 'Mar 28 2022 06:59:08')
2022-09-10 22:01:36,367:INFO:machine: AMD64
2022-09-10 22:01:36,367:INFO:platform: Windows-10-10.0.19044-SP0
2022-09-10 22:01:36,367:INFO:Memory: svmem(total=17107963904, available=5743513600, percent=66.4, used=11364450304, free=5743513600)
2022-09-10 22:01:36,367:INFO:Physical Core: 6
2022-09-10 22:01:36,367:INFO:Logical Core: 6
2022-09-10 22:01:36,367:INFO:Checking libraries
2022-09-10 22:01:36,367:INFO:System:
2022-09-10 22:01:36,368:INFO:    python: 3.8.13 (default, Mar 28 2022, 06:59:08) [MSC v.1916 64 bit (AMD64)]
2022-09-10 22:01:36,368:INFO:executable: c:\Users\bruno\anaconda3\envs\chatbot_env\python.exe
2022-09-10 22:01:36,368:INFO:   machine: Windows-10-10.0.19044-SP0
2022-09-10 22:01:36,368:INFO:PyCaret required dependencies:
2022-09-10 22:01:36,368:INFO:                 pip: 22.1.2
2022-09-10 22:01:36,368:INFO:          setuptools: 63.4.1
2022-09-10 22:01:36,368:INFO:             pycaret: 3.0.0.rc3
2022-09-10 22:01:36,368:INFO:             IPython: 8.5.0
2022-09-10 22:01:36,368:INFO:          ipywidgets: 8.0.2
2022-09-10 22:01:36,368:INFO:                tqdm: 4.64.1
2022-09-10 22:01:36,368:INFO:               numpy: 1.21.6
2022-09-10 22:01:36,368:INFO:              pandas: 1.4.4
2022-09-10 22:01:36,368:INFO:              jinja2: 3.1.2
2022-09-10 22:01:36,368:INFO:               scipy: 1.8.1
2022-09-10 22:01:36,368:INFO:              joblib: 1.1.0
2022-09-10 22:01:36,369:INFO:             sklearn: 1.1.2
2022-09-10 22:01:36,369:INFO:                pyod: Installed but version unavailable
2022-09-10 22:01:36,369:INFO:            imblearn: 0.9.1
2022-09-10 22:01:36,369:INFO:   category_encoders: 2.5.0
2022-09-10 22:01:36,369:INFO:            lightgbm: 3.3.2
2022-09-10 22:01:36,369:INFO:               numba: 0.55.2
2022-09-10 22:01:36,369:INFO:            requests: 2.28.1
2022-09-10 22:01:36,369:INFO:          matplotlib: 3.6.0rc2
2022-09-10 22:01:36,369:INFO:          scikitplot: 0.3.7
2022-09-10 22:01:36,369:INFO:         yellowbrick: 1.5
2022-09-10 22:01:36,369:INFO:              plotly: 5.10.0
2022-09-10 22:01:36,369:INFO:             kaleido: 0.2.1
2022-09-10 22:01:36,369:INFO:         statsmodels: 0.13.2
2022-09-10 22:01:36,369:INFO:              sktime: 0.11.4
2022-09-10 22:01:36,369:INFO:               tbats: Installed but version unavailable
2022-09-10 22:01:36,369:INFO:            pmdarima: 2.0.1
2022-09-10 22:01:36,369:INFO:              psutil: 5.9.2
2022-09-10 22:01:36,369:INFO:None
2022-09-10 22:01:36,370:INFO:Set up data.
2022-09-10 22:01:36,375:INFO:Set up train/test split.
2022-09-10 22:01:36,379:INFO:Assigning column types.
2022-09-10 22:01:36,381:INFO:Set up folding strategy.
2022-09-10 22:01:36,382:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2022-09-10 22:01:36,435:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2022-09-10 22:01:36,436:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2022-09-10 22:01:36,472:WARNING:No module named 'xgboost'.
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-09-10 22:01:36,473:WARNING:No module named 'catboost'.
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-09-10 22:01:36,525:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2022-09-10 22:01:36,526:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2022-09-10 22:01:36,560:WARNING:No module named 'xgboost'.
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-09-10 22:01:36,561:WARNING:No module named 'catboost'.
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-09-10 22:01:36,562:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2022-09-10 22:01:36,613:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2022-09-10 22:01:36,646:WARNING:No module named 'xgboost'.
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-09-10 22:01:36,647:WARNING:No module named 'catboost'.
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-09-10 22:01:36,699:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2022-09-10 22:01:36,732:WARNING:No module named 'xgboost'.
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-09-10 22:01:36,733:WARNING:No module named 'catboost'.
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-09-10 22:01:36,733:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2022-09-10 22:01:36,819:WARNING:No module named 'xgboost'.
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-09-10 22:01:36,820:WARNING:No module named 'catboost'.
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-09-10 22:01:36,905:WARNING:No module named 'xgboost'.
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-09-10 22:01:36,906:WARNING:No module named 'catboost'.
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-09-10 22:01:36,906:INFO:Preparing preprocessing pipeline...
2022-09-10 22:01:36,907:INFO:Set up label encoding.
2022-09-10 22:01:36,907:INFO:Set up simple imputation.
2022-09-10 22:01:36,908:INFO:Set up encoding of categorical features.
2022-09-10 22:01:36,908:INFO:Set up variance threshold.
2022-09-10 22:01:37,042:INFO:Finished creating preprocessing pipeline.
2022-09-10 22:01:37,048:INFO:Pipeline: Pipeline(memory=Memory(location=C:\Users\bruno\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              missing_values=nan,
                                                              strategy='m...
                ('rest_encoding',
                 TransformerWrapper(exclude=None, include=['input'],
                                    transformer=LeaveOneOutEncoder(cols=['input'],
                                                                   drop_invariant=False,
                                                                   handle_missing='return_nan',
                                                                   handle_unknown='value',
                                                                   random_state=8688,
                                                                   return_df=True,
                                                                   sigma=None,
                                                                   verbose=0))),
                ('low_variance',
                 TransformerWrapper(exclude=[], include=None,
                                    transformer=VarianceThreshold(threshold=0)))],
         verbose=False)
2022-09-10 22:01:37,049:INFO:Creating final display dataframe.
2022-09-10 22:01:37,625:INFO:Setup display_container:                     Description                                     Value
0                    Session id                                      8688
1                        Target                                     class
2                   Target type                                Multiclass
3                Target mapping  covid: 0, seloturismo: 1, tuberculose: 2
4           Original data shape                                 (2142, 2)
5        Transformed data shape                                 (2142, 2)
6   Transformed train set shape                                 (1499, 2)
7    Transformed test set shape                                  (643, 2)
8          Categorical features                                         1
9                    Preprocess                                      True
10              Imputation type                                    simple
11           Numeric imputation                                      mean
12       Categorical imputation                                  constant
13     Maximum one-hot encoding                                         5
14              Encoding method                                      None
15       Low variance threshold                                         0
16               Fold Generator                           StratifiedKFold
17                  Fold Number                                        10
18                     CPU Jobs                                        -1
19                      Use GPU                                     False
20               Log Experiment                                     False
21              Experiment Name                          clf-default-name
22                          USI                                      43af
2022-09-10 22:01:37,717:WARNING:No module named 'xgboost'.
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-09-10 22:01:37,718:WARNING:No module named 'catboost'.
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-09-10 22:01:37,802:WARNING:No module named 'xgboost'.
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-09-10 22:01:37,803:WARNING:No module named 'catboost'.
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-09-10 22:01:37,809:INFO:setup() successfully completed in 1.44s...............
2022-09-10 22:01:37,865:INFO:Initializing compare_models()
2022-09-10 22:01:37,865:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001DAF6BE5E50>, include=None, fold=None, round=4, cross_validation=True, sort=Accuracy, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x000001DAF6BE5E50>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engines': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2022-09-10 22:01:37,865:INFO:Checking exceptions
2022-09-10 22:01:37,868:INFO:Preparing display monitor
2022-09-10 22:01:37,903:INFO:Initializing Logistic Regression
2022-09-10 22:01:37,903:INFO:Total runtime is 0.0 minutes
2022-09-10 22:01:37,906:INFO:SubProcess create_model() called ==================================
2022-09-10 22:01:37,906:INFO:Initializing create_model()
2022-09-10 22:01:37,906:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001DAF6BE5E50>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001DAF6BE5850>, model_only=True, return_train_score=False, kwargs={})
2022-09-10 22:01:37,906:INFO:Checking exceptions
2022-09-10 22:01:37,909:INFO:Importing libraries
2022-09-10 22:01:37,909:INFO:Copying training dataset
2022-09-10 22:01:37,912:INFO:Defining folds
2022-09-10 22:01:37,912:INFO:Declaring metric variables
2022-09-10 22:01:37,914:INFO:Importing untrained model
2022-09-10 22:01:37,918:INFO:Logistic Regression Imported successfully
2022-09-10 22:01:37,924:INFO:Starting cross validation
2022-09-10 22:01:37,925:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-09-10 22:01:38,711:INFO:Calculating mean and std
2022-09-10 22:01:38,712:INFO:Creating metrics dataframe
2022-09-10 22:01:38,715:INFO:Uploading results into container
2022-09-10 22:01:38,715:INFO:Uploading model into container now
2022-09-10 22:01:38,715:INFO:master_model_container: 1
2022-09-10 22:01:38,716:INFO:display_container: 2
2022-09-10 22:01:38,716:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=8688, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2022-09-10 22:01:38,716:INFO:create_model() successfully completed......................................
2022-09-10 22:01:38,829:INFO:SubProcess create_model() end ==================================
2022-09-10 22:01:38,829:INFO:Creating metrics dataframe
2022-09-10 22:01:38,837:INFO:Initializing K Neighbors Classifier
2022-09-10 22:01:38,837:INFO:Total runtime is 0.015564147631327312 minutes
2022-09-10 22:01:38,840:INFO:SubProcess create_model() called ==================================
2022-09-10 22:01:38,840:INFO:Initializing create_model()
2022-09-10 22:01:38,840:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001DAF6BE5E50>, estimator=knn, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001DAF6BE5850>, model_only=True, return_train_score=False, kwargs={})
2022-09-10 22:01:38,840:INFO:Checking exceptions
2022-09-10 22:01:38,842:INFO:Importing libraries
2022-09-10 22:01:38,842:INFO:Copying training dataset
2022-09-10 22:01:38,843:INFO:Defining folds
2022-09-10 22:01:38,843:INFO:Declaring metric variables
2022-09-10 22:01:38,846:INFO:Importing untrained model
2022-09-10 22:01:38,849:INFO:K Neighbors Classifier Imported successfully
2022-09-10 22:01:38,855:INFO:Starting cross validation
2022-09-10 22:01:38,856:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-09-10 22:01:39,191:INFO:Calculating mean and std
2022-09-10 22:01:39,193:INFO:Creating metrics dataframe
2022-09-10 22:01:39,196:INFO:Uploading results into container
2022-09-10 22:01:39,197:INFO:Uploading model into container now
2022-09-10 22:01:39,197:INFO:master_model_container: 2
2022-09-10 22:01:39,197:INFO:display_container: 2
2022-09-10 22:01:39,197:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2022-09-10 22:01:39,197:INFO:create_model() successfully completed......................................
2022-09-10 22:01:39,326:INFO:SubProcess create_model() end ==================================
2022-09-10 22:01:39,326:INFO:Creating metrics dataframe
2022-09-10 22:01:39,334:INFO:Initializing Naive Bayes
2022-09-10 22:01:39,335:INFO:Total runtime is 0.02387169599533081 minutes
2022-09-10 22:01:39,338:INFO:SubProcess create_model() called ==================================
2022-09-10 22:01:39,338:INFO:Initializing create_model()
2022-09-10 22:01:39,338:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001DAF6BE5E50>, estimator=nb, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001DAF6BE5850>, model_only=True, return_train_score=False, kwargs={})
2022-09-10 22:01:39,338:INFO:Checking exceptions
2022-09-10 22:01:39,340:INFO:Importing libraries
2022-09-10 22:01:39,340:INFO:Copying training dataset
2022-09-10 22:01:39,343:INFO:Defining folds
2022-09-10 22:01:39,343:INFO:Declaring metric variables
2022-09-10 22:01:39,346:INFO:Importing untrained model
2022-09-10 22:01:39,349:INFO:Naive Bayes Imported successfully
2022-09-10 22:01:39,355:INFO:Starting cross validation
2022-09-10 22:01:39,356:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-09-10 22:01:39,617:INFO:Calculating mean and std
2022-09-10 22:01:39,618:INFO:Creating metrics dataframe
2022-09-10 22:01:39,621:INFO:Uploading results into container
2022-09-10 22:01:39,622:INFO:Uploading model into container now
2022-09-10 22:01:39,622:INFO:master_model_container: 3
2022-09-10 22:01:39,622:INFO:display_container: 2
2022-09-10 22:01:39,622:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2022-09-10 22:01:39,622:INFO:create_model() successfully completed......................................
2022-09-10 22:01:39,738:INFO:SubProcess create_model() end ==================================
2022-09-10 22:01:39,738:INFO:Creating metrics dataframe
2022-09-10 22:01:39,747:INFO:Initializing Decision Tree Classifier
2022-09-10 22:01:39,747:INFO:Total runtime is 0.030744608243306475 minutes
2022-09-10 22:01:39,750:INFO:SubProcess create_model() called ==================================
2022-09-10 22:01:39,751:INFO:Initializing create_model()
2022-09-10 22:01:39,751:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001DAF6BE5E50>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001DAF6BE5850>, model_only=True, return_train_score=False, kwargs={})
2022-09-10 22:01:39,751:INFO:Checking exceptions
2022-09-10 22:01:39,752:INFO:Importing libraries
2022-09-10 22:01:39,752:INFO:Copying training dataset
2022-09-10 22:01:39,755:INFO:Defining folds
2022-09-10 22:01:39,755:INFO:Declaring metric variables
2022-09-10 22:01:39,758:INFO:Importing untrained model
2022-09-10 22:01:39,761:INFO:Decision Tree Classifier Imported successfully
2022-09-10 22:01:39,767:INFO:Starting cross validation
2022-09-10 22:01:39,768:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-09-10 22:01:40,064:INFO:Calculating mean and std
2022-09-10 22:01:40,065:INFO:Creating metrics dataframe
2022-09-10 22:01:40,068:INFO:Uploading results into container
2022-09-10 22:01:40,069:INFO:Uploading model into container now
2022-09-10 22:01:40,069:INFO:master_model_container: 4
2022-09-10 22:01:40,069:INFO:display_container: 2
2022-09-10 22:01:40,070:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=8688, splitter='best')
2022-09-10 22:01:40,070:INFO:create_model() successfully completed......................................
2022-09-10 22:01:40,181:INFO:SubProcess create_model() end ==================================
2022-09-10 22:01:40,182:INFO:Creating metrics dataframe
2022-09-10 22:01:40,191:INFO:Initializing SVM - Linear Kernel
2022-09-10 22:01:40,191:INFO:Total runtime is 0.03813466231028239 minutes
2022-09-10 22:01:40,194:INFO:SubProcess create_model() called ==================================
2022-09-10 22:01:40,195:INFO:Initializing create_model()
2022-09-10 22:01:40,195:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001DAF6BE5E50>, estimator=svm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001DAF6BE5850>, model_only=True, return_train_score=False, kwargs={})
2022-09-10 22:01:40,195:INFO:Checking exceptions
2022-09-10 22:01:40,196:INFO:Importing libraries
2022-09-10 22:01:40,196:INFO:Copying training dataset
2022-09-10 22:01:40,199:INFO:Defining folds
2022-09-10 22:01:40,199:INFO:Declaring metric variables
2022-09-10 22:01:40,202:INFO:Importing untrained model
2022-09-10 22:01:40,206:INFO:SVM - Linear Kernel Imported successfully
2022-09-10 22:01:40,211:INFO:Starting cross validation
2022-09-10 22:01:40,212:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-09-10 22:01:40,421:INFO:Calculating mean and std
2022-09-10 22:01:40,423:INFO:Creating metrics dataframe
2022-09-10 22:01:40,426:INFO:Uploading results into container
2022-09-10 22:01:40,427:INFO:Uploading model into container now
2022-09-10 22:01:40,427:INFO:master_model_container: 5
2022-09-10 22:01:40,427:INFO:display_container: 2
2022-09-10 22:01:40,428:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=8688, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2022-09-10 22:01:40,428:INFO:create_model() successfully completed......................................
2022-09-10 22:01:40,541:INFO:SubProcess create_model() end ==================================
2022-09-10 22:01:40,541:INFO:Creating metrics dataframe
2022-09-10 22:01:40,551:INFO:Initializing Ridge Classifier
2022-09-10 22:01:40,551:INFO:Total runtime is 0.04414012432098389 minutes
2022-09-10 22:01:40,554:INFO:SubProcess create_model() called ==================================
2022-09-10 22:01:40,554:INFO:Initializing create_model()
2022-09-10 22:01:40,554:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001DAF6BE5E50>, estimator=ridge, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001DAF6BE5850>, model_only=True, return_train_score=False, kwargs={})
2022-09-10 22:01:40,554:INFO:Checking exceptions
2022-09-10 22:01:40,556:INFO:Importing libraries
2022-09-10 22:01:40,556:INFO:Copying training dataset
2022-09-10 22:01:40,559:INFO:Defining folds
2022-09-10 22:01:40,559:INFO:Declaring metric variables
2022-09-10 22:01:40,562:INFO:Importing untrained model
2022-09-10 22:01:40,565:INFO:Ridge Classifier Imported successfully
2022-09-10 22:01:40,571:INFO:Starting cross validation
2022-09-10 22:01:40,572:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-09-10 22:01:40,760:INFO:Calculating mean and std
2022-09-10 22:01:40,761:INFO:Creating metrics dataframe
2022-09-10 22:01:40,764:INFO:Uploading results into container
2022-09-10 22:01:40,765:INFO:Uploading model into container now
2022-09-10 22:01:40,765:INFO:master_model_container: 6
2022-09-10 22:01:40,765:INFO:display_container: 2
2022-09-10 22:01:40,765:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, normalize='deprecated', positive=False,
                random_state=8688, solver='auto', tol=0.001)
2022-09-10 22:01:40,765:INFO:create_model() successfully completed......................................
2022-09-10 22:01:40,878:INFO:SubProcess create_model() end ==================================
2022-09-10 22:01:40,878:INFO:Creating metrics dataframe
2022-09-10 22:01:40,889:INFO:Initializing Random Forest Classifier
2022-09-10 22:01:40,889:INFO:Total runtime is 0.04977858463923136 minutes
2022-09-10 22:01:40,892:INFO:SubProcess create_model() called ==================================
2022-09-10 22:01:40,892:INFO:Initializing create_model()
2022-09-10 22:01:40,892:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001DAF6BE5E50>, estimator=rf, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001DAF6BE5850>, model_only=True, return_train_score=False, kwargs={})
2022-09-10 22:01:40,892:INFO:Checking exceptions
2022-09-10 22:01:40,894:INFO:Importing libraries
2022-09-10 22:01:40,894:INFO:Copying training dataset
2022-09-10 22:01:40,896:INFO:Defining folds
2022-09-10 22:01:40,896:INFO:Declaring metric variables
2022-09-10 22:01:40,900:INFO:Importing untrained model
2022-09-10 22:01:40,903:INFO:Random Forest Classifier Imported successfully
2022-09-10 22:01:40,909:INFO:Starting cross validation
2022-09-10 22:01:40,910:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-09-10 22:01:41,515:INFO:Calculating mean and std
2022-09-10 22:01:41,516:INFO:Creating metrics dataframe
2022-09-10 22:01:41,520:INFO:Uploading results into container
2022-09-10 22:01:41,520:INFO:Uploading model into container now
2022-09-10 22:01:41,521:INFO:master_model_container: 7
2022-09-10 22:01:41,521:INFO:display_container: 2
2022-09-10 22:01:41,521:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=8688, verbose=0, warm_start=False)
2022-09-10 22:01:41,521:INFO:create_model() successfully completed......................................
2022-09-10 22:01:41,635:INFO:SubProcess create_model() end ==================================
2022-09-10 22:01:41,635:INFO:Creating metrics dataframe
2022-09-10 22:01:41,646:INFO:Initializing Quadratic Discriminant Analysis
2022-09-10 22:01:41,646:INFO:Total runtime is 0.06239004532496134 minutes
2022-09-10 22:01:41,649:INFO:SubProcess create_model() called ==================================
2022-09-10 22:01:41,649:INFO:Initializing create_model()
2022-09-10 22:01:41,649:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001DAF6BE5E50>, estimator=qda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001DAF6BE5850>, model_only=True, return_train_score=False, kwargs={})
2022-09-10 22:01:41,649:INFO:Checking exceptions
2022-09-10 22:01:41,651:INFO:Importing libraries
2022-09-10 22:01:41,651:INFO:Copying training dataset
2022-09-10 22:01:41,654:INFO:Defining folds
2022-09-10 22:01:41,654:INFO:Declaring metric variables
2022-09-10 22:01:41,657:INFO:Importing untrained model
2022-09-10 22:01:41,660:INFO:Quadratic Discriminant Analysis Imported successfully
2022-09-10 22:01:41,666:INFO:Starting cross validation
2022-09-10 22:01:41,667:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-09-10 22:01:41,921:INFO:Calculating mean and std
2022-09-10 22:01:41,922:INFO:Creating metrics dataframe
2022-09-10 22:01:41,925:INFO:Uploading results into container
2022-09-10 22:01:41,926:INFO:Uploading model into container now
2022-09-10 22:01:41,926:INFO:master_model_container: 8
2022-09-10 22:01:41,926:INFO:display_container: 2
2022-09-10 22:01:41,926:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2022-09-10 22:01:41,926:INFO:create_model() successfully completed......................................
2022-09-10 22:01:42,050:INFO:SubProcess create_model() end ==================================
2022-09-10 22:01:42,051:INFO:Creating metrics dataframe
2022-09-10 22:01:42,061:INFO:Initializing Ada Boost Classifier
2022-09-10 22:01:42,062:INFO:Total runtime is 0.06932968298594157 minutes
2022-09-10 22:01:42,064:INFO:SubProcess create_model() called ==================================
2022-09-10 22:01:42,065:INFO:Initializing create_model()
2022-09-10 22:01:42,065:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001DAF6BE5E50>, estimator=ada, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001DAF6BE5850>, model_only=True, return_train_score=False, kwargs={})
2022-09-10 22:01:42,065:INFO:Checking exceptions
2022-09-10 22:01:42,066:INFO:Importing libraries
2022-09-10 22:01:42,066:INFO:Copying training dataset
2022-09-10 22:01:42,069:INFO:Defining folds
2022-09-10 22:01:42,069:INFO:Declaring metric variables
2022-09-10 22:01:42,072:INFO:Importing untrained model
2022-09-10 22:01:42,076:INFO:Ada Boost Classifier Imported successfully
2022-09-10 22:01:42,081:INFO:Starting cross validation
2022-09-10 22:01:42,082:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-09-10 22:01:42,504:INFO:Calculating mean and std
2022-09-10 22:01:42,506:INFO:Creating metrics dataframe
2022-09-10 22:01:42,509:INFO:Uploading results into container
2022-09-10 22:01:42,510:INFO:Uploading model into container now
2022-09-10 22:01:42,510:INFO:master_model_container: 9
2022-09-10 22:01:42,510:INFO:display_container: 2
2022-09-10 22:01:42,510:INFO:AdaBoostClassifier(algorithm='SAMME.R', base_estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=8688)
2022-09-10 22:01:42,510:INFO:create_model() successfully completed......................................
2022-09-10 22:01:42,627:INFO:SubProcess create_model() end ==================================
2022-09-10 22:01:42,628:INFO:Creating metrics dataframe
2022-09-10 22:01:42,638:INFO:Initializing Gradient Boosting Classifier
2022-09-10 22:01:42,638:INFO:Total runtime is 0.07892174323399861 minutes
2022-09-10 22:01:42,642:INFO:SubProcess create_model() called ==================================
2022-09-10 22:01:42,642:INFO:Initializing create_model()
2022-09-10 22:01:42,642:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001DAF6BE5E50>, estimator=gbc, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001DAF6BE5850>, model_only=True, return_train_score=False, kwargs={})
2022-09-10 22:01:42,642:INFO:Checking exceptions
2022-09-10 22:01:42,643:INFO:Importing libraries
2022-09-10 22:01:42,643:INFO:Copying training dataset
2022-09-10 22:01:42,646:INFO:Defining folds
2022-09-10 22:01:42,647:INFO:Declaring metric variables
2022-09-10 22:01:42,649:INFO:Importing untrained model
2022-09-10 22:01:42,653:INFO:Gradient Boosting Classifier Imported successfully
2022-09-10 22:01:42,659:INFO:Starting cross validation
2022-09-10 22:01:42,659:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-09-10 22:01:43,434:INFO:Calculating mean and std
2022-09-10 22:01:43,435:INFO:Creating metrics dataframe
2022-09-10 22:01:43,438:INFO:Uploading results into container
2022-09-10 22:01:43,439:INFO:Uploading model into container now
2022-09-10 22:01:43,439:INFO:master_model_container: 10
2022-09-10 22:01:43,439:INFO:display_container: 2
2022-09-10 22:01:43,439:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=8688, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2022-09-10 22:01:43,440:INFO:create_model() successfully completed......................................
2022-09-10 22:01:43,552:INFO:SubProcess create_model() end ==================================
2022-09-10 22:01:43,552:INFO:Creating metrics dataframe
2022-09-10 22:01:43,564:INFO:Initializing Linear Discriminant Analysis
2022-09-10 22:01:43,564:INFO:Total runtime is 0.09435243209203084 minutes
2022-09-10 22:01:43,567:INFO:SubProcess create_model() called ==================================
2022-09-10 22:01:43,567:INFO:Initializing create_model()
2022-09-10 22:01:43,567:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001DAF6BE5E50>, estimator=lda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001DAF6BE5850>, model_only=True, return_train_score=False, kwargs={})
2022-09-10 22:01:43,567:INFO:Checking exceptions
2022-09-10 22:01:43,569:INFO:Importing libraries
2022-09-10 22:01:43,569:INFO:Copying training dataset
2022-09-10 22:01:43,572:INFO:Defining folds
2022-09-10 22:01:43,572:INFO:Declaring metric variables
2022-09-10 22:01:43,575:INFO:Importing untrained model
2022-09-10 22:01:43,578:INFO:Linear Discriminant Analysis Imported successfully
2022-09-10 22:01:43,584:INFO:Starting cross validation
2022-09-10 22:01:43,586:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-09-10 22:01:43,849:INFO:Calculating mean and std
2022-09-10 22:01:43,851:INFO:Creating metrics dataframe
2022-09-10 22:01:43,854:INFO:Uploading results into container
2022-09-10 22:01:43,855:INFO:Uploading model into container now
2022-09-10 22:01:43,855:INFO:master_model_container: 11
2022-09-10 22:01:43,855:INFO:display_container: 2
2022-09-10 22:01:43,855:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2022-09-10 22:01:43,856:INFO:create_model() successfully completed......................................
2022-09-10 22:01:43,968:INFO:SubProcess create_model() end ==================================
2022-09-10 22:01:43,968:INFO:Creating metrics dataframe
2022-09-10 22:01:43,980:INFO:Initializing Extra Trees Classifier
2022-09-10 22:01:43,980:INFO:Total runtime is 0.10129206975301107 minutes
2022-09-10 22:01:43,982:INFO:SubProcess create_model() called ==================================
2022-09-10 22:01:43,983:INFO:Initializing create_model()
2022-09-10 22:01:43,983:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001DAF6BE5E50>, estimator=et, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001DAF6BE5850>, model_only=True, return_train_score=False, kwargs={})
2022-09-10 22:01:43,983:INFO:Checking exceptions
2022-09-10 22:01:43,984:INFO:Importing libraries
2022-09-10 22:01:43,984:INFO:Copying training dataset
2022-09-10 22:01:43,987:INFO:Defining folds
2022-09-10 22:01:43,987:INFO:Declaring metric variables
2022-09-10 22:01:43,990:INFO:Importing untrained model
2022-09-10 22:01:43,994:INFO:Extra Trees Classifier Imported successfully
2022-09-10 22:01:44,000:INFO:Starting cross validation
2022-09-10 22:01:44,001:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-09-10 22:01:44,542:INFO:Calculating mean and std
2022-09-10 22:01:44,544:INFO:Creating metrics dataframe
2022-09-10 22:01:44,547:INFO:Uploading results into container
2022-09-10 22:01:44,548:INFO:Uploading model into container now
2022-09-10 22:01:44,548:INFO:master_model_container: 12
2022-09-10 22:01:44,548:INFO:display_container: 2
2022-09-10 22:01:44,548:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     n_estimators=100, n_jobs=-1, oob_score=False,
                     random_state=8688, verbose=0, warm_start=False)
2022-09-10 22:01:44,549:INFO:create_model() successfully completed......................................
2022-09-10 22:01:44,661:INFO:SubProcess create_model() end ==================================
2022-09-10 22:01:44,662:INFO:Creating metrics dataframe
2022-09-10 22:01:44,674:INFO:Initializing Light Gradient Boosting Machine
2022-09-10 22:01:44,674:INFO:Total runtime is 0.11285258928934733 minutes
2022-09-10 22:01:44,677:INFO:SubProcess create_model() called ==================================
2022-09-10 22:01:44,677:INFO:Initializing create_model()
2022-09-10 22:01:44,677:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001DAF6BE5E50>, estimator=lightgbm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001DAF6BE5850>, model_only=True, return_train_score=False, kwargs={})
2022-09-10 22:01:44,677:INFO:Checking exceptions
2022-09-10 22:01:44,679:INFO:Importing libraries
2022-09-10 22:01:44,679:INFO:Copying training dataset
2022-09-10 22:01:44,681:INFO:Defining folds
2022-09-10 22:01:44,682:INFO:Declaring metric variables
2022-09-10 22:01:44,685:INFO:Importing untrained model
2022-09-10 22:01:44,688:INFO:Light Gradient Boosting Machine Imported successfully
2022-09-10 22:01:44,694:INFO:Starting cross validation
2022-09-10 22:01:44,695:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-09-10 22:01:45,013:INFO:Calculating mean and std
2022-09-10 22:01:45,015:INFO:Creating metrics dataframe
2022-09-10 22:01:45,018:INFO:Uploading results into container
2022-09-10 22:01:45,018:INFO:Uploading model into container now
2022-09-10 22:01:45,019:INFO:master_model_container: 13
2022-09-10 22:01:45,019:INFO:display_container: 2
2022-09-10 22:01:45,019:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=8688, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0)
2022-09-10 22:01:45,019:INFO:create_model() successfully completed......................................
2022-09-10 22:01:45,132:INFO:SubProcess create_model() end ==================================
2022-09-10 22:01:45,132:INFO:Creating metrics dataframe
2022-09-10 22:01:45,144:INFO:Initializing Dummy Classifier
2022-09-10 22:01:45,144:INFO:Total runtime is 0.12069304386774699 minutes
2022-09-10 22:01:45,147:INFO:SubProcess create_model() called ==================================
2022-09-10 22:01:45,147:INFO:Initializing create_model()
2022-09-10 22:01:45,148:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001DAF6BE5E50>, estimator=dummy, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001DAF6BE5850>, model_only=True, return_train_score=False, kwargs={})
2022-09-10 22:01:45,148:INFO:Checking exceptions
2022-09-10 22:01:45,149:INFO:Importing libraries
2022-09-10 22:01:45,149:INFO:Copying training dataset
2022-09-10 22:01:45,152:INFO:Defining folds
2022-09-10 22:01:45,152:INFO:Declaring metric variables
2022-09-10 22:01:45,155:INFO:Importing untrained model
2022-09-10 22:01:45,158:INFO:Dummy Classifier Imported successfully
2022-09-10 22:01:45,164:INFO:Starting cross validation
2022-09-10 22:01:45,165:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-09-10 22:01:45,413:INFO:Calculating mean and std
2022-09-10 22:01:45,415:INFO:Creating metrics dataframe
2022-09-10 22:01:45,418:INFO:Uploading results into container
2022-09-10 22:01:45,418:INFO:Uploading model into container now
2022-09-10 22:01:45,419:INFO:master_model_container: 14
2022-09-10 22:01:45,419:INFO:display_container: 2
2022-09-10 22:01:45,419:INFO:DummyClassifier(constant=None, random_state=8688, strategy='prior')
2022-09-10 22:01:45,419:INFO:create_model() successfully completed......................................
2022-09-10 22:01:45,532:INFO:SubProcess create_model() end ==================================
2022-09-10 22:01:45,533:INFO:Creating metrics dataframe
2022-09-10 22:01:45,554:INFO:Initializing create_model()
2022-09-10 22:01:45,554:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001DAF6BE5E50>, estimator=KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform'), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2022-09-10 22:01:45,555:INFO:Checking exceptions
2022-09-10 22:01:45,558:INFO:Importing libraries
2022-09-10 22:01:45,558:INFO:Copying training dataset
2022-09-10 22:01:45,560:INFO:Defining folds
2022-09-10 22:01:45,560:INFO:Declaring metric variables
2022-09-10 22:01:45,560:INFO:Importing untrained model
2022-09-10 22:01:45,560:INFO:Declaring custom model
2022-09-10 22:01:45,560:INFO:K Neighbors Classifier Imported successfully
2022-09-10 22:01:45,561:INFO:Cross validation set to False
2022-09-10 22:01:45,561:INFO:Fitting Model
2022-09-10 22:01:45,711:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2022-09-10 22:01:45,711:INFO:create_model() successfully completed......................................
2022-09-10 22:01:45,849:INFO:master_model_container: 14
2022-09-10 22:01:45,849:INFO:display_container: 2
2022-09-10 22:01:45,850:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2022-09-10 22:01:45,850:INFO:compare_models() successfully completed......................................
2022-09-10 22:01:45,994:INFO:Initializing evaluate_model()
2022-09-10 22:01:45,995:INFO:evaluate_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001DAF6BE5E50>, estimator=KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform'), fold=None, fit_kwargs=None, plot_kwargs=None, feature_name=None, groups=None, use_train_data=False)
2022-09-10 22:01:46,011:INFO:Initializing plot_model()
2022-09-10 22:01:46,011:INFO:plot_model(plot=pipeline, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform'), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001DAF6BE5E50>, system=True)
2022-09-10 22:01:46,011:INFO:Checking exceptions
2022-09-10 22:01:46,015:INFO:Preloading libraries
2022-09-10 22:01:46,015:INFO:Copying training dataset
2022-09-10 22:01:46,015:INFO:Plot type: pipeline
2022-09-10 22:01:46,149:INFO:Visual Rendered Successfully
2022-09-10 22:01:46,261:INFO:plot_model() successfully completed......................................
2022-09-10 22:01:46,336:INFO:Initializing plot_model()
2022-09-10 22:01:46,336:INFO:plot_model(plot=auc, fold=None, use_train_data=False, verbose=True, display=None, display_format=None, estimator=KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform'), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001DAF6BE5E50>, system=True)
2022-09-10 22:01:46,336:INFO:Checking exceptions
2022-09-10 22:01:46,340:INFO:Preloading libraries
2022-09-10 22:01:46,341:INFO:Copying training dataset
2022-09-10 22:01:46,341:INFO:Plot type: auc
2022-09-10 22:01:46,475:INFO:Fitting Model
2022-09-10 22:01:46,476:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\base.py:450: UserWarning: X does not have valid feature names, but KNeighborsClassifier was fitted with feature names
  warnings.warn(

2022-09-10 22:01:46,476:INFO:Scoring test/hold-out set
2022-09-10 22:01:46,675:INFO:Visual Rendered Successfully
2022-09-10 22:01:46,790:INFO:plot_model() successfully completed......................................
2022-09-10 22:01:46,827:INFO:Initializing predict_model()
2022-09-10 22:01:46,827:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001DAF6BE5E50>, estimator=KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform'), probability_threshold=None, encoded_labels=False, raw_score=False, drift_report=False, round=4, verbose=True, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x000001DAF6BE3280>)
2022-09-10 22:01:46,827:INFO:Checking exceptions
2022-09-10 22:01:46,827:INFO:Preloading libraries
2022-09-10 22:01:46,907:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:01:46,908:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:01:46,909:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:01:46,909:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:01:46,910:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:01:46,911:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:01:47,072:INFO:Initializing predict_model()
2022-09-10 22:01:47,073:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001DAF6BE5E50>, estimator=KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform'), probability_threshold=None, encoded_labels=False, raw_score=False, drift_report=False, round=4, verbose=True, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x000001DAF6AC9F70>)
2022-09-10 22:01:47,073:INFO:Checking exceptions
2022-09-10 22:01:47,073:INFO:Preloading libraries
2022-09-10 22:01:47,074:INFO:Set up data.
2022-09-10 22:01:47,241:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:01:47,242:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:01:47,243:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:01:47,243:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:01:47,244:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:01:47,245:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:01:47,397:INFO:Initializing predict_model()
2022-09-10 22:01:47,397:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001DAF6BE5E50>, estimator=KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform'), probability_threshold=None, encoded_labels=False, raw_score=True, drift_report=False, round=4, verbose=True, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x000001DAF6AC9820>)
2022-09-10 22:01:47,398:INFO:Checking exceptions
2022-09-10 22:01:47,398:INFO:Preloading libraries
2022-09-10 22:01:47,399:INFO:Set up data.
2022-09-10 22:01:47,524:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:01:47,525:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:01:47,525:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:01:47,526:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:01:47,527:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:01:47,528:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:01:47,722:INFO:Initializing save_model()
2022-09-10 22:01:47,722:INFO:save_model(model=KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform'), model_name=my_best_pipeline, prep_pipe_=Pipeline(memory=Memory(location=C:\Users\bruno\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              missing_values=nan,
                                                              strategy='m...
                ('rest_encoding',
                 TransformerWrapper(exclude=None, include=['input'],
                                    transformer=LeaveOneOutEncoder(cols=['input'],
                                                                   drop_invariant=False,
                                                                   handle_missing='return_nan',
                                                                   handle_unknown='value',
                                                                   random_state=8688,
                                                                   return_df=True,
                                                                   sigma=None,
                                                                   verbose=0))),
                ('low_variance',
                 TransformerWrapper(exclude=[], include=None,
                                    transformer=VarianceThreshold(threshold=0)))],
         verbose=False), verbose=True, use_case=MLUsecase.CLASSIFICATION, kwargs={})
2022-09-10 22:01:47,723:INFO:Adding model into prep_pipe
2022-09-10 22:01:47,729:INFO:my_best_pipeline.pkl saved in current working directory
2022-09-10 22:01:47,737:INFO:Pipeline(memory=Memory(location=C:\Users\bruno\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              missing_values=nan,
                                                              strategy='m...
                                                                   handle_unknown='value',
                                                                   random_state=8688,
                                                                   return_df=True,
                                                                   sigma=None,
                                                                   verbose=0))),
                ('low_variance',
                 TransformerWrapper(exclude=[], include=None,
                                    transformer=VarianceThreshold(threshold=0))),
                ['trained_model',
                 KNeighborsClassifier(algorithm='auto', leaf_size=30,
                                      metric='minkowski', metric_params=None,
                                      n_jobs=-1, n_neighbors=5, p=2,
                                      weights='uniform')]],
         verbose=False)
2022-09-10 22:01:47,737:INFO:save_model() successfully completed......................................
2022-09-10 22:02:20,412:INFO:Initializing load_model()
2022-09-10 22:02:20,412:INFO:load_model(model_name=my_best_pipeline, platform=None, authentication=None, verbose=True)
2022-09-10 22:07:05,174:INFO:Initializing create_model()
2022-09-10 22:07:05,174:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001DAF6BE5E50>, estimator=lr, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=True, kwargs={})
2022-09-10 22:07:05,174:INFO:Checking exceptions
2022-09-10 22:07:05,201:INFO:Importing libraries
2022-09-10 22:07:05,201:INFO:Copying training dataset
2022-09-10 22:07:05,205:INFO:Defining folds
2022-09-10 22:07:05,205:INFO:Declaring metric variables
2022-09-10 22:07:05,208:INFO:Importing untrained model
2022-09-10 22:07:05,211:INFO:Logistic Regression Imported successfully
2022-09-10 22:07:05,218:INFO:Starting cross validation
2022-09-10 22:07:05,219:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-09-10 22:07:08,095:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:07:08,099:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:07:08,130:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:07:08,134:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:07:08,137:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:07:08,157:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:07:08,165:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:07:08,167:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:07:08,167:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:07:08,167:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-09-10 22:07:08,168:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:07:08,169:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:07:08,169:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-09-10 22:07:08,170:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:07:08,171:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:07:08,171:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:07:08,173:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:07:08,179:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:07:08,183:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:07:08,189:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:07:08,210:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:07:08,212:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:07:08,213:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-09-10 22:07:08,214:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:07:08,215:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:07:08,216:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:07:08,218:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:07:08,225:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:07:08,227:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:07:08,228:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-09-10 22:07:08,229:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:07:08,231:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:07:08,252:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:07:08,254:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:07:08,255:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-09-10 22:07:08,256:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:07:08,258:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:07:08,258:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:07:08,260:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:07:08,261:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-09-10 22:07:08,262:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:07:08,264:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:07:08,321:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:07:08,326:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:07:08,378:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:07:08,382:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:07:08,392:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:07:08,394:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:07:08,398:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:07:08,400:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:07:08,402:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-09-10 22:07:08,403:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-09-10 22:07:08,406:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:07:08,406:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:07:08,414:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:07:08,421:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:07:08,439:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:07:08,446:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:07:08,448:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:07:08,449:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-09-10 22:07:08,452:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:07:08,454:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:07:08,458:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-09-10 22:07:08,461:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:07:08,482:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:07:08,489:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:07:08,489:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:07:08,493:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-09-10 22:07:08,495:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:07:08,498:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:07:08,498:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-09-10 22:07:08,501:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:07:08,508:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:07:08,510:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:07:08,541:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:07:08,545:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:07:08,552:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:07:08,563:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:07:08,575:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:07:08,577:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:07:08,578:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-09-10 22:07:08,579:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:07:08,579:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:07:08,580:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:07:08,581:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-09-10 22:07:08,581:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:07:08,582:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:07:08,584:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:07:08,585:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:07:08,595:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:07:08,620:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:07:08,622:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:07:08,623:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-09-10 22:07:08,624:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:07:08,626:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:07:08,629:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:07:08,631:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:07:08,631:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-09-10 22:07:08,632:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:07:08,635:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:07:08,723:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:07:08,724:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:07:08,767:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:07:08,776:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:07:08,785:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:07:08,785:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:07:08,791:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:07:08,791:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:07:08,794:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-09-10 22:07:08,794:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-09-10 22:07:08,796:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:07:08,797:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:07:08,826:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:07:08,832:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:07:08,835:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-09-10 22:07:08,838:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:07:08,841:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:07:08,844:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-09-10 22:07:08,847:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:07:08,856:INFO:Calculating mean and std
2022-09-10 22:07:08,858:INFO:Creating metrics dataframe
2022-09-10 22:07:08,863:INFO:Finalizing model
2022-09-10 22:07:08,933:INFO:Initializing predict_model()
2022-09-10 22:07:08,933:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001DAF6BE5E50>, estimator=Pipeline(memory=Memory(location=C:\Users\bruno\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              missing_values=nan,
                                                              strategy='m...
                 TransformerWrapper(exclude=[], include=None,
                                    transformer=VarianceThreshold(threshold=0))),
                ('actual_estimator',
                 LogisticRegression(C=1.0, class_weight=None, dual=False,
                                    fit_intercept=True, intercept_scaling=1,
                                    l1_ratio=None, max_iter=1000,
                                    multi_class='auto', n_jobs=None,
                                    penalty='l2', random_state=8688,
                                    solver='lbfgs', tol=0.0001, verbose=0,
                                    warm_start=False))],
         verbose=False), probability_threshold=None, encoded_labels=False, raw_score=False, drift_report=False, round=4, verbose=False, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x000001DAF7013310>)
2022-09-10 22:07:08,933:INFO:Checking exceptions
2022-09-10 22:07:08,933:INFO:Preloading libraries
2022-09-10 22:07:08,933:INFO:Set up data.
2022-09-10 22:07:09,073:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:07:09,074:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:07:09,074:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:07:09,075:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:07:09,076:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:07:09,076:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:07:09,203:INFO:Uploading results into container
2022-09-10 22:07:09,203:INFO:Uploading model into container now
2022-09-10 22:07:09,218:INFO:master_model_container: 15
2022-09-10 22:07:09,218:INFO:display_container: 6
2022-09-10 22:07:09,218:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=8688, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2022-09-10 22:07:09,219:INFO:create_model() successfully completed......................................
2022-09-10 22:07:25,496:INFO:Initializing create_model()
2022-09-10 22:07:25,496:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001DAF6BE5E50>, estimator=cl, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=True, kwargs={})
2022-09-10 22:07:25,496:INFO:Checking exceptions
2022-09-10 22:40:17,780:INFO:Initializing ensemble_model()
2022-09-10 22:40:17,780:INFO:ensemble_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001DAF6BE5E50>, estimator=KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform'), method=Bagging, fold=None, n_estimators=10, round=4, choose_better=True, optimize=Accuracy, fit_kwargs=None, groups=None, probability_threshold=None, verbose=True, return_train_score=False)
2022-09-10 22:40:17,780:INFO:Checking exceptions
2022-09-10 22:40:17,808:INFO:Importing libraries
2022-09-10 22:40:17,808:INFO:Copying training dataset
2022-09-10 22:40:17,808:INFO:Checking base model
2022-09-10 22:40:17,808:INFO:Base model : K Neighbors Classifier
2022-09-10 22:40:17,814:INFO:Importing untrained ensembler
2022-09-10 22:40:17,815:INFO:Ensemble method set to Bagging
2022-09-10 22:40:17,815:INFO:SubProcess create_model() called ==================================
2022-09-10 22:40:17,816:INFO:Initializing create_model()
2022-09-10 22:40:17,816:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001DAF6BE5E50>, estimator=BaggingClassifier(base_estimator=KNeighborsClassifier(algorithm='auto',
                                                      leaf_size=30,
                                                      metric='minkowski',
                                                      metric_params=None,
                                                      n_jobs=-1, n_neighbors=5,
                                                      p=2, weights='uniform'),
                  bootstrap=True, bootstrap_features=False, max_features=1.0,
                  max_samples=1.0, n_estimators=10, n_jobs=None,
                  oob_score=False, random_state=8688, verbose=0,
                  warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001DAF06E6E20>, model_only=True, return_train_score=False, kwargs={})
2022-09-10 22:40:17,816:INFO:Checking exceptions
2022-09-10 22:40:17,818:INFO:Importing libraries
2022-09-10 22:40:17,818:INFO:Copying training dataset
2022-09-10 22:40:17,821:INFO:Defining folds
2022-09-10 22:40:17,821:INFO:Declaring metric variables
2022-09-10 22:40:17,824:INFO:Importing untrained model
2022-09-10 22:40:17,825:INFO:Declaring custom model
2022-09-10 22:40:17,828:INFO:K Neighbors Classifier Imported successfully
2022-09-10 22:40:17,835:INFO:Starting cross validation
2022-09-10 22:40:17,836:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-09-10 22:40:20,776:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:40:20,781:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:40:20,799:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:40:20,826:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:40:20,884:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:40:20,898:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:40:20,906:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:40:20,929:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:40:20,935:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:40:20,961:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:40:20,978:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:40:20,985:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:40:20,987:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:40:20,988:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:40:21,014:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:40:21,016:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:40:21,018:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:40:21,020:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:40:21,046:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:40:21,048:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:40:21,049:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:40:21,055:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:40:21,056:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:40:21,058:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:40:21,071:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:40:21,073:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:40:21,074:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:40:21,102:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:40:21,104:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:40:21,106:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:40:21,122:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:40:21,126:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:40:21,164:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:40:21,173:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:40:21,195:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:40:21,195:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:40:21,235:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:40:21,251:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:40:21,267:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:40:21,269:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:40:21,270:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:40:21,272:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:40:21,273:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:40:21,274:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:40:21,311:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:40:21,312:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:40:21,314:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:40:21,325:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:40:21,326:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:40:21,328:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:40:21,331:INFO:Calculating mean and std
2022-09-10 22:40:21,332:INFO:Creating metrics dataframe
2022-09-10 22:40:21,337:INFO:Finalizing model
2022-09-10 22:40:21,393:INFO:Uploading results into container
2022-09-10 22:40:21,393:INFO:Uploading model into container now
2022-09-10 22:40:21,394:INFO:master_model_container: 16
2022-09-10 22:40:21,394:INFO:display_container: 7
2022-09-10 22:40:21,395:INFO:BaggingClassifier(base_estimator=KNeighborsClassifier(algorithm='auto',
                                                      leaf_size=30,
                                                      metric='minkowski',
                                                      metric_params=None,
                                                      n_jobs=-1, n_neighbors=5,
                                                      p=2, weights='uniform'),
                  bootstrap=True, bootstrap_features=False, max_features=1.0,
                  max_samples=1.0, n_estimators=10, n_jobs=None,
                  oob_score=False, random_state=8688, verbose=0,
                  warm_start=False)
2022-09-10 22:40:21,395:INFO:create_model() successfully completed......................................
2022-09-10 22:40:21,521:INFO:SubProcess create_model() end ==================================
2022-09-10 22:40:21,521:INFO:choose_better activated
2022-09-10 22:40:21,524:INFO:SubProcess create_model() called ==================================
2022-09-10 22:40:21,525:INFO:Initializing create_model()
2022-09-10 22:40:21,525:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001DAF6BE5E50>, estimator=KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform'), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2022-09-10 22:40:21,525:INFO:Checking exceptions
2022-09-10 22:40:21,527:INFO:Importing libraries
2022-09-10 22:40:21,528:INFO:Copying training dataset
2022-09-10 22:40:21,529:INFO:Defining folds
2022-09-10 22:40:21,529:INFO:Declaring metric variables
2022-09-10 22:40:21,529:INFO:Importing untrained model
2022-09-10 22:40:21,530:INFO:Declaring custom model
2022-09-10 22:40:21,530:INFO:K Neighbors Classifier Imported successfully
2022-09-10 22:40:21,530:INFO:Starting cross validation
2022-09-10 22:40:21,531:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-09-10 22:40:21,592:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:40:21,593:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:40:21,596:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:40:21,600:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:40:21,603:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:40:21,616:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:40:21,635:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:40:21,636:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:40:21,640:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:40:21,644:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:40:21,645:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:40:21,660:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:40:21,676:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:40:21,677:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:40:21,677:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:40:21,678:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-09-10 22:40:21,679:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:40:21,679:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:40:21,679:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:40:21,680:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:40:21,681:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:40:21,682:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:40:21,685:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:40:21,686:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:40:21,687:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:40:21,687:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:40:21,689:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:40:21,689:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:40:21,704:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:40:21,705:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:40:21,706:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:40:21,725:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:40:21,726:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:40:21,726:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:40:21,734:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:40:21,764:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:40:21,765:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:40:21,766:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:40:21,775:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:40:21,801:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:40:21,803:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:40:21,803:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:40:21,803:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:40:21,804:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:40:21,804:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:40:21,805:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:40:21,805:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:40:21,806:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:40:21,814:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:40:21,815:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:40:21,817:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:40:21,820:INFO:Calculating mean and std
2022-09-10 22:40:21,820:INFO:Creating metrics dataframe
2022-09-10 22:40:21,822:INFO:Finalizing model
2022-09-10 22:40:21,861:INFO:Uploading results into container
2022-09-10 22:40:21,861:INFO:Uploading model into container now
2022-09-10 22:40:21,861:INFO:master_model_container: 17
2022-09-10 22:40:21,861:INFO:display_container: 8
2022-09-10 22:40:21,862:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2022-09-10 22:40:21,862:INFO:create_model() successfully completed......................................
2022-09-10 22:40:21,983:INFO:SubProcess create_model() end ==================================
2022-09-10 22:40:21,983:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform') result for Accuracy is 0.5978
2022-09-10 22:40:21,984:INFO:BaggingClassifier(base_estimator=KNeighborsClassifier(algorithm='auto',
                                                      leaf_size=30,
                                                      metric='minkowski',
                                                      metric_params=None,
                                                      n_jobs=-1, n_neighbors=5,
                                                      p=2, weights='uniform'),
                  bootstrap=True, bootstrap_features=False, max_features=1.0,
                  max_samples=1.0, n_estimators=10, n_jobs=None,
                  oob_score=False, random_state=8688, verbose=0,
                  warm_start=False) result for Accuracy is 0.6038
2022-09-10 22:40:21,985:INFO:BaggingClassifier(base_estimator=KNeighborsClassifier(algorithm='auto',
                                                      leaf_size=30,
                                                      metric='minkowski',
                                                      metric_params=None,
                                                      n_jobs=-1, n_neighbors=5,
                                                      p=2, weights='uniform'),
                  bootstrap=True, bootstrap_features=False, max_features=1.0,
                  max_samples=1.0, n_estimators=10, n_jobs=None,
                  oob_score=False, random_state=8688, verbose=0,
                  warm_start=False) is best model
2022-09-10 22:40:21,985:INFO:choose_better completed
2022-09-10 22:40:21,994:INFO:master_model_container: 17
2022-09-10 22:40:21,994:INFO:display_container: 7
2022-09-10 22:40:21,995:INFO:BaggingClassifier(base_estimator=KNeighborsClassifier(algorithm='auto',
                                                      leaf_size=30,
                                                      metric='minkowski',
                                                      metric_params=None,
                                                      n_jobs=-1, n_neighbors=5,
                                                      p=2, weights='uniform'),
                  bootstrap=True, bootstrap_features=False, max_features=1.0,
                  max_samples=1.0, n_estimators=10, n_jobs=None,
                  oob_score=False, random_state=8688, verbose=0,
                  warm_start=False)
2022-09-10 22:40:21,996:INFO:ensemble_model() succesfully completed......................................
2022-09-10 22:41:22,284:INFO:Initializing ensemble_model()
2022-09-10 22:41:22,284:INFO:ensemble_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001DAF6BE5E50>, estimator=KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform'), method=Bagging, fold=None, n_estimators=10, round=4, choose_better=True, optimize=Accuracy, fit_kwargs=None, groups=None, probability_threshold=None, verbose=True, return_train_score=False)
2022-09-10 22:41:22,284:INFO:Checking exceptions
2022-09-10 22:41:22,313:INFO:Importing libraries
2022-09-10 22:41:22,313:INFO:Copying training dataset
2022-09-10 22:41:22,313:INFO:Checking base model
2022-09-10 22:41:22,313:INFO:Base model : K Neighbors Classifier
2022-09-10 22:41:22,319:INFO:Importing untrained ensembler
2022-09-10 22:41:22,319:INFO:Ensemble method set to Bagging
2022-09-10 22:41:22,319:INFO:SubProcess create_model() called ==================================
2022-09-10 22:41:22,321:INFO:Initializing create_model()
2022-09-10 22:41:22,321:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001DAF6BE5E50>, estimator=BaggingClassifier(base_estimator=KNeighborsClassifier(algorithm='auto',
                                                      leaf_size=30,
                                                      metric='minkowski',
                                                      metric_params=None,
                                                      n_jobs=-1, n_neighbors=5,
                                                      p=2, weights='uniform'),
                  bootstrap=True, bootstrap_features=False, max_features=1.0,
                  max_samples=1.0, n_estimators=10, n_jobs=None,
                  oob_score=False, random_state=8688, verbose=0,
                  warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001DAF06E6220>, model_only=True, return_train_score=False, kwargs={})
2022-09-10 22:41:22,321:INFO:Checking exceptions
2022-09-10 22:41:22,323:INFO:Importing libraries
2022-09-10 22:41:22,323:INFO:Copying training dataset
2022-09-10 22:41:22,325:INFO:Defining folds
2022-09-10 22:41:22,325:INFO:Declaring metric variables
2022-09-10 22:41:22,329:INFO:Importing untrained model
2022-09-10 22:41:22,329:INFO:Declaring custom model
2022-09-10 22:41:22,333:INFO:K Neighbors Classifier Imported successfully
2022-09-10 22:41:22,341:INFO:Starting cross validation
2022-09-10 22:41:22,342:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-09-10 22:41:22,422:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:41:22,426:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:41:22,428:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:41:22,430:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:41:22,436:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:41:22,461:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:41:22,502:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:41:22,505:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:41:22,507:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:41:22,511:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:41:22,512:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:41:22,560:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:41:22,590:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:41:22,591:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:41:22,592:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:41:22,593:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:41:22,593:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:41:22,595:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:41:22,598:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:41:22,599:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:41:22,600:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:41:22,600:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:41:22,601:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:41:22,601:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:41:22,607:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:41:22,608:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:41:22,610:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:41:22,649:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:41:22,650:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:41:22,651:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:41:22,652:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:41:22,657:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:41:22,659:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:41:22,662:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:41:22,723:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:41:22,731:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:41:22,734:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:41:22,735:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:41:22,797:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:41:22,798:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:41:22,800:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:41:22,804:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:41:22,806:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:41:22,807:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:41:22,809:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:41:22,811:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:41:22,812:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:41:22,813:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:41:22,814:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:41:22,815:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:41:22,818:INFO:Calculating mean and std
2022-09-10 22:41:22,819:INFO:Creating metrics dataframe
2022-09-10 22:41:22,823:INFO:Finalizing model
2022-09-10 22:41:22,879:INFO:Uploading results into container
2022-09-10 22:41:22,879:INFO:Uploading model into container now
2022-09-10 22:41:22,880:INFO:master_model_container: 18
2022-09-10 22:41:22,880:INFO:display_container: 8
2022-09-10 22:41:22,881:INFO:BaggingClassifier(base_estimator=KNeighborsClassifier(algorithm='auto',
                                                      leaf_size=30,
                                                      metric='minkowski',
                                                      metric_params=None,
                                                      n_jobs=-1, n_neighbors=5,
                                                      p=2, weights='uniform'),
                  bootstrap=True, bootstrap_features=False, max_features=1.0,
                  max_samples=1.0, n_estimators=10, n_jobs=None,
                  oob_score=False, random_state=8688, verbose=0,
                  warm_start=False)
2022-09-10 22:41:22,881:INFO:create_model() successfully completed......................................
2022-09-10 22:41:23,008:INFO:SubProcess create_model() end ==================================
2022-09-10 22:41:23,009:INFO:choose_better activated
2022-09-10 22:41:23,012:INFO:SubProcess create_model() called ==================================
2022-09-10 22:41:23,012:INFO:Initializing create_model()
2022-09-10 22:41:23,012:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001DAF6BE5E50>, estimator=KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform'), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2022-09-10 22:41:23,013:INFO:Checking exceptions
2022-09-10 22:41:23,015:INFO:Importing libraries
2022-09-10 22:41:23,015:INFO:Copying training dataset
2022-09-10 22:41:23,017:INFO:Defining folds
2022-09-10 22:41:23,017:INFO:Declaring metric variables
2022-09-10 22:41:23,017:INFO:Importing untrained model
2022-09-10 22:41:23,017:INFO:Declaring custom model
2022-09-10 22:41:23,018:INFO:K Neighbors Classifier Imported successfully
2022-09-10 22:41:23,018:INFO:Starting cross validation
2022-09-10 22:41:23,019:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-09-10 22:41:23,078:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:41:23,085:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:41:23,086:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:41:23,086:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:41:23,090:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:41:23,096:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:41:23,124:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:41:23,129:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:41:23,134:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:41:23,134:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:41:23,134:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:41:23,156:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:41:23,162:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:41:23,164:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:41:23,165:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-09-10 22:41:23,165:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:41:23,167:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:41:23,169:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:41:23,170:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:41:23,180:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:41:23,182:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:41:23,183:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:41:23,183:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:41:23,183:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:41:23,184:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:41:23,185:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:41:23,186:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:41:23,186:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:41:23,201:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:41:23,204:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:41:23,205:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:41:23,216:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:41:23,216:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:41:23,229:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:41:23,229:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:41:23,254:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:41:23,257:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:41:23,270:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:41:23,272:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:41:23,294:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:41:23,295:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:41:23,296:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:41:23,297:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:41:23,297:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:41:23,298:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:41:23,310:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:41:23,310:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:41:23,311:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:41:23,311:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:41:23,312:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:41:23,313:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:41:23,316:INFO:Calculating mean and std
2022-09-10 22:41:23,316:INFO:Creating metrics dataframe
2022-09-10 22:41:23,318:INFO:Finalizing model
2022-09-10 22:41:23,356:INFO:Uploading results into container
2022-09-10 22:41:23,357:INFO:Uploading model into container now
2022-09-10 22:41:23,357:INFO:master_model_container: 19
2022-09-10 22:41:23,357:INFO:display_container: 9
2022-09-10 22:41:23,357:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2022-09-10 22:41:23,357:INFO:create_model() successfully completed......................................
2022-09-10 22:41:23,480:INFO:SubProcess create_model() end ==================================
2022-09-10 22:41:23,481:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform') result for Accuracy is 0.5978
2022-09-10 22:41:23,482:INFO:BaggingClassifier(base_estimator=KNeighborsClassifier(algorithm='auto',
                                                      leaf_size=30,
                                                      metric='minkowski',
                                                      metric_params=None,
                                                      n_jobs=-1, n_neighbors=5,
                                                      p=2, weights='uniform'),
                  bootstrap=True, bootstrap_features=False, max_features=1.0,
                  max_samples=1.0, n_estimators=10, n_jobs=None,
                  oob_score=False, random_state=8688, verbose=0,
                  warm_start=False) result for Accuracy is 0.6038
2022-09-10 22:41:23,483:INFO:BaggingClassifier(base_estimator=KNeighborsClassifier(algorithm='auto',
                                                      leaf_size=30,
                                                      metric='minkowski',
                                                      metric_params=None,
                                                      n_jobs=-1, n_neighbors=5,
                                                      p=2, weights='uniform'),
                  bootstrap=True, bootstrap_features=False, max_features=1.0,
                  max_samples=1.0, n_estimators=10, n_jobs=None,
                  oob_score=False, random_state=8688, verbose=0,
                  warm_start=False) is best model
2022-09-10 22:41:23,483:INFO:choose_better completed
2022-09-10 22:41:23,492:INFO:master_model_container: 19
2022-09-10 22:41:23,492:INFO:display_container: 8
2022-09-10 22:41:23,493:INFO:BaggingClassifier(base_estimator=KNeighborsClassifier(algorithm='auto',
                                                      leaf_size=30,
                                                      metric='minkowski',
                                                      metric_params=None,
                                                      n_jobs=-1, n_neighbors=5,
                                                      p=2, weights='uniform'),
                  bootstrap=True, bootstrap_features=False, max_features=1.0,
                  max_samples=1.0, n_estimators=10, n_jobs=None,
                  oob_score=False, random_state=8688, verbose=0,
                  warm_start=False)
2022-09-10 22:41:23,493:INFO:ensemble_model() succesfully completed......................................
2022-09-10 22:42:40,153:INFO:PyCaret ClassificationExperiment
2022-09-10 22:42:40,153:INFO:Logging name: clf-default-name
2022-09-10 22:42:40,153:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2022-09-10 22:42:40,153:INFO:version 3.0.0.rc3
2022-09-10 22:42:40,153:INFO:Initializing setup()
2022-09-10 22:42:40,153:INFO:self.USI: f66c
2022-09-10 22:42:40,153:INFO:self.variable_keys: {'exp_id', 'display_container', '_all_models_internal', '_available_plots', '_all_metrics', 'fold_shuffle_param', '_is_multiclass', 'y', 'fold_generator', 'pipeline', 'n_jobs_param', 'X_test', '_gpu_n_jobs_param', 'y_train', 'USI', 'data', '_all_models', 'seed', 'logging_param', 'exp_name_log', 'idx', 'master_model_container', 'y_test', 'memory', 'html_param', 'X_train', 'X', '_ml_usecase', 'fix_imbalance', 'fold_groups_param', 'variable_keys', 'target_param', 'gpu_param', 'log_plots_param'}
2022-09-10 22:42:40,153:INFO:Checking environment
2022-09-10 22:42:40,153:INFO:python_version: 3.8.13
2022-09-10 22:42:40,153:INFO:python_build: ('default', 'Mar 28 2022 06:59:08')
2022-09-10 22:42:40,153:INFO:machine: AMD64
2022-09-10 22:42:40,153:INFO:platform: Windows-10-10.0.19044-SP0
2022-09-10 22:42:40,154:INFO:Memory: svmem(total=17107963904, available=5693313024, percent=66.7, used=11414650880, free=5693313024)
2022-09-10 22:42:40,154:INFO:Physical Core: 6
2022-09-10 22:42:40,154:INFO:Logical Core: 6
2022-09-10 22:42:40,154:INFO:Checking libraries
2022-09-10 22:42:40,154:INFO:System:
2022-09-10 22:42:40,154:INFO:    python: 3.8.13 (default, Mar 28 2022, 06:59:08) [MSC v.1916 64 bit (AMD64)]
2022-09-10 22:42:40,154:INFO:executable: c:\Users\bruno\anaconda3\envs\chatbot_env\python.exe
2022-09-10 22:42:40,154:INFO:   machine: Windows-10-10.0.19044-SP0
2022-09-10 22:42:40,154:INFO:PyCaret required dependencies:
2022-09-10 22:42:40,154:INFO:                 pip: 22.1.2
2022-09-10 22:42:40,154:INFO:          setuptools: 63.4.1
2022-09-10 22:42:40,154:INFO:             pycaret: 3.0.0.rc3
2022-09-10 22:42:40,154:INFO:             IPython: 8.5.0
2022-09-10 22:42:40,155:INFO:          ipywidgets: 8.0.2
2022-09-10 22:42:40,155:INFO:                tqdm: 4.64.1
2022-09-10 22:42:40,155:INFO:               numpy: 1.21.6
2022-09-10 22:42:40,155:INFO:              pandas: 1.4.4
2022-09-10 22:42:40,155:INFO:              jinja2: 3.1.2
2022-09-10 22:42:40,155:INFO:               scipy: 1.8.1
2022-09-10 22:42:40,155:INFO:              joblib: 1.1.0
2022-09-10 22:42:40,155:INFO:             sklearn: 1.1.2
2022-09-10 22:42:40,155:INFO:                pyod: Installed but version unavailable
2022-09-10 22:42:40,155:INFO:            imblearn: 0.9.1
2022-09-10 22:42:40,155:INFO:   category_encoders: 2.5.0
2022-09-10 22:42:40,155:INFO:            lightgbm: 3.3.2
2022-09-10 22:42:40,155:INFO:               numba: 0.55.2
2022-09-10 22:42:40,155:INFO:            requests: 2.28.1
2022-09-10 22:42:40,155:INFO:          matplotlib: 3.6.0rc2
2022-09-10 22:42:40,155:INFO:          scikitplot: 0.3.7
2022-09-10 22:42:40,155:INFO:         yellowbrick: 1.5
2022-09-10 22:42:40,155:INFO:              plotly: 5.10.0
2022-09-10 22:42:40,155:INFO:             kaleido: 0.2.1
2022-09-10 22:42:40,155:INFO:         statsmodels: 0.13.2
2022-09-10 22:42:40,156:INFO:              sktime: 0.11.4
2022-09-10 22:42:40,156:INFO:               tbats: Installed but version unavailable
2022-09-10 22:42:40,156:INFO:            pmdarima: 2.0.1
2022-09-10 22:42:40,156:INFO:              psutil: 5.9.2
2022-09-10 22:42:40,156:INFO:None
2022-09-10 22:42:40,156:INFO:Set up data.
2022-09-10 22:42:40,160:INFO:Set up train/test split.
2022-09-10 22:42:40,165:INFO:Assigning column types.
2022-09-10 22:42:40,167:INFO:Set up folding strategy.
2022-09-10 22:42:40,167:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2022-09-10 22:42:40,218:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2022-09-10 22:42:40,219:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2022-09-10 22:42:40,252:WARNING:No module named 'xgboost'.
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-09-10 22:42:40,253:WARNING:No module named 'catboost'.
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-09-10 22:42:40,304:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2022-09-10 22:42:40,305:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2022-09-10 22:42:40,338:WARNING:No module named 'xgboost'.
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-09-10 22:42:40,339:WARNING:No module named 'catboost'.
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-09-10 22:42:40,339:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2022-09-10 22:42:40,392:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2022-09-10 22:42:40,424:WARNING:No module named 'xgboost'.
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-09-10 22:42:40,425:WARNING:No module named 'catboost'.
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-09-10 22:42:40,478:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2022-09-10 22:42:40,511:WARNING:No module named 'xgboost'.
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-09-10 22:42:40,512:WARNING:No module named 'catboost'.
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-09-10 22:42:40,512:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2022-09-10 22:42:40,598:WARNING:No module named 'xgboost'.
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-09-10 22:42:40,599:WARNING:No module named 'catboost'.
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-09-10 22:42:40,685:WARNING:No module named 'xgboost'.
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-09-10 22:42:40,686:WARNING:No module named 'catboost'.
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-09-10 22:42:40,687:INFO:Preparing preprocessing pipeline...
2022-09-10 22:42:40,687:INFO:Set up label encoding.
2022-09-10 22:42:40,687:INFO:Set up simple imputation.
2022-09-10 22:42:40,688:INFO:Set up encoding of categorical features.
2022-09-10 22:42:40,688:INFO:Set up variance threshold.
2022-09-10 22:42:40,822:INFO:Finished creating preprocessing pipeline.
2022-09-10 22:42:40,829:INFO:Pipeline: Pipeline(memory=Memory(location=C:\Users\bruno\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              missing_values=nan,
                                                              strategy='m...
                ('rest_encoding',
                 TransformerWrapper(exclude=None, include=['input'],
                                    transformer=LeaveOneOutEncoder(cols=['input'],
                                                                   drop_invariant=False,
                                                                   handle_missing='return_nan',
                                                                   handle_unknown='value',
                                                                   random_state=292,
                                                                   return_df=True,
                                                                   sigma=None,
                                                                   verbose=0))),
                ('low_variance',
                 TransformerWrapper(exclude=[], include=None,
                                    transformer=VarianceThreshold(threshold=0)))],
         verbose=False)
2022-09-10 22:42:40,829:INFO:Creating final display dataframe.
2022-09-10 22:42:41,398:INFO:Setup display_container:                     Description                                     Value
0                    Session id                                       292
1                        Target                                     class
2                   Target type                                Multiclass
3                Target mapping  covid: 0, seloturismo: 1, tuberculose: 2
4           Original data shape                                 (2142, 2)
5        Transformed data shape                                 (2142, 2)
6   Transformed train set shape                                 (1499, 2)
7    Transformed test set shape                                  (643, 2)
8          Categorical features                                         1
9                    Preprocess                                      True
10              Imputation type                                    simple
11           Numeric imputation                                      mean
12       Categorical imputation                                  constant
13     Maximum one-hot encoding                                         5
14              Encoding method                                      None
15       Low variance threshold                                         0
16               Fold Generator                           StratifiedKFold
17                  Fold Number                                        10
18                     CPU Jobs                                        -1
19                      Use GPU                                     False
20               Log Experiment                                     False
21              Experiment Name                          clf-default-name
22                          USI                                      f66c
2022-09-10 22:42:41,488:WARNING:No module named 'xgboost'.
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-09-10 22:42:41,489:WARNING:No module named 'catboost'.
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-09-10 22:42:41,573:WARNING:No module named 'xgboost'.
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-09-10 22:42:41,574:WARNING:No module named 'catboost'.
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-09-10 22:42:41,580:INFO:setup() successfully completed in 1.43s...............
2022-09-10 22:42:41,605:INFO:Initializing compare_models()
2022-09-10 22:42:41,605:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001DAF8DB82B0>, include=None, fold=None, round=4, cross_validation=True, sort=Accuracy, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x000001DAF8DB82B0>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engines': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2022-09-10 22:42:41,605:INFO:Checking exceptions
2022-09-10 22:42:41,608:INFO:Preparing display monitor
2022-09-10 22:42:41,640:INFO:Initializing Logistic Regression
2022-09-10 22:42:41,640:INFO:Total runtime is 0.0 minutes
2022-09-10 22:42:41,643:INFO:SubProcess create_model() called ==================================
2022-09-10 22:42:41,643:INFO:Initializing create_model()
2022-09-10 22:42:41,643:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001DAF8DB82B0>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001DAF6BBBA60>, model_only=True, return_train_score=False, kwargs={})
2022-09-10 22:42:41,643:INFO:Checking exceptions
2022-09-10 22:42:41,645:INFO:Importing libraries
2022-09-10 22:42:41,645:INFO:Copying training dataset
2022-09-10 22:42:41,648:INFO:Defining folds
2022-09-10 22:42:41,648:INFO:Declaring metric variables
2022-09-10 22:42:41,651:INFO:Importing untrained model
2022-09-10 22:42:41,653:INFO:Logistic Regression Imported successfully
2022-09-10 22:42:41,659:INFO:Starting cross validation
2022-09-10 22:42:41,660:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-09-10 22:42:41,876:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:42:41,895:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:42:41,898:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:42:41,903:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:42:41,941:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:42:41,942:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:42:42,007:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:42:42,019:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:42:42,042:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:42:42,077:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:42:42,078:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:42:42,087:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:42:42,088:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:42:42,088:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:42:42,089:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:42:42,089:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:42:42,090:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-09-10 22:42:42,090:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:42:42,090:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-09-10 22:42:42,091:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:42:42,124:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:42:42,126:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:42:42,127:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-09-10 22:42:42,128:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:42:42,156:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:42:42,157:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:42:42,158:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-09-10 22:42:42,159:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:42:42,160:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:42:42,161:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:42:42,162:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-09-10 22:42:42,163:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:42:42,167:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:42:42,168:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:42:42,169:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-09-10 22:42:42,170:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:42:42,264:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:42:42,266:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:42:42,314:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:42:42,332:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:42:42,387:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:42:42,389:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:42:42,439:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:42:42,453:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:42:42,457:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:42:42,459:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:42:42,460:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:42:42,460:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-09-10 22:42:42,461:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:42:42,461:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:42:42,462:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-09-10 22:42:42,463:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:42:42,508:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:42:42,509:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:42:42,510:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-09-10 22:42:42,511:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:42:42,520:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:42:42,521:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:42:42,522:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-09-10 22:42:42,523:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:42:42,526:INFO:Calculating mean and std
2022-09-10 22:42:42,526:INFO:Creating metrics dataframe
2022-09-10 22:42:42,529:INFO:Uploading results into container
2022-09-10 22:42:42,530:INFO:Uploading model into container now
2022-09-10 22:42:42,530:INFO:master_model_container: 1
2022-09-10 22:42:42,530:INFO:display_container: 2
2022-09-10 22:42:42,530:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=292, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2022-09-10 22:42:42,531:INFO:create_model() successfully completed......................................
2022-09-10 22:42:42,655:INFO:SubProcess create_model() end ==================================
2022-09-10 22:42:42,656:INFO:Creating metrics dataframe
2022-09-10 22:42:42,664:INFO:Initializing K Neighbors Classifier
2022-09-10 22:42:42,664:INFO:Total runtime is 0.0170655091603597 minutes
2022-09-10 22:42:42,667:INFO:SubProcess create_model() called ==================================
2022-09-10 22:42:42,667:INFO:Initializing create_model()
2022-09-10 22:42:42,667:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001DAF8DB82B0>, estimator=knn, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001DAF6BBBA60>, model_only=True, return_train_score=False, kwargs={})
2022-09-10 22:42:42,667:INFO:Checking exceptions
2022-09-10 22:42:42,669:INFO:Importing libraries
2022-09-10 22:42:42,669:INFO:Copying training dataset
2022-09-10 22:42:42,672:INFO:Defining folds
2022-09-10 22:42:42,672:INFO:Declaring metric variables
2022-09-10 22:42:42,675:INFO:Importing untrained model
2022-09-10 22:42:42,678:INFO:K Neighbors Classifier Imported successfully
2022-09-10 22:42:42,684:INFO:Starting cross validation
2022-09-10 22:42:42,685:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-09-10 22:42:42,765:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:42:42,767:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:42:42,772:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:42:42,773:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:42:42,774:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:42:42,780:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:42:42,808:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:42:42,809:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:42:42,815:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:42:42,815:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:42:42,822:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:42:42,827:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:42:42,846:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:42:42,848:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:42:42,849:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:42:42,849:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-09-10 22:42:42,849:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:42:42,850:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:42:42,851:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:42:42,856:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:42:42,857:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:42:42,857:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:42:42,858:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:42:42,859:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:42:42,859:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:42:42,864:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:42:42,866:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:42:42,867:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-09-10 22:42:42,867:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:42:42,873:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:42:42,874:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:42:42,875:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-09-10 22:42:42,876:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:42:42,910:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:42:42,919:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:42:42,921:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:42:42,928:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:42:42,949:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:42:42,959:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:42:42,961:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:42:42,969:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:42:42,988:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:42:42,989:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:42:42,990:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:42:42,997:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:42:42,998:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:42:42,999:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:42:42,999:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-09-10 22:42:43,000:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:42:43,001:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:42:43,002:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:42:43,008:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:42:43,010:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:42:43,010:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-09-10 22:42:43,011:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:42:43,014:INFO:Calculating mean and std
2022-09-10 22:42:43,016:INFO:Creating metrics dataframe
2022-09-10 22:42:43,019:INFO:Uploading results into container
2022-09-10 22:42:43,019:INFO:Uploading model into container now
2022-09-10 22:42:43,019:INFO:master_model_container: 2
2022-09-10 22:42:43,019:INFO:display_container: 2
2022-09-10 22:42:43,020:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2022-09-10 22:42:43,020:INFO:create_model() successfully completed......................................
2022-09-10 22:42:43,144:INFO:SubProcess create_model() end ==================================
2022-09-10 22:42:43,144:INFO:Creating metrics dataframe
2022-09-10 22:42:43,153:INFO:Initializing Naive Bayes
2022-09-10 22:42:43,153:INFO:Total runtime is 0.025222933292388915 minutes
2022-09-10 22:42:43,156:INFO:SubProcess create_model() called ==================================
2022-09-10 22:42:43,156:INFO:Initializing create_model()
2022-09-10 22:42:43,156:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001DAF8DB82B0>, estimator=nb, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001DAF6BBBA60>, model_only=True, return_train_score=False, kwargs={})
2022-09-10 22:42:43,156:INFO:Checking exceptions
2022-09-10 22:42:43,158:INFO:Importing libraries
2022-09-10 22:42:43,158:INFO:Copying training dataset
2022-09-10 22:42:43,160:INFO:Defining folds
2022-09-10 22:42:43,161:INFO:Declaring metric variables
2022-09-10 22:42:43,164:INFO:Importing untrained model
2022-09-10 22:42:43,167:INFO:Naive Bayes Imported successfully
2022-09-10 22:42:43,172:INFO:Starting cross validation
2022-09-10 22:42:43,173:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-09-10 22:42:43,233:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:42:43,237:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:42:43,240:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:42:43,241:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:42:43,246:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:42:43,256:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:42:43,266:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:42:43,271:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:42:43,272:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:42:43,273:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:42:43,280:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:42:43,288:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:42:43,300:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:42:43,301:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:42:43,302:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-09-10 22:42:43,303:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:42:43,307:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:42:43,307:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:42:43,308:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:42:43,309:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:42:43,309:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:42:43,309:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-09-10 22:42:43,310:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-09-10 22:42:43,310:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:42:43,310:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:42:43,310:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:42:43,311:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-09-10 22:42:43,311:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:42:43,315:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:42:43,316:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:42:43,317:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-09-10 22:42:43,318:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:42:43,324:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:42:43,326:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:42:43,327:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-09-10 22:42:43,328:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:42:43,349:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:42:43,355:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:42:43,357:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:42:43,358:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:42:43,381:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:42:43,387:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:42:43,388:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:42:43,388:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:42:43,416:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:42:43,418:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:42:43,418:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-09-10 22:42:43,419:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:42:43,421:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:42:43,422:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:42:43,423:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:42:43,423:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:42:43,424:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:42:43,424:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-09-10 22:42:43,424:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-09-10 22:42:43,424:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:42:43,425:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:42:43,425:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:42:43,426:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-09-10 22:42:43,426:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:42:43,429:INFO:Calculating mean and std
2022-09-10 22:42:43,431:INFO:Creating metrics dataframe
2022-09-10 22:42:43,434:INFO:Uploading results into container
2022-09-10 22:42:43,434:INFO:Uploading model into container now
2022-09-10 22:42:43,435:INFO:master_model_container: 3
2022-09-10 22:42:43,435:INFO:display_container: 2
2022-09-10 22:42:43,435:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2022-09-10 22:42:43,435:INFO:create_model() successfully completed......................................
2022-09-10 22:42:43,561:INFO:SubProcess create_model() end ==================================
2022-09-10 22:42:43,561:INFO:Creating metrics dataframe
2022-09-10 22:42:43,570:INFO:Initializing Decision Tree Classifier
2022-09-10 22:42:43,570:INFO:Total runtime is 0.03216256697972615 minutes
2022-09-10 22:42:43,573:INFO:SubProcess create_model() called ==================================
2022-09-10 22:42:43,573:INFO:Initializing create_model()
2022-09-10 22:42:43,573:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001DAF8DB82B0>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001DAF6BBBA60>, model_only=True, return_train_score=False, kwargs={})
2022-09-10 22:42:43,573:INFO:Checking exceptions
2022-09-10 22:42:43,575:INFO:Importing libraries
2022-09-10 22:42:43,575:INFO:Copying training dataset
2022-09-10 22:42:43,578:INFO:Defining folds
2022-09-10 22:42:43,578:INFO:Declaring metric variables
2022-09-10 22:42:43,581:INFO:Importing untrained model
2022-09-10 22:42:43,584:INFO:Decision Tree Classifier Imported successfully
2022-09-10 22:42:43,590:INFO:Starting cross validation
2022-09-10 22:42:43,591:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-09-10 22:42:43,653:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:42:43,655:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:42:43,655:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:42:43,658:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:42:43,662:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:42:43,672:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:42:43,685:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:42:43,688:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:42:43,689:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:42:43,691:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:42:43,697:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:42:43,714:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:42:43,722:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:42:43,724:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:42:43,724:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:42:43,725:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:42:43,726:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:42:43,727:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:42:43,727:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:42:43,727:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:42:43,730:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:42:43,731:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:42:43,732:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:42:43,732:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:42:43,742:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:42:43,744:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:42:43,745:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:42:43,757:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:42:43,758:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:42:43,760:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:42:43,772:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:42:43,772:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:42:43,780:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:42:43,782:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:42:43,803:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:42:43,803:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:42:43,811:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:42:43,816:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:42:43,836:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:42:43,837:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:42:43,838:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:42:43,839:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:42:43,841:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:42:43,842:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:42:43,843:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:42:43,845:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:42:43,846:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:42:43,850:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:42:43,851:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:42:43,853:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:42:43,855:INFO:Calculating mean and std
2022-09-10 22:42:43,857:INFO:Creating metrics dataframe
2022-09-10 22:42:43,860:INFO:Uploading results into container
2022-09-10 22:42:43,860:INFO:Uploading model into container now
2022-09-10 22:42:43,861:INFO:master_model_container: 4
2022-09-10 22:42:43,861:INFO:display_container: 2
2022-09-10 22:42:43,862:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=292, splitter='best')
2022-09-10 22:42:43,862:INFO:create_model() successfully completed......................................
2022-09-10 22:42:43,997:INFO:SubProcess create_model() end ==================================
2022-09-10 22:42:43,997:INFO:Creating metrics dataframe
2022-09-10 22:42:44,007:INFO:Initializing SVM - Linear Kernel
2022-09-10 22:42:44,007:INFO:Total runtime is 0.039452524979909254 minutes
2022-09-10 22:42:44,011:INFO:SubProcess create_model() called ==================================
2022-09-10 22:42:44,011:INFO:Initializing create_model()
2022-09-10 22:42:44,011:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001DAF8DB82B0>, estimator=svm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001DAF6BBBA60>, model_only=True, return_train_score=False, kwargs={})
2022-09-10 22:42:44,011:INFO:Checking exceptions
2022-09-10 22:42:44,013:INFO:Importing libraries
2022-09-10 22:42:44,013:INFO:Copying training dataset
2022-09-10 22:42:44,016:INFO:Defining folds
2022-09-10 22:42:44,017:INFO:Declaring metric variables
2022-09-10 22:42:44,020:INFO:Importing untrained model
2022-09-10 22:42:44,023:INFO:SVM - Linear Kernel Imported successfully
2022-09-10 22:42:44,029:INFO:Starting cross validation
2022-09-10 22:42:44,030:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-09-10 22:42:44,105:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:42:44,105:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:42:44,106:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:42:44,113:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:42:44,117:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:42:44,130:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:42:44,137:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:42:44,137:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:42:44,139:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:42:44,139:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:42:44,140:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-09-10 22:42:44,140:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:42:44,140:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:42:44,141:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:42:44,141:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:42:44,141:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:42:44,142:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-09-10 22:42:44,142:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:42:44,143:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

_start, len(result))

2022-09-10 22:42:44,144:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:42:44,145:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:42:44,146:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:42:44,148:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:42:44,149:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:42:44,150:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:42:44,151:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:42:44,153:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:42:44,154:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-09-10 22:42:44,155:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:42:44,163:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:42:44,164:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:42:44,165:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:42:44,166:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-09-10 22:42:44,167:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:42:44,193:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:42:44,201:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:42:44,203:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:42:44,205:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:42:44,225:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:42:44,226:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:42:44,227:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:42:44,228:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-09-10 22:42:44,229:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:42:44,234:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:42:44,235:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:42:44,235:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:42:44,235:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:42:44,236:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:42:44,236:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:42:44,237:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:42:44,237:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-09-10 22:42:44,237:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:42:44,238:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-09-10 22:42:44,238:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:42:44,238:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:42:44,239:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:42:44,239:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-09-10 22:42:44,240:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:42:44,243:INFO:Calculating mean and std
2022-09-10 22:42:44,244:INFO:Creating metrics dataframe
2022-09-10 22:42:44,247:INFO:Uploading results into container
2022-09-10 22:42:44,248:INFO:Uploading model into container now
2022-09-10 22:42:44,248:INFO:master_model_container: 5
2022-09-10 22:42:44,249:INFO:display_container: 2
2022-09-10 22:42:44,249:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=292, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2022-09-10 22:42:44,249:INFO:create_model() successfully completed......................................
2022-09-10 22:42:44,373:INFO:SubProcess create_model() end ==================================
2022-09-10 22:42:44,373:INFO:Creating metrics dataframe
2022-09-10 22:42:44,383:INFO:Initializing Ridge Classifier
2022-09-10 22:42:44,383:INFO:Total runtime is 0.04572489261627197 minutes
2022-09-10 22:42:44,385:INFO:SubProcess create_model() called ==================================
2022-09-10 22:42:44,386:INFO:Initializing create_model()
2022-09-10 22:42:44,386:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001DAF8DB82B0>, estimator=ridge, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001DAF6BBBA60>, model_only=True, return_train_score=False, kwargs={})
2022-09-10 22:42:44,386:INFO:Checking exceptions
2022-09-10 22:42:44,387:INFO:Importing libraries
2022-09-10 22:42:44,388:INFO:Copying training dataset
2022-09-10 22:42:44,390:INFO:Defining folds
2022-09-10 22:42:44,390:INFO:Declaring metric variables
2022-09-10 22:42:44,393:INFO:Importing untrained model
2022-09-10 22:42:44,397:INFO:Ridge Classifier Imported successfully
2022-09-10 22:42:44,402:INFO:Starting cross validation
2022-09-10 22:42:44,403:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-09-10 22:42:44,467:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:42:44,468:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:42:44,468:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:42:44,473:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:42:44,475:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:42:44,483:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:42:44,498:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:42:44,498:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:42:44,500:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:42:44,500:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:42:44,500:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:42:44,500:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:42:44,501:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-09-10 22:42:44,501:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:42:44,501:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:42:44,502:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:42:44,502:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:42:44,502:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-09-10 22:42:44,503:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-09-10 22:42:44,503:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:42:44,504:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:42:44,506:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:42:44,507:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:42:44,509:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:42:44,509:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:42:44,510:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:42:44,510:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-09-10 22:42:44,511:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:42:44,511:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:42:44,512:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-09-10 22:42:44,512:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:42:44,523:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:42:44,524:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:42:44,525:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:42:44,526:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-09-10 22:42:44,527:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:42:44,548:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:42:44,550:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:42:44,553:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:42:44,558:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:42:44,579:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:42:44,579:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:42:44,581:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:42:44,581:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:42:44,582:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-09-10 22:42:44,582:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:42:44,582:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:42:44,583:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:42:44,584:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:42:44,584:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-09-10 22:42:44,584:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:42:44,585:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:42:44,586:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:42:44,587:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-09-10 22:42:44,587:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:42:44,591:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:42:44,591:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:42:44,593:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:42:44,593:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-09-10 22:42:44,594:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:42:44,597:INFO:Calculating mean and std
2022-09-10 22:42:44,598:INFO:Creating metrics dataframe
2022-09-10 22:42:44,602:INFO:Uploading results into container
2022-09-10 22:42:44,602:INFO:Uploading model into container now
2022-09-10 22:42:44,602:INFO:master_model_container: 6
2022-09-10 22:42:44,602:INFO:display_container: 2
2022-09-10 22:42:44,603:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, normalize='deprecated', positive=False,
                random_state=292, solver='auto', tol=0.001)
2022-09-10 22:42:44,603:INFO:create_model() successfully completed......................................
2022-09-10 22:42:44,727:INFO:SubProcess create_model() end ==================================
2022-09-10 22:42:44,728:INFO:Creating metrics dataframe
2022-09-10 22:42:44,738:INFO:Initializing Random Forest Classifier
2022-09-10 22:42:44,738:INFO:Total runtime is 0.051630278428395585 minutes
2022-09-10 22:42:44,741:INFO:SubProcess create_model() called ==================================
2022-09-10 22:42:44,741:INFO:Initializing create_model()
2022-09-10 22:42:44,741:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001DAF8DB82B0>, estimator=rf, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001DAF6BBBA60>, model_only=True, return_train_score=False, kwargs={})
2022-09-10 22:42:44,742:INFO:Checking exceptions
2022-09-10 22:42:44,743:INFO:Importing libraries
2022-09-10 22:42:44,743:INFO:Copying training dataset
2022-09-10 22:42:44,746:INFO:Defining folds
2022-09-10 22:42:44,746:INFO:Declaring metric variables
2022-09-10 22:42:44,749:INFO:Importing untrained model
2022-09-10 22:42:44,752:INFO:Random Forest Classifier Imported successfully
2022-09-10 22:42:44,758:INFO:Starting cross validation
2022-09-10 22:42:44,759:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-09-10 22:42:44,947:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:42:44,952:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:42:44,953:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:42:44,962:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:42:44,965:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:42:44,981:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:42:44,994:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:42:44,998:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:42:45,004:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:42:45,011:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:42:45,013:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:42:45,035:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:42:45,042:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:42:45,044:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:42:45,045:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:42:45,047:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:42:45,049:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:42:45,051:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:42:45,057:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:42:45,059:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:42:45,060:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:42:45,065:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:42:45,066:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:42:45,068:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:42:45,074:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:42:45,076:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:42:45,078:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:42:45,095:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:42:45,096:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:42:45,098:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:42:45,229:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:42:45,245:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:42:45,250:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:42:45,257:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:42:45,281:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:42:45,292:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:42:45,297:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:42:45,307:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:42:45,331:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:42:45,334:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:42:45,335:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:42:45,341:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:42:45,342:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:42:45,344:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:42:45,347:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:42:45,348:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:42:45,350:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:42:45,358:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:42:45,360:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:42:45,362:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:42:45,365:INFO:Calculating mean and std
2022-09-10 22:42:45,366:INFO:Creating metrics dataframe
2022-09-10 22:42:45,370:INFO:Uploading results into container
2022-09-10 22:42:45,370:INFO:Uploading model into container now
2022-09-10 22:42:45,370:INFO:master_model_container: 7
2022-09-10 22:42:45,370:INFO:display_container: 2
2022-09-10 22:42:45,371:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=292, verbose=0, warm_start=False)
2022-09-10 22:42:45,371:INFO:create_model() successfully completed......................................
2022-09-10 22:42:45,494:INFO:SubProcess create_model() end ==================================
2022-09-10 22:42:45,494:INFO:Creating metrics dataframe
2022-09-10 22:42:45,505:INFO:Initializing Quadratic Discriminant Analysis
2022-09-10 22:42:45,505:INFO:Total runtime is 0.06442211071650186 minutes
2022-09-10 22:42:45,508:INFO:SubProcess create_model() called ==================================
2022-09-10 22:42:45,508:INFO:Initializing create_model()
2022-09-10 22:42:45,508:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001DAF8DB82B0>, estimator=qda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001DAF6BBBA60>, model_only=True, return_train_score=False, kwargs={})
2022-09-10 22:42:45,508:INFO:Checking exceptions
2022-09-10 22:42:45,510:INFO:Importing libraries
2022-09-10 22:42:45,510:INFO:Copying training dataset
2022-09-10 22:42:45,513:INFO:Defining folds
2022-09-10 22:42:45,513:INFO:Declaring metric variables
2022-09-10 22:42:45,516:INFO:Importing untrained model
2022-09-10 22:42:45,519:INFO:Quadratic Discriminant Analysis Imported successfully
2022-09-10 22:42:45,525:INFO:Starting cross validation
2022-09-10 22:42:45,526:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-09-10 22:42:45,589:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:42:45,589:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:42:45,591:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:42:45,595:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:42:45,596:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:42:45,608:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:42:45,623:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:42:45,623:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:42:45,624:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:42:45,626:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:42:45,635:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:42:45,643:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:42:45,658:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:42:45,660:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:42:45,661:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-09-10 22:42:45,661:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:42:45,661:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:42:45,662:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:42:45,663:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-09-10 22:42:45,664:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:42:45,670:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:42:45,672:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:42:45,673:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-09-10 22:42:45,674:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:42:45,678:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:42:45,679:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:42:45,680:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-09-10 22:42:45,681:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:42:45,696:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:42:45,698:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:42:45,699:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-09-10 22:42:45,699:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:42:45,700:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:42:45,700:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:42:45,702:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-09-10 22:42:45,703:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:42:45,712:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:42:45,717:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:42:45,727:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:42:45,730:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:42:45,746:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:42:45,748:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:42:45,760:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:42:45,761:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:42:45,779:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:42:45,781:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:42:45,781:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:42:45,781:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-09-10 22:42:45,782:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:42:45,783:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:42:45,783:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-09-10 22:42:45,784:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:42:45,793:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:42:45,794:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:42:45,794:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:42:45,795:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-09-10 22:42:45,795:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-09-10 22:42:45,796:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:42:45,796:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:42:45,799:INFO:Calculating mean and std
2022-09-10 22:42:45,800:INFO:Creating metrics dataframe
2022-09-10 22:42:45,803:INFO:Uploading results into container
2022-09-10 22:42:45,803:INFO:Uploading model into container now
2022-09-10 22:42:45,804:INFO:master_model_container: 8
2022-09-10 22:42:45,804:INFO:display_container: 2
2022-09-10 22:42:45,804:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2022-09-10 22:42:45,804:INFO:create_model() successfully completed......................................
2022-09-10 22:42:45,929:INFO:SubProcess create_model() end ==================================
2022-09-10 22:42:45,929:INFO:Creating metrics dataframe
2022-09-10 22:42:45,940:INFO:Initializing Ada Boost Classifier
2022-09-10 22:42:45,940:INFO:Total runtime is 0.07166202465693156 minutes
2022-09-10 22:42:45,943:INFO:SubProcess create_model() called ==================================
2022-09-10 22:42:45,944:INFO:Initializing create_model()
2022-09-10 22:42:45,944:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001DAF8DB82B0>, estimator=ada, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001DAF6BBBA60>, model_only=True, return_train_score=False, kwargs={})
2022-09-10 22:42:45,944:INFO:Checking exceptions
2022-09-10 22:42:45,945:INFO:Importing libraries
2022-09-10 22:42:45,946:INFO:Copying training dataset
2022-09-10 22:42:45,948:INFO:Defining folds
2022-09-10 22:42:45,948:INFO:Declaring metric variables
2022-09-10 22:42:45,952:INFO:Importing untrained model
2022-09-10 22:42:45,955:INFO:Ada Boost Classifier Imported successfully
2022-09-10 22:42:45,961:INFO:Starting cross validation
2022-09-10 22:42:45,962:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-09-10 22:42:46,082:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:42:46,084:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:42:46,085:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:42:46,094:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:42:46,095:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:42:46,098:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:42:46,119:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:42:46,122:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:42:46,125:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:42:46,134:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:42:46,136:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:42:46,138:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:42:46,157:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:42:46,158:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:42:46,160:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:42:46,161:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:42:46,163:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:42:46,164:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:42:46,166:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:42:46,168:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:42:46,169:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:42:46,178:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:42:46,179:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:42:46,179:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:42:46,180:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:42:46,181:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:42:46,181:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:42:46,182:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:42:46,182:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:42:46,183:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:42:46,264:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:42:46,271:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:42:46,273:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:42:46,284:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:42:46,303:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:42:46,309:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:42:46,311:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:42:46,322:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:42:46,342:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:42:46,343:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:42:46,345:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:42:46,349:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:42:46,350:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:42:46,350:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:42:46,351:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:42:46,352:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:42:46,352:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:42:46,362:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:42:46,363:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:42:46,364:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:42:46,367:INFO:Calculating mean and std
2022-09-10 22:42:46,369:INFO:Creating metrics dataframe
2022-09-10 22:42:46,372:INFO:Uploading results into container
2022-09-10 22:42:46,372:INFO:Uploading model into container now
2022-09-10 22:42:46,373:INFO:master_model_container: 9
2022-09-10 22:42:46,373:INFO:display_container: 2
2022-09-10 22:42:46,373:INFO:AdaBoostClassifier(algorithm='SAMME.R', base_estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=292)
2022-09-10 22:42:46,373:INFO:create_model() successfully completed......................................
2022-09-10 22:42:46,498:INFO:SubProcess create_model() end ==================================
2022-09-10 22:42:46,498:INFO:Creating metrics dataframe
2022-09-10 22:42:46,509:INFO:Initializing Gradient Boosting Classifier
2022-09-10 22:42:46,509:INFO:Total runtime is 0.08115399281183878 minutes
2022-09-10 22:42:46,512:INFO:SubProcess create_model() called ==================================
2022-09-10 22:42:46,512:INFO:Initializing create_model()
2022-09-10 22:42:46,512:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001DAF8DB82B0>, estimator=gbc, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001DAF6BBBA60>, model_only=True, return_train_score=False, kwargs={})
2022-09-10 22:42:46,512:INFO:Checking exceptions
2022-09-10 22:42:46,514:INFO:Importing libraries
2022-09-10 22:42:46,514:INFO:Copying training dataset
2022-09-10 22:42:46,517:INFO:Defining folds
2022-09-10 22:42:46,517:INFO:Declaring metric variables
2022-09-10 22:42:46,520:INFO:Importing untrained model
2022-09-10 22:42:46,523:INFO:Gradient Boosting Classifier Imported successfully
2022-09-10 22:42:46,529:INFO:Starting cross validation
2022-09-10 22:42:46,530:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-09-10 22:42:46,816:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:42:46,816:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:42:46,821:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:42:46,850:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:42:46,851:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:42:46,855:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:42:46,860:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:42:46,862:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:42:46,863:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:42:46,883:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:42:46,884:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:42:46,886:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:42:46,889:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:42:46,891:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:42:46,892:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:42:46,895:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:42:46,897:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:42:46,898:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:42:46,898:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:42:46,899:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:42:46,900:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:42:46,934:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:42:46,935:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:42:46,936:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:42:46,940:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:42:46,941:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:42:46,943:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:42:46,944:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:42:46,946:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:42:46,947:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:42:47,159:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:42:47,169:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:42:47,179:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:42:47,192:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:42:47,201:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:42:47,204:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:42:47,212:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:42:47,224:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:42:47,226:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:42:47,227:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:42:47,236:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:42:47,236:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:42:47,237:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:42:47,239:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:42:47,244:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:42:47,246:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:42:47,247:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:42:47,269:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:42:47,270:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:42:47,271:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:42:47,274:INFO:Calculating mean and std
2022-09-10 22:42:47,275:INFO:Creating metrics dataframe
2022-09-10 22:42:47,279:INFO:Uploading results into container
2022-09-10 22:42:47,279:INFO:Uploading model into container now
2022-09-10 22:42:47,280:INFO:master_model_container: 10
2022-09-10 22:42:47,280:INFO:display_container: 2
2022-09-10 22:42:47,280:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=292, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2022-09-10 22:42:47,280:INFO:create_model() successfully completed......................................
2022-09-10 22:42:47,411:INFO:SubProcess create_model() end ==================================
2022-09-10 22:42:47,411:INFO:Creating metrics dataframe
2022-09-10 22:42:47,422:INFO:Initializing Linear Discriminant Analysis
2022-09-10 22:42:47,422:INFO:Total runtime is 0.09636781613032024 minutes
2022-09-10 22:42:47,425:INFO:SubProcess create_model() called ==================================
2022-09-10 22:42:47,425:INFO:Initializing create_model()
2022-09-10 22:42:47,425:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001DAF8DB82B0>, estimator=lda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001DAF6BBBA60>, model_only=True, return_train_score=False, kwargs={})
2022-09-10 22:42:47,426:INFO:Checking exceptions
2022-09-10 22:42:47,427:INFO:Importing libraries
2022-09-10 22:42:47,427:INFO:Copying training dataset
2022-09-10 22:42:47,430:INFO:Defining folds
2022-09-10 22:42:47,430:INFO:Declaring metric variables
2022-09-10 22:42:47,433:INFO:Importing untrained model
2022-09-10 22:42:47,436:INFO:Linear Discriminant Analysis Imported successfully
2022-09-10 22:42:47,441:INFO:Starting cross validation
2022-09-10 22:42:47,442:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-09-10 22:42:47,505:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:42:47,506:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:42:47,506:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:42:47,510:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:42:47,515:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:42:47,519:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:42:47,536:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:42:47,538:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:42:47,540:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:42:47,543:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:42:47,548:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:42:47,551:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:42:47,569:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:42:47,571:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:42:47,571:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-09-10 22:42:47,572:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:42:47,572:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:42:47,574:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:42:47,574:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-09-10 22:42:47,575:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:42:47,578:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:42:47,579:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:42:47,580:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:42:47,580:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-09-10 22:42:47,581:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:42:47,581:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:42:47,582:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-09-10 22:42:47,583:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:42:47,585:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:42:47,586:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:42:47,586:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:42:47,587:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-09-10 22:42:47,588:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:42:47,588:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:42:47,588:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-09-10 22:42:47,589:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:42:47,619:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:42:47,626:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:42:47,626:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:42:47,626:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:42:47,652:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:42:47,657:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:42:47,657:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:42:47,660:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:42:47,686:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:42:47,687:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:42:47,688:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-09-10 22:42:47,689:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:42:47,690:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:42:47,690:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:42:47,692:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:42:47,692:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:42:47,692:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-09-10 22:42:47,693:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-09-10 22:42:47,693:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:42:47,694:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:42:47,694:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:42:47,696:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:42:47,697:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-09-10 22:42:47,698:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:42:47,700:INFO:Calculating mean and std
2022-09-10 22:42:47,702:INFO:Creating metrics dataframe
2022-09-10 22:42:47,705:INFO:Uploading results into container
2022-09-10 22:42:47,705:INFO:Uploading model into container now
2022-09-10 22:42:47,706:INFO:master_model_container: 11
2022-09-10 22:42:47,706:INFO:display_container: 2
2022-09-10 22:42:47,706:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2022-09-10 22:42:47,706:INFO:create_model() successfully completed......................................
2022-09-10 22:42:47,831:INFO:SubProcess create_model() end ==================================
2022-09-10 22:42:47,831:INFO:Creating metrics dataframe
2022-09-10 22:42:47,844:INFO:Initializing Extra Trees Classifier
2022-09-10 22:42:47,844:INFO:Total runtime is 0.10340754588445028 minutes
2022-09-10 22:42:47,847:INFO:SubProcess create_model() called ==================================
2022-09-10 22:42:47,848:INFO:Initializing create_model()
2022-09-10 22:42:47,848:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001DAF8DB82B0>, estimator=et, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001DAF6BBBA60>, model_only=True, return_train_score=False, kwargs={})
2022-09-10 22:42:47,848:INFO:Checking exceptions
2022-09-10 22:42:47,850:INFO:Importing libraries
2022-09-10 22:42:47,850:INFO:Copying training dataset
2022-09-10 22:42:47,852:INFO:Defining folds
2022-09-10 22:42:47,853:INFO:Declaring metric variables
2022-09-10 22:42:47,856:INFO:Importing untrained model
2022-09-10 22:42:47,859:INFO:Extra Trees Classifier Imported successfully
2022-09-10 22:42:47,866:INFO:Starting cross validation
2022-09-10 22:42:47,867:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-09-10 22:42:48,032:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:42:48,034:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:42:48,035:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:42:48,052:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:42:48,066:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:42:48,075:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:42:48,079:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:42:48,083:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:42:48,094:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:42:48,103:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:42:48,122:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:42:48,128:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:42:48,129:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:42:48,131:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:42:48,132:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:42:48,135:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:42:48,137:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:42:48,138:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:42:48,159:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:42:48,161:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:42:48,162:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:42:48,162:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:42:48,163:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:42:48,165:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:42:48,179:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:42:48,181:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:42:48,183:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:42:48,185:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:42:48,186:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:42:48,188:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:42:48,279:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:42:48,283:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:42:48,312:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:42:48,322:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:42:48,328:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:42:48,331:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:42:48,359:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:42:48,370:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:42:48,378:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:42:48,379:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:42:48,381:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:42:48,381:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:42:48,383:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:42:48,384:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:42:48,408:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:42:48,410:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:42:48,412:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:42:48,420:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:42:48,421:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:42:48,422:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:42:48,425:INFO:Calculating mean and std
2022-09-10 22:42:48,427:INFO:Creating metrics dataframe
2022-09-10 22:42:48,430:INFO:Uploading results into container
2022-09-10 22:42:48,431:INFO:Uploading model into container now
2022-09-10 22:42:48,431:INFO:master_model_container: 12
2022-09-10 22:42:48,431:INFO:display_container: 2
2022-09-10 22:42:48,432:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     n_estimators=100, n_jobs=-1, oob_score=False,
                     random_state=292, verbose=0, warm_start=False)
2022-09-10 22:42:48,432:INFO:create_model() successfully completed......................................
2022-09-10 22:42:48,560:INFO:SubProcess create_model() end ==================================
2022-09-10 22:42:48,560:INFO:Creating metrics dataframe
2022-09-10 22:42:48,572:INFO:Initializing Light Gradient Boosting Machine
2022-09-10 22:42:48,572:INFO:Total runtime is 0.11553524335225424 minutes
2022-09-10 22:42:48,575:INFO:SubProcess create_model() called ==================================
2022-09-10 22:42:48,575:INFO:Initializing create_model()
2022-09-10 22:42:48,575:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001DAF8DB82B0>, estimator=lightgbm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001DAF6BBBA60>, model_only=True, return_train_score=False, kwargs={})
2022-09-10 22:42:48,575:INFO:Checking exceptions
2022-09-10 22:42:48,577:INFO:Importing libraries
2022-09-10 22:42:48,577:INFO:Copying training dataset
2022-09-10 22:42:48,580:INFO:Defining folds
2022-09-10 22:42:48,580:INFO:Declaring metric variables
2022-09-10 22:42:48,583:INFO:Importing untrained model
2022-09-10 22:42:48,586:INFO:Light Gradient Boosting Machine Imported successfully
2022-09-10 22:42:48,592:INFO:Starting cross validation
2022-09-10 22:42:48,593:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-09-10 22:42:48,705:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:42:48,709:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:42:48,711:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:42:48,716:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:42:48,717:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:42:48,728:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:42:48,739:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:42:48,743:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:42:48,748:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:42:48,749:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:42:48,753:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:42:48,764:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:42:48,771:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:42:48,773:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:42:48,774:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:42:48,780:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:42:48,781:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:42:48,782:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:42:48,784:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:42:48,785:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:42:48,786:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:42:48,786:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:42:48,787:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:42:48,787:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:42:48,788:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:42:48,788:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:42:48,790:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:42:48,802:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:42:48,803:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:42:48,804:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:42:48,843:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:42:48,859:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:42:48,859:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:42:48,860:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:42:48,874:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:42:48,891:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:42:48,892:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:42:48,894:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:42:48,907:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:42:48,909:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:42:48,911:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:42:48,924:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:42:48,925:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:42:48,925:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:42:48,926:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:42:48,926:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:42:48,927:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:42:48,929:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:42:48,930:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:42:48,933:INFO:Calculating mean and std
2022-09-10 22:42:48,934:INFO:Creating metrics dataframe
2022-09-10 22:42:48,937:INFO:Uploading results into container
2022-09-10 22:42:48,938:INFO:Uploading model into container now
2022-09-10 22:42:48,938:INFO:master_model_container: 13
2022-09-10 22:42:48,939:INFO:display_container: 2
2022-09-10 22:42:48,939:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=292, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0)
2022-09-10 22:42:48,939:INFO:create_model() successfully completed......................................
2022-09-10 22:42:49,065:INFO:SubProcess create_model() end ==================================
2022-09-10 22:42:49,065:INFO:Creating metrics dataframe
2022-09-10 22:42:49,078:INFO:Initializing Dummy Classifier
2022-09-10 22:42:49,078:INFO:Total runtime is 0.12397624651590983 minutes
2022-09-10 22:42:49,081:INFO:SubProcess create_model() called ==================================
2022-09-10 22:42:49,081:INFO:Initializing create_model()
2022-09-10 22:42:49,081:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001DAF8DB82B0>, estimator=dummy, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001DAF6BBBA60>, model_only=True, return_train_score=False, kwargs={})
2022-09-10 22:42:49,082:INFO:Checking exceptions
2022-09-10 22:42:49,083:INFO:Importing libraries
2022-09-10 22:42:49,083:INFO:Copying training dataset
2022-09-10 22:42:49,086:INFO:Defining folds
2022-09-10 22:42:49,086:INFO:Declaring metric variables
2022-09-10 22:42:49,089:INFO:Importing untrained model
2022-09-10 22:42:49,092:INFO:Dummy Classifier Imported successfully
2022-09-10 22:42:49,098:INFO:Starting cross validation
2022-09-10 22:42:49,099:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-09-10 22:42:49,162:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:42:49,166:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:42:49,168:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:42:49,171:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:42:49,175:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:42:49,192:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:42:49,194:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:42:49,199:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:42:49,200:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:42:49,201:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:42:49,207:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:42:49,223:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:42:49,225:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:42:49,226:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-09-10 22:42:49,226:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:42:49,231:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:42:49,234:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:42:49,235:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:42:49,235:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:42:49,236:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:42:49,236:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-09-10 22:42:49,236:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-09-10 22:42:49,237:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:42:49,237:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:42:49,237:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:42:49,238:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-09-10 22:42:49,239:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:42:49,241:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:42:49,243:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:42:49,244:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-09-10 22:42:49,245:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:42:49,265:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:42:49,267:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:42:49,267:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-09-10 22:42:49,268:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:42:49,275:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:42:49,280:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:42:49,280:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:42:49,284:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:42:49,306:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:42:49,310:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:42:49,312:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:42:49,314:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:42:49,339:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:42:49,340:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:42:49,341:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-09-10 22:42:49,342:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:42:49,342:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:42:49,343:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:42:49,344:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-09-10 22:42:49,345:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:42:49,345:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:42:49,347:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:42:49,347:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:42:49,347:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-09-10 22:42:49,348:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:42:49,348:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:42:49,349:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-09-10 22:42:49,350:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:42:49,353:INFO:Calculating mean and std
2022-09-10 22:42:49,354:INFO:Creating metrics dataframe
2022-09-10 22:42:49,357:INFO:Uploading results into container
2022-09-10 22:42:49,358:INFO:Uploading model into container now
2022-09-10 22:42:49,358:INFO:master_model_container: 14
2022-09-10 22:42:49,358:INFO:display_container: 2
2022-09-10 22:42:49,358:INFO:DummyClassifier(constant=None, random_state=292, strategy='prior')
2022-09-10 22:42:49,359:INFO:create_model() successfully completed......................................
2022-09-10 22:42:49,482:INFO:SubProcess create_model() end ==================================
2022-09-10 22:42:49,482:INFO:Creating metrics dataframe
2022-09-10 22:42:49,503:INFO:Initializing create_model()
2022-09-10 22:42:49,503:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001DAF8DB82B0>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=292, splitter='best'), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2022-09-10 22:42:49,503:INFO:Checking exceptions
2022-09-10 22:42:49,507:INFO:Importing libraries
2022-09-10 22:42:49,507:INFO:Copying training dataset
2022-09-10 22:42:49,509:INFO:Defining folds
2022-09-10 22:42:49,509:INFO:Declaring metric variables
2022-09-10 22:42:49,509:INFO:Importing untrained model
2022-09-10 22:42:49,509:INFO:Declaring custom model
2022-09-10 22:42:49,509:INFO:Decision Tree Classifier Imported successfully
2022-09-10 22:42:49,510:INFO:Cross validation set to False
2022-09-10 22:42:49,510:INFO:Fitting Model
2022-09-10 22:42:49,656:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=292, splitter='best')
2022-09-10 22:42:49,656:INFO:create_model() successfully completed......................................
2022-09-10 22:42:49,807:INFO:master_model_container: 14
2022-09-10 22:42:49,808:INFO:display_container: 2
2022-09-10 22:42:49,808:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=292, splitter='best')
2022-09-10 22:42:49,808:INFO:compare_models() successfully completed......................................
2022-09-10 22:42:49,908:INFO:Initializing evaluate_model()
2022-09-10 22:42:49,908:INFO:evaluate_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001DAF8DB82B0>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=292, splitter='best'), fold=None, fit_kwargs=None, plot_kwargs=None, feature_name=None, groups=None, use_train_data=False)
2022-09-10 22:42:49,925:INFO:Initializing plot_model()
2022-09-10 22:42:49,925:INFO:plot_model(plot=pipeline, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=292, splitter='best'), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001DAF8DB82B0>, system=True)
2022-09-10 22:42:49,925:INFO:Checking exceptions
2022-09-10 22:42:49,929:INFO:Preloading libraries
2022-09-10 22:42:49,929:INFO:Copying training dataset
2022-09-10 22:42:49,929:INFO:Plot type: pipeline
2022-09-10 22:42:50,064:INFO:Visual Rendered Successfully
2022-09-10 22:42:50,189:INFO:plot_model() successfully completed......................................
2022-09-10 22:42:50,246:INFO:Initializing plot_model()
2022-09-10 22:42:50,246:INFO:plot_model(plot=auc, fold=None, use_train_data=False, verbose=True, display=None, display_format=None, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=292, splitter='best'), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001DAF8DB82B0>, system=True)
2022-09-10 22:42:50,246:INFO:Checking exceptions
2022-09-10 22:42:50,250:INFO:Preloading libraries
2022-09-10 22:42:50,250:INFO:Copying training dataset
2022-09-10 22:42:50,251:INFO:Plot type: auc
2022-09-10 22:42:50,385:INFO:Fitting Model
2022-09-10 22:42:50,386:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\base.py:450: UserWarning: X does not have valid feature names, but DecisionTreeClassifier was fitted with feature names
  warnings.warn(

2022-09-10 22:42:50,386:INFO:Scoring test/hold-out set
2022-09-10 22:42:50,560:INFO:Visual Rendered Successfully
2022-09-10 22:42:50,689:INFO:plot_model() successfully completed......................................
2022-09-10 22:42:50,722:INFO:Initializing predict_model()
2022-09-10 22:42:50,722:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001DAF8DB82B0>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=292, splitter='best'), probability_threshold=None, encoded_labels=False, raw_score=False, drift_report=False, round=4, verbose=True, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x000001DAF8D97D30>)
2022-09-10 22:42:50,723:INFO:Checking exceptions
2022-09-10 22:42:50,723:INFO:Preloading libraries
2022-09-10 22:42:50,778:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:42:50,779:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:42:50,779:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:42:50,780:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:42:50,780:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:42:50,781:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:42:50,965:INFO:Initializing predict_model()
2022-09-10 22:42:50,965:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001DAF8DB82B0>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=292, splitter='best'), probability_threshold=None, encoded_labels=False, raw_score=False, drift_report=False, round=4, verbose=True, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x000001DAF6B589D0>)
2022-09-10 22:42:50,965:INFO:Checking exceptions
2022-09-10 22:42:50,965:INFO:Preloading libraries
2022-09-10 22:42:50,967:INFO:Set up data.
2022-09-10 22:42:51,070:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:42:51,071:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:42:51,072:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:42:51,072:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:42:51,073:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:42:51,074:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:42:51,246:INFO:Initializing ensemble_model()
2022-09-10 22:42:51,247:INFO:ensemble_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001DAF8DB82B0>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=292, splitter='best'), method=Bagging, fold=None, n_estimators=10, round=4, choose_better=True, optimize=Accuracy, fit_kwargs=None, groups=None, probability_threshold=None, verbose=True, return_train_score=False)
2022-09-10 22:42:51,247:INFO:Checking exceptions
2022-09-10 22:42:51,274:INFO:Importing libraries
2022-09-10 22:42:51,275:INFO:Copying training dataset
2022-09-10 22:42:51,275:INFO:Checking base model
2022-09-10 22:42:51,275:INFO:Base model : Decision Tree Classifier
2022-09-10 22:42:51,282:INFO:Importing untrained ensembler
2022-09-10 22:42:51,282:INFO:Ensemble method set to Bagging
2022-09-10 22:42:51,282:INFO:SubProcess create_model() called ==================================
2022-09-10 22:42:51,283:INFO:Initializing create_model()
2022-09-10 22:42:51,283:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001DAF8DB82B0>, estimator=BaggingClassifier(base_estimator=DecisionTreeClassifier(ccp_alpha=0.0,
                                                        class_weight=None,
                                                        criterion='gini',
                                                        max_depth=None,
                                                        max_features=None,
                                                        max_leaf_nodes=None,
                                                        min_impurity_decrease=0.0,
                                                        min_samples_leaf=1,
                                                        min_samples_split=2,
                                                        min_weight_fraction_leaf=0.0,
                                                        random_state=292,
                                                        splitter='best'),
                  bootstrap=True, bootstrap_features=False, max_features=1.0,
                  max_samples=1.0, n_estimators=10, n_jobs=None,
                  oob_score=False, random_state=292, verbose=0,
                  warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001DAF67DA1F0>, model_only=True, return_train_score=False, kwargs={})
2022-09-10 22:42:51,283:INFO:Checking exceptions
2022-09-10 22:42:51,286:INFO:Importing libraries
2022-09-10 22:42:51,286:INFO:Copying training dataset
2022-09-10 22:42:51,288:INFO:Defining folds
2022-09-10 22:42:51,288:INFO:Declaring metric variables
2022-09-10 22:42:51,291:INFO:Importing untrained model
2022-09-10 22:42:51,291:INFO:Declaring custom model
2022-09-10 22:42:51,295:INFO:Decision Tree Classifier Imported successfully
2022-09-10 22:42:51,301:INFO:Starting cross validation
2022-09-10 22:42:51,302:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-09-10 22:42:51,381:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:42:51,381:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:42:51,381:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:42:51,388:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:42:51,388:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:42:51,397:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:42:51,413:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:42:51,415:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:42:51,416:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:42:51,421:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:42:51,423:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:42:51,432:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:42:51,448:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:42:51,449:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:42:51,451:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:42:51,452:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:42:51,453:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:42:51,454:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:42:51,460:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:42:51,462:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:42:51,462:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:42:51,462:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:42:51,464:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:42:51,464:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:42:51,464:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:42:51,466:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:42:51,466:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:42:51,470:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:42:51,471:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:42:51,473:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:42:51,518:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:42:51,523:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:42:51,523:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:42:51,525:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:42:51,551:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:42:51,555:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:42:51,557:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:42:51,559:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:42:51,584:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:42:51,586:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:42:51,587:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:42:51,588:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:42:51,590:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:42:51,591:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:42:51,591:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:42:51,593:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:42:51,594:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:42:51,594:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:42:51,596:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:42:51,597:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:42:51,600:INFO:Calculating mean and std
2022-09-10 22:42:51,601:INFO:Creating metrics dataframe
2022-09-10 22:42:51,606:INFO:Finalizing model
2022-09-10 22:42:51,680:INFO:Uploading results into container
2022-09-10 22:42:51,681:INFO:Uploading model into container now
2022-09-10 22:42:51,681:INFO:master_model_container: 15
2022-09-10 22:42:51,681:INFO:display_container: 5
2022-09-10 22:42:51,683:INFO:BaggingClassifier(base_estimator=DecisionTreeClassifier(ccp_alpha=0.0,
                                                        class_weight=None,
                                                        criterion='gini',
                                                        max_depth=None,
                                                        max_features=None,
                                                        max_leaf_nodes=None,
                                                        min_impurity_decrease=0.0,
                                                        min_samples_leaf=1,
                                                        min_samples_split=2,
                                                        min_weight_fraction_leaf=0.0,
                                                        random_state=292,
                                                        splitter='best'),
                  bootstrap=True, bootstrap_features=False, max_features=1.0,
                  max_samples=1.0, n_estimators=10, n_jobs=None,
                  oob_score=False, random_state=292, verbose=0,
                  warm_start=False)
2022-09-10 22:42:51,683:INFO:create_model() successfully completed......................................
2022-09-10 22:42:51,806:INFO:SubProcess create_model() end ==================================
2022-09-10 22:42:51,806:INFO:choose_better activated
2022-09-10 22:42:51,809:INFO:SubProcess create_model() called ==================================
2022-09-10 22:42:51,810:INFO:Initializing create_model()
2022-09-10 22:42:51,810:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001DAF8DB82B0>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=292, splitter='best'), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2022-09-10 22:42:51,810:INFO:Checking exceptions
2022-09-10 22:42:51,813:INFO:Importing libraries
2022-09-10 22:42:51,813:INFO:Copying training dataset
2022-09-10 22:42:51,815:INFO:Defining folds
2022-09-10 22:42:51,815:INFO:Declaring metric variables
2022-09-10 22:42:51,815:INFO:Importing untrained model
2022-09-10 22:42:51,815:INFO:Declaring custom model
2022-09-10 22:42:51,816:INFO:Decision Tree Classifier Imported successfully
2022-09-10 22:42:51,816:INFO:Starting cross validation
2022-09-10 22:42:51,817:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-09-10 22:42:51,884:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:42:51,886:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:42:51,888:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:42:51,889:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:42:51,916:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:42:51,917:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:42:51,918:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:42:51,921:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:42:51,924:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:42:51,928:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:42:51,948:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:42:51,950:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:42:51,954:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:42:51,955:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:42:51,955:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:42:51,956:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:42:51,957:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:42:51,958:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:42:51,961:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:42:51,963:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:42:51,964:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:42:51,970:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:42:51,971:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:42:51,973:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:42:51,982:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:42:51,983:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:42:51,984:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:42:51,986:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:42:51,988:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:42:51,990:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:42:52,003:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:42:52,004:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:42:52,011:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:42:52,015:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:42:52,033:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:42:52,037:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:42:52,041:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:42:52,047:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:42:52,065:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:42:52,066:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:42:52,068:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:42:52,072:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:42:52,074:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:42:52,074:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:42:52,075:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:42:52,075:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:42:52,076:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:42:52,080:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:42:52,081:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:42:52,083:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:42:52,085:INFO:Calculating mean and std
2022-09-10 22:42:52,086:INFO:Creating metrics dataframe
2022-09-10 22:42:52,088:INFO:Finalizing model
2022-09-10 22:42:52,126:INFO:Uploading results into container
2022-09-10 22:42:52,126:INFO:Uploading model into container now
2022-09-10 22:42:52,126:INFO:master_model_container: 16
2022-09-10 22:42:52,127:INFO:display_container: 6
2022-09-10 22:42:52,127:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=292, splitter='best')
2022-09-10 22:42:52,127:INFO:create_model() successfully completed......................................
2022-09-10 22:42:52,255:INFO:SubProcess create_model() end ==================================
2022-09-10 22:42:52,256:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=292, splitter='best') result for Accuracy is 0.577
2022-09-10 22:42:52,257:INFO:BaggingClassifier(base_estimator=DecisionTreeClassifier(ccp_alpha=0.0,
                                                        class_weight=None,
                                                        criterion='gini',
                                                        max_depth=None,
                                                        max_features=None,
                                                        max_leaf_nodes=None,
                                                        min_impurity_decrease=0.0,
                                                        min_samples_leaf=1,
                                                        min_samples_split=2,
                                                        min_weight_fraction_leaf=0.0,
                                                        random_state=292,
                                                        splitter='best'),
                  bootstrap=True, bootstrap_features=False, max_features=1.0,
                  max_samples=1.0, n_estimators=10, n_jobs=None,
                  oob_score=False, random_state=292, verbose=0,
                  warm_start=False) result for Accuracy is 0.5751
2022-09-10 22:42:52,257:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=292, splitter='best') is best model
2022-09-10 22:42:52,257:INFO:choose_better completed
2022-09-10 22:42:52,258:INFO:Original model was better than the ensembled model, hence it will be returned. NOTE: The display metrics are for the ensembled model (not the original one).
2022-09-10 22:42:52,267:INFO:master_model_container: 16
2022-09-10 22:42:52,267:INFO:display_container: 5
2022-09-10 22:42:52,267:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=292, splitter='best')
2022-09-10 22:42:52,268:INFO:ensemble_model() succesfully completed......................................
2022-09-10 22:42:52,485:INFO:Initializing save_model()
2022-09-10 22:42:52,485:INFO:save_model(model=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=292, splitter='best'), model_name=my_best_pipeline, prep_pipe_=Pipeline(memory=Memory(location=C:\Users\bruno\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              missing_values=nan,
                                                              strategy='m...
                ('rest_encoding',
                 TransformerWrapper(exclude=None, include=['input'],
                                    transformer=LeaveOneOutEncoder(cols=['input'],
                                                                   drop_invariant=False,
                                                                   handle_missing='return_nan',
                                                                   handle_unknown='value',
                                                                   random_state=292,
                                                                   return_df=True,
                                                                   sigma=None,
                                                                   verbose=0))),
                ('low_variance',
                 TransformerWrapper(exclude=[], include=None,
                                    transformer=VarianceThreshold(threshold=0)))],
         verbose=False), verbose=True, use_case=MLUsecase.CLASSIFICATION, kwargs={})
2022-09-10 22:42:52,485:INFO:Adding model into prep_pipe
2022-09-10 22:42:52,491:INFO:my_best_pipeline.pkl saved in current working directory
2022-09-10 22:42:52,500:INFO:Pipeline(memory=Memory(location=C:\Users\bruno\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              missing_values=nan,
                                                              strategy='m...
                 TransformerWrapper(exclude=[], include=None,
                                    transformer=VarianceThreshold(threshold=0))),
                ['trained_model',
                 DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None,
                                        criterion='gini', max_depth=None,
                                        max_features=None, max_leaf_nodes=None,
                                        min_impurity_decrease=0.0,
                                        min_samples_leaf=1, min_samples_split=2,
                                        min_weight_fraction_leaf=0.0,
                                        random_state=292, splitter='best')]],
         verbose=False)
2022-09-10 22:42:52,500:INFO:save_model() successfully completed......................................
2022-09-10 22:42:52,713:INFO:Initializing load_model()
2022-09-10 22:42:52,713:INFO:load_model(model_name=my_best_pipeline, platform=None, authentication=None, verbose=True)
2022-09-10 22:45:29,952:INFO:PyCaret ClassificationExperiment
2022-09-10 22:45:29,952:INFO:Logging name: clf-default-name
2022-09-10 22:45:29,952:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2022-09-10 22:45:29,952:INFO:version 3.0.0.rc3
2022-09-10 22:45:29,952:INFO:Initializing setup()
2022-09-10 22:45:29,952:INFO:self.USI: 32bf
2022-09-10 22:45:29,952:INFO:self.variable_keys: {'exp_id', 'display_container', '_all_models_internal', '_available_plots', '_all_metrics', 'fold_shuffle_param', '_is_multiclass', 'y', 'fold_generator', 'pipeline', 'n_jobs_param', 'X_test', '_gpu_n_jobs_param', 'y_train', 'USI', 'data', '_all_models', 'seed', 'logging_param', 'exp_name_log', 'idx', 'master_model_container', 'y_test', 'memory', 'html_param', 'X_train', 'X', '_ml_usecase', 'fix_imbalance', 'fold_groups_param', 'variable_keys', 'target_param', 'gpu_param', 'log_plots_param'}
2022-09-10 22:45:29,952:INFO:Checking environment
2022-09-10 22:45:29,952:INFO:python_version: 3.8.13
2022-09-10 22:45:29,952:INFO:python_build: ('default', 'Mar 28 2022 06:59:08')
2022-09-10 22:45:29,952:INFO:machine: AMD64
2022-09-10 22:45:29,952:INFO:platform: Windows-10-10.0.19044-SP0
2022-09-10 22:45:29,952:INFO:Memory: svmem(total=17107963904, available=5730562048, percent=66.5, used=11377401856, free=5730562048)
2022-09-10 22:45:29,953:INFO:Physical Core: 6
2022-09-10 22:45:29,953:INFO:Logical Core: 6
2022-09-10 22:45:29,953:INFO:Checking libraries
2022-09-10 22:45:29,953:INFO:System:
2022-09-10 22:45:29,953:INFO:    python: 3.8.13 (default, Mar 28 2022, 06:59:08) [MSC v.1916 64 bit (AMD64)]
2022-09-10 22:45:29,953:INFO:executable: c:\Users\bruno\anaconda3\envs\chatbot_env\python.exe
2022-09-10 22:45:29,953:INFO:   machine: Windows-10-10.0.19044-SP0
2022-09-10 22:45:29,953:INFO:PyCaret required dependencies:
2022-09-10 22:45:29,953:INFO:                 pip: 22.1.2
2022-09-10 22:45:29,953:INFO:          setuptools: 63.4.1
2022-09-10 22:45:29,953:INFO:             pycaret: 3.0.0.rc3
2022-09-10 22:45:29,953:INFO:             IPython: 8.5.0
2022-09-10 22:45:29,953:INFO:          ipywidgets: 8.0.2
2022-09-10 22:45:29,953:INFO:                tqdm: 4.64.1
2022-09-10 22:45:29,953:INFO:               numpy: 1.21.6
2022-09-10 22:45:29,953:INFO:              pandas: 1.4.4
2022-09-10 22:45:29,953:INFO:              jinja2: 3.1.2
2022-09-10 22:45:29,953:INFO:               scipy: 1.8.1
2022-09-10 22:45:29,953:INFO:              joblib: 1.1.0
2022-09-10 22:45:29,954:INFO:             sklearn: 1.1.2
2022-09-10 22:45:29,954:INFO:                pyod: Installed but version unavailable
2022-09-10 22:45:29,954:INFO:            imblearn: 0.9.1
2022-09-10 22:45:29,954:INFO:   category_encoders: 2.5.0
2022-09-10 22:45:29,954:INFO:            lightgbm: 3.3.2
2022-09-10 22:45:29,954:INFO:               numba: 0.55.2
2022-09-10 22:45:29,954:INFO:            requests: 2.28.1
2022-09-10 22:45:29,954:INFO:          matplotlib: 3.6.0rc2
2022-09-10 22:45:29,954:INFO:          scikitplot: 0.3.7
2022-09-10 22:45:29,954:INFO:         yellowbrick: 1.5
2022-09-10 22:45:29,954:INFO:              plotly: 5.10.0
2022-09-10 22:45:29,954:INFO:             kaleido: 0.2.1
2022-09-10 22:45:29,954:INFO:         statsmodels: 0.13.2
2022-09-10 22:45:29,954:INFO:              sktime: 0.11.4
2022-09-10 22:45:29,954:INFO:               tbats: Installed but version unavailable
2022-09-10 22:45:29,954:INFO:            pmdarima: 2.0.1
2022-09-10 22:45:29,954:INFO:              psutil: 5.9.2
2022-09-10 22:45:29,954:INFO:None
2022-09-10 22:45:29,954:INFO:Set up data.
2022-09-10 22:45:29,959:INFO:Set up train/test split.
2022-09-10 22:45:29,964:INFO:Assigning column types.
2022-09-10 22:45:29,966:INFO:Set up folding strategy.
2022-09-10 22:45:29,967:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2022-09-10 22:45:30,017:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2022-09-10 22:45:30,018:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2022-09-10 22:45:30,051:WARNING:No module named 'xgboost'.
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-09-10 22:45:30,052:WARNING:No module named 'catboost'.
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-09-10 22:45:30,104:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2022-09-10 22:45:30,105:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2022-09-10 22:45:30,137:WARNING:No module named 'xgboost'.
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-09-10 22:45:30,138:WARNING:No module named 'catboost'.
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-09-10 22:45:30,139:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2022-09-10 22:45:30,191:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2022-09-10 22:45:30,223:WARNING:No module named 'xgboost'.
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-09-10 22:45:30,224:WARNING:No module named 'catboost'.
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-09-10 22:45:30,276:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2022-09-10 22:45:30,309:WARNING:No module named 'xgboost'.
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-09-10 22:45:30,310:WARNING:No module named 'catboost'.
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-09-10 22:45:30,310:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2022-09-10 22:45:30,394:WARNING:No module named 'xgboost'.
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-09-10 22:45:30,395:WARNING:No module named 'catboost'.
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-09-10 22:45:30,479:WARNING:No module named 'xgboost'.
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-09-10 22:45:30,480:WARNING:No module named 'catboost'.
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-09-10 22:45:30,481:INFO:Preparing preprocessing pipeline...
2022-09-10 22:45:30,482:INFO:Set up label encoding.
2022-09-10 22:45:30,482:INFO:Set up simple imputation.
2022-09-10 22:45:30,483:INFO:Set up encoding of categorical features.
2022-09-10 22:45:30,483:INFO:Set up variance threshold.
2022-09-10 22:45:30,639:INFO:Finished creating preprocessing pipeline.
2022-09-10 22:45:30,646:INFO:Pipeline: Pipeline(memory=Memory(location=C:\Users\bruno\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              missing_values=nan,
                                                              strategy='m...
                ('rest_encoding',
                 TransformerWrapper(exclude=None, include=['input'],
                                    transformer=LeaveOneOutEncoder(cols=['input'],
                                                                   drop_invariant=False,
                                                                   handle_missing='return_nan',
                                                                   handle_unknown='value',
                                                                   random_state=4553,
                                                                   return_df=True,
                                                                   sigma=None,
                                                                   verbose=0))),
                ('low_variance',
                 TransformerWrapper(exclude=[], include=None,
                                    transformer=VarianceThreshold(threshold=0)))],
         verbose=False)
2022-09-10 22:45:30,646:INFO:Creating final display dataframe.
2022-09-10 22:45:31,217:INFO:Setup display_container:                     Description                                     Value
0                    Session id                                      4553
1                        Target                                     class
2                   Target type                                Multiclass
3                Target mapping  covid: 0, seloturismo: 1, tuberculose: 2
4           Original data shape                                 (2142, 2)
5        Transformed data shape                                 (2142, 2)
6   Transformed train set shape                                 (1499, 2)
7    Transformed test set shape                                  (643, 2)
8          Categorical features                                         1
9                    Preprocess                                      True
10              Imputation type                                    simple
11           Numeric imputation                                      mean
12       Categorical imputation                                  constant
13     Maximum one-hot encoding                                         5
14              Encoding method                                      None
15       Low variance threshold                                         0
16               Fold Generator                           StratifiedKFold
17                  Fold Number                                        10
18                     CPU Jobs                                        -1
19                      Use GPU                                     False
20               Log Experiment                                     False
21              Experiment Name                          clf-default-name
22                          USI                                      32bf
2022-09-10 22:45:31,308:WARNING:No module named 'xgboost'.
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-09-10 22:45:31,309:WARNING:No module named 'catboost'.
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-09-10 22:45:31,394:WARNING:No module named 'xgboost'.
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-09-10 22:45:31,395:WARNING:No module named 'catboost'.
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-09-10 22:45:31,401:INFO:setup() successfully completed in 1.45s...............
2022-09-10 22:45:31,440:INFO:Initializing compare_models()
2022-09-10 22:45:31,440:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001DAF6F71640>, include=None, fold=None, round=4, cross_validation=True, sort=Accuracy, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x000001DAF6F71640>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engines': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2022-09-10 22:45:31,440:INFO:Checking exceptions
2022-09-10 22:45:31,443:INFO:Preparing display monitor
2022-09-10 22:45:31,477:INFO:Initializing Logistic Regression
2022-09-10 22:45:31,477:INFO:Total runtime is 0.0 minutes
2022-09-10 22:45:31,480:INFO:SubProcess create_model() called ==================================
2022-09-10 22:45:31,480:INFO:Initializing create_model()
2022-09-10 22:45:31,480:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001DAF6F71640>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001DAF6BC54C0>, model_only=True, return_train_score=False, kwargs={})
2022-09-10 22:45:31,481:INFO:Checking exceptions
2022-09-10 22:45:31,483:INFO:Importing libraries
2022-09-10 22:45:31,483:INFO:Copying training dataset
2022-09-10 22:45:31,485:INFO:Defining folds
2022-09-10 22:45:31,485:INFO:Declaring metric variables
2022-09-10 22:45:31,488:INFO:Importing untrained model
2022-09-10 22:45:31,491:INFO:Logistic Regression Imported successfully
2022-09-10 22:45:31,497:INFO:Starting cross validation
2022-09-10 22:45:31,498:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-09-10 22:45:31,701:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:45:31,706:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:45:31,714:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:45:31,716:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:45:31,729:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:45:31,739:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:45:31,836:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:45:31,848:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:45:31,848:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:45:31,858:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:45:31,866:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:45:31,880:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:45:31,921:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:45:31,923:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:45:31,923:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-09-10 22:45:31,924:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:45:31,925:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:45:31,927:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:45:31,928:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:45:31,930:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-09-10 22:45:31,930:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:45:31,930:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:45:31,937:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-09-10 22:45:31,938:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:45:31,941:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:45:31,943:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:45:31,944:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-09-10 22:45:31,945:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:45:31,946:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:45:31,947:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:45:31,948:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-09-10 22:45:31,949:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:45:31,961:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:45:31,962:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:45:31,963:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-09-10 22:45:31,963:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:45:32,100:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:45:32,104:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:45:32,114:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:45:32,119:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:45:32,224:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:45:32,226:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:45:32,237:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:45:32,240:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:45:32,296:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:45:32,297:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:45:32,298:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:45:32,299:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-09-10 22:45:32,299:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:45:32,299:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:45:32,300:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-09-10 22:45:32,300:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:45:32,306:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:45:32,307:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:45:32,308:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:45:32,308:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-09-10 22:45:32,309:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:45:32,309:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:45:32,310:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-09-10 22:45:32,310:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:45:32,313:INFO:Calculating mean and std
2022-09-10 22:45:32,314:INFO:Creating metrics dataframe
2022-09-10 22:45:32,317:INFO:Uploading results into container
2022-09-10 22:45:32,317:INFO:Uploading model into container now
2022-09-10 22:45:32,318:INFO:master_model_container: 1
2022-09-10 22:45:32,318:INFO:display_container: 2
2022-09-10 22:45:32,318:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=4553, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2022-09-10 22:45:32,318:INFO:create_model() successfully completed......................................
2022-09-10 22:45:32,443:INFO:SubProcess create_model() end ==================================
2022-09-10 22:45:32,444:INFO:Creating metrics dataframe
2022-09-10 22:45:32,451:INFO:Initializing K Neighbors Classifier
2022-09-10 22:45:32,451:INFO:Total runtime is 0.01623142162958781 minutes
2022-09-10 22:45:32,454:INFO:SubProcess create_model() called ==================================
2022-09-10 22:45:32,455:INFO:Initializing create_model()
2022-09-10 22:45:32,455:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001DAF6F71640>, estimator=knn, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001DAF6BC54C0>, model_only=True, return_train_score=False, kwargs={})
2022-09-10 22:45:32,455:INFO:Checking exceptions
2022-09-10 22:45:32,456:INFO:Importing libraries
2022-09-10 22:45:32,456:INFO:Copying training dataset
2022-09-10 22:45:32,459:INFO:Defining folds
2022-09-10 22:45:32,459:INFO:Declaring metric variables
2022-09-10 22:45:32,462:INFO:Importing untrained model
2022-09-10 22:45:32,465:INFO:K Neighbors Classifier Imported successfully
2022-09-10 22:45:32,471:INFO:Starting cross validation
2022-09-10 22:45:32,472:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-09-10 22:45:32,553:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:45:32,556:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:45:32,556:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:45:32,558:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:45:32,561:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:45:32,572:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:45:32,596:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:45:32,596:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:45:32,597:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:45:32,601:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:45:32,608:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:45:32,620:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:45:32,633:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:45:32,634:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:45:32,635:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:45:32,636:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:45:32,637:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:45:32,638:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:45:32,638:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:45:32,640:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:45:32,641:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:45:32,648:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:45:32,649:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:45:32,650:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-09-10 22:45:32,651:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:45:32,662:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:45:32,662:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:45:32,663:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:45:32,664:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:45:32,665:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:45:32,665:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:45:32,703:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:45:32,703:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:45:32,703:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:45:32,717:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:45:32,743:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:45:32,743:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:45:32,744:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:45:32,757:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:45:32,780:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:45:32,781:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:45:32,782:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:45:32,783:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:45:32,783:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:45:32,783:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:45:32,784:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:45:32,785:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:45:32,786:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:45:32,795:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:45:32,796:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:45:32,798:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:45:32,801:INFO:Calculating mean and std
2022-09-10 22:45:32,802:INFO:Creating metrics dataframe
2022-09-10 22:45:32,805:INFO:Uploading results into container
2022-09-10 22:45:32,806:INFO:Uploading model into container now
2022-09-10 22:45:32,806:INFO:master_model_container: 2
2022-09-10 22:45:32,806:INFO:display_container: 2
2022-09-10 22:45:32,807:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2022-09-10 22:45:32,807:INFO:create_model() successfully completed......................................
2022-09-10 22:45:32,931:INFO:SubProcess create_model() end ==================================
2022-09-10 22:45:32,931:INFO:Creating metrics dataframe
2022-09-10 22:45:32,940:INFO:Initializing Naive Bayes
2022-09-10 22:45:32,940:INFO:Total runtime is 0.024388841787974038 minutes
2022-09-10 22:45:32,943:INFO:SubProcess create_model() called ==================================
2022-09-10 22:45:32,943:INFO:Initializing create_model()
2022-09-10 22:45:32,943:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001DAF6F71640>, estimator=nb, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001DAF6BC54C0>, model_only=True, return_train_score=False, kwargs={})
2022-09-10 22:45:32,943:INFO:Checking exceptions
2022-09-10 22:45:32,945:INFO:Importing libraries
2022-09-10 22:45:32,945:INFO:Copying training dataset
2022-09-10 22:45:32,947:INFO:Defining folds
2022-09-10 22:45:32,948:INFO:Declaring metric variables
2022-09-10 22:45:32,951:INFO:Importing untrained model
2022-09-10 22:45:32,954:INFO:Naive Bayes Imported successfully
2022-09-10 22:45:32,960:INFO:Starting cross validation
2022-09-10 22:45:32,961:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-09-10 22:45:33,021:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:45:33,023:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:45:33,024:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:45:33,029:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:45:33,031:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:45:33,038:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:45:33,053:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:45:33,055:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:45:33,056:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:45:33,062:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:45:33,065:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:45:33,073:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:45:33,086:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:45:33,087:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:45:33,088:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:45:33,088:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-09-10 22:45:33,089:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:45:33,089:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:45:33,089:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-09-10 22:45:33,090:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:45:33,090:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:45:33,091:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:45:33,091:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-09-10 22:45:33,092:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:45:33,097:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:45:33,099:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:45:33,100:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:45:33,100:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-09-10 22:45:33,101:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:45:33,101:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:45:33,102:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-09-10 22:45:33,103:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:45:33,111:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:45:33,112:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:45:33,113:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-09-10 22:45:33,114:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:45:33,135:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:45:33,135:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:45:33,139:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:45:33,145:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:45:33,166:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:45:33,167:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:45:33,170:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:45:33,178:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:45:33,199:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:45:33,201:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:45:33,201:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:45:33,202:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-09-10 22:45:33,202:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:45:33,203:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:45:33,203:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-09-10 22:45:33,204:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:45:33,204:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:45:33,205:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:45:33,206:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-09-10 22:45:33,207:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:45:33,211:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:45:33,212:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:45:33,213:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-09-10 22:45:33,213:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:45:33,216:INFO:Calculating mean and std
2022-09-10 22:45:33,218:INFO:Creating metrics dataframe
2022-09-10 22:45:33,221:INFO:Uploading results into container
2022-09-10 22:45:33,221:INFO:Uploading model into container now
2022-09-10 22:45:33,221:INFO:master_model_container: 3
2022-09-10 22:45:33,222:INFO:display_container: 2
2022-09-10 22:45:33,222:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2022-09-10 22:45:33,222:INFO:create_model() successfully completed......................................
2022-09-10 22:45:33,347:INFO:SubProcess create_model() end ==================================
2022-09-10 22:45:33,347:INFO:Creating metrics dataframe
2022-09-10 22:45:33,357:INFO:Initializing Decision Tree Classifier
2022-09-10 22:45:33,357:INFO:Total runtime is 0.03132847547531128 minutes
2022-09-10 22:45:33,360:INFO:SubProcess create_model() called ==================================
2022-09-10 22:45:33,360:INFO:Initializing create_model()
2022-09-10 22:45:33,360:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001DAF6F71640>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001DAF6BC54C0>, model_only=True, return_train_score=False, kwargs={})
2022-09-10 22:45:33,360:INFO:Checking exceptions
2022-09-10 22:45:33,362:INFO:Importing libraries
2022-09-10 22:45:33,362:INFO:Copying training dataset
2022-09-10 22:45:33,364:INFO:Defining folds
2022-09-10 22:45:33,365:INFO:Declaring metric variables
2022-09-10 22:45:33,368:INFO:Importing untrained model
2022-09-10 22:45:33,371:INFO:Decision Tree Classifier Imported successfully
2022-09-10 22:45:33,377:INFO:Starting cross validation
2022-09-10 22:45:33,378:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-09-10 22:45:33,440:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:45:33,441:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:45:33,443:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:45:33,447:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:45:33,449:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:45:33,455:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:45:33,472:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:45:33,473:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:45:33,475:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:45:33,479:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:45:33,482:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:45:33,489:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:45:33,506:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:45:33,508:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:45:33,509:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:45:33,509:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:45:33,510:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:45:33,510:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:45:33,511:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:45:33,512:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:45:33,513:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:45:33,514:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:45:33,515:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:45:33,515:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:45:33,517:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:45:33,518:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:45:33,521:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:45:33,524:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:45:33,525:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:45:33,527:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:45:33,554:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:45:33,559:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:45:33,561:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:45:33,561:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:45:33,587:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:45:33,592:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:45:33,592:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:45:33,593:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:45:33,619:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:45:33,621:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:45:33,622:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:45:33,625:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:45:33,626:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:45:33,627:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:45:33,627:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:45:33,628:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:45:33,628:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:45:33,629:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:45:33,629:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:45:33,630:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:45:33,633:INFO:Calculating mean and std
2022-09-10 22:45:33,634:INFO:Creating metrics dataframe
2022-09-10 22:45:33,638:INFO:Uploading results into container
2022-09-10 22:45:33,638:INFO:Uploading model into container now
2022-09-10 22:45:33,638:INFO:master_model_container: 4
2022-09-10 22:45:33,639:INFO:display_container: 2
2022-09-10 22:45:33,639:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=4553, splitter='best')
2022-09-10 22:45:33,639:INFO:create_model() successfully completed......................................
2022-09-10 22:45:33,765:INFO:SubProcess create_model() end ==================================
2022-09-10 22:45:33,765:INFO:Creating metrics dataframe
2022-09-10 22:45:33,774:INFO:Initializing SVM - Linear Kernel
2022-09-10 22:45:33,774:INFO:Total runtime is 0.038284798463185624 minutes
2022-09-10 22:45:33,777:INFO:SubProcess create_model() called ==================================
2022-09-10 22:45:33,777:INFO:Initializing create_model()
2022-09-10 22:45:33,777:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001DAF6F71640>, estimator=svm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001DAF6BC54C0>, model_only=True, return_train_score=False, kwargs={})
2022-09-10 22:45:33,778:INFO:Checking exceptions
2022-09-10 22:45:33,779:INFO:Importing libraries
2022-09-10 22:45:33,779:INFO:Copying training dataset
2022-09-10 22:45:33,781:INFO:Defining folds
2022-09-10 22:45:33,782:INFO:Declaring metric variables
2022-09-10 22:45:33,784:INFO:Importing untrained model
2022-09-10 22:45:33,787:INFO:SVM - Linear Kernel Imported successfully
2022-09-10 22:45:33,793:INFO:Starting cross validation
2022-09-10 22:45:33,794:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-09-10 22:45:33,871:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:45:33,875:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:45:33,877:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:45:33,878:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:45:33,889:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:45:33,897:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:45:33,906:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:45:33,906:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:45:33,908:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:45:33,908:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-09-10 22:45:33,909:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:45:33,910:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:45:33,910:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:45:33,911:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:45:33,912:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:45:33,912:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:45:33,913:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-09-10 22:45:33,913:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:45:33,913:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:45:33,914:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-09-10 22:45:33,914:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:45:33,914:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:45:33,915:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:45:33,917:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:45:33,918:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-09-10 22:45:33,918:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:45:33,926:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:45:33,927:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:45:33,928:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:45:33,928:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:45:33,929:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:45:33,929:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-09-10 22:45:33,929:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:45:33,930:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:45:33,931:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-09-10 22:45:33,932:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:45:33,967:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:45:33,967:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:45:33,972:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:45:33,974:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:45:33,998:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:45:33,999:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:45:34,000:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:45:34,000:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:45:34,001:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:45:34,001:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-09-10 22:45:34,002:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:45:34,002:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:45:34,003:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-09-10 22:45:34,003:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:45:34,004:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:45:34,004:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:45:34,006:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:45:34,006:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:45:34,007:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:45:34,008:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:45:34,009:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-09-10 22:45:34,010:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:45:34,013:INFO:Calculating mean and std
2022-09-10 22:45:34,014:INFO:Creating metrics dataframe
2022-09-10 22:45:34,018:INFO:Uploading results into container
2022-09-10 22:45:34,018:INFO:Uploading model into container now
2022-09-10 22:45:34,018:INFO:master_model_container: 5
2022-09-10 22:45:34,018:INFO:display_container: 2
2022-09-10 22:45:34,019:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=4553, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2022-09-10 22:45:34,019:INFO:create_model() successfully completed......................................
2022-09-10 22:45:34,146:INFO:SubProcess create_model() end ==================================
2022-09-10 22:45:34,146:INFO:Creating metrics dataframe
2022-09-10 22:45:34,155:INFO:Initializing Ridge Classifier
2022-09-10 22:45:34,156:INFO:Total runtime is 0.04465726216634114 minutes
2022-09-10 22:45:34,159:INFO:SubProcess create_model() called ==================================
2022-09-10 22:45:34,159:INFO:Initializing create_model()
2022-09-10 22:45:34,159:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001DAF6F71640>, estimator=ridge, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001DAF6BC54C0>, model_only=True, return_train_score=False, kwargs={})
2022-09-10 22:45:34,160:INFO:Checking exceptions
2022-09-10 22:45:34,161:INFO:Importing libraries
2022-09-10 22:45:34,161:INFO:Copying training dataset
2022-09-10 22:45:34,163:INFO:Defining folds
2022-09-10 22:45:34,164:INFO:Declaring metric variables
2022-09-10 22:45:34,167:INFO:Importing untrained model
2022-09-10 22:45:34,170:INFO:Ridge Classifier Imported successfully
2022-09-10 22:45:34,176:INFO:Starting cross validation
2022-09-10 22:45:34,177:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-09-10 22:45:34,241:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:45:34,241:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:45:34,242:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:45:34,247:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:45:34,249:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:45:34,257:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:45:34,273:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:45:34,273:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:45:34,273:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:45:34,273:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:45:34,273:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:45:34,274:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:45:34,275:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:45:34,275:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:45:34,275:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-09-10 22:45:34,275:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-09-10 22:45:34,275:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:45:34,276:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:45:34,276:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:45:34,277:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-09-10 22:45:34,277:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:45:34,281:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:45:34,281:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:45:34,282:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:45:34,283:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:45:34,284:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:45:34,284:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:45:34,285:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-09-10 22:45:34,285:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-09-10 22:45:34,285:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:45:34,286:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:45:34,297:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:45:34,298:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:45:34,299:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:45:34,300:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-09-10 22:45:34,301:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:45:34,321:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:45:34,325:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:45:34,332:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:45:34,353:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:45:34,354:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:45:34,354:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:45:34,355:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:45:34,355:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:45:34,356:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-09-10 22:45:34,356:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:45:34,357:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:45:34,357:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-09-10 22:45:34,358:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:45:34,358:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:45:34,358:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:45:34,360:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:45:34,361:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-09-10 22:45:34,361:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:45:34,364:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:45:34,364:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:45:34,366:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:45:34,366:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-09-10 22:45:34,367:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:45:34,370:INFO:Calculating mean and std
2022-09-10 22:45:34,371:INFO:Creating metrics dataframe
2022-09-10 22:45:34,375:INFO:Uploading results into container
2022-09-10 22:45:34,375:INFO:Uploading model into container now
2022-09-10 22:45:34,375:INFO:master_model_container: 6
2022-09-10 22:45:34,375:INFO:display_container: 2
2022-09-10 22:45:34,376:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, normalize='deprecated', positive=False,
                random_state=4553, solver='auto', tol=0.001)
2022-09-10 22:45:34,376:INFO:create_model() successfully completed......................................
2022-09-10 22:45:34,504:INFO:SubProcess create_model() end ==================================
2022-09-10 22:45:34,504:INFO:Creating metrics dataframe
2022-09-10 22:45:34,514:INFO:Initializing Random Forest Classifier
2022-09-10 22:45:34,514:INFO:Total runtime is 0.05061268011728922 minutes
2022-09-10 22:45:34,517:INFO:SubProcess create_model() called ==================================
2022-09-10 22:45:34,517:INFO:Initializing create_model()
2022-09-10 22:45:34,517:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001DAF6F71640>, estimator=rf, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001DAF6BC54C0>, model_only=True, return_train_score=False, kwargs={})
2022-09-10 22:45:34,517:INFO:Checking exceptions
2022-09-10 22:45:34,519:INFO:Importing libraries
2022-09-10 22:45:34,519:INFO:Copying training dataset
2022-09-10 22:45:34,522:INFO:Defining folds
2022-09-10 22:45:34,522:INFO:Declaring metric variables
2022-09-10 22:45:34,525:INFO:Importing untrained model
2022-09-10 22:45:34,528:INFO:Random Forest Classifier Imported successfully
2022-09-10 22:45:34,535:INFO:Starting cross validation
2022-09-10 22:45:34,536:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-09-10 22:45:34,722:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:45:34,722:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:45:34,730:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:45:34,732:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:45:34,739:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:45:34,767:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:45:34,769:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:45:34,778:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:45:34,779:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:45:34,787:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:45:34,793:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:45:34,821:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:45:34,822:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:45:34,824:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:45:34,827:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:45:34,828:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:45:34,829:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:45:34,830:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:45:34,848:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:45:34,849:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:45:34,850:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:45:34,850:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:45:34,851:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:45:34,852:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:45:34,866:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:45:34,868:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:45:34,870:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:45:34,894:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:45:34,896:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:45:34,898:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:45:35,016:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:45:35,029:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:45:35,040:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:45:35,041:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:45:35,062:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:45:35,077:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:45:35,086:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:45:35,090:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:45:35,112:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:45:35,114:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:45:35,115:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:45:35,127:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:45:35,129:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:45:35,130:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:45:35,135:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:45:35,137:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:45:35,138:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:45:35,140:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:45:35,141:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:45:35,143:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:45:35,146:INFO:Calculating mean and std
2022-09-10 22:45:35,147:INFO:Creating metrics dataframe
2022-09-10 22:45:35,150:INFO:Uploading results into container
2022-09-10 22:45:35,151:INFO:Uploading model into container now
2022-09-10 22:45:35,151:INFO:master_model_container: 7
2022-09-10 22:45:35,151:INFO:display_container: 2
2022-09-10 22:45:35,151:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=4553, verbose=0, warm_start=False)
2022-09-10 22:45:35,151:INFO:create_model() successfully completed......................................
2022-09-10 22:45:35,287:INFO:SubProcess create_model() end ==================================
2022-09-10 22:45:35,287:INFO:Creating metrics dataframe
2022-09-10 22:45:35,298:INFO:Initializing Quadratic Discriminant Analysis
2022-09-10 22:45:35,298:INFO:Total runtime is 0.06369123061498005 minutes
2022-09-10 22:45:35,301:INFO:SubProcess create_model() called ==================================
2022-09-10 22:45:35,302:INFO:Initializing create_model()
2022-09-10 22:45:35,302:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001DAF6F71640>, estimator=qda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001DAF6BC54C0>, model_only=True, return_train_score=False, kwargs={})
2022-09-10 22:45:35,302:INFO:Checking exceptions
2022-09-10 22:45:35,303:INFO:Importing libraries
2022-09-10 22:45:35,303:INFO:Copying training dataset
2022-09-10 22:45:35,306:INFO:Defining folds
2022-09-10 22:45:35,306:INFO:Declaring metric variables
2022-09-10 22:45:35,309:INFO:Importing untrained model
2022-09-10 22:45:35,312:INFO:Quadratic Discriminant Analysis Imported successfully
2022-09-10 22:45:35,319:INFO:Starting cross validation
2022-09-10 22:45:35,320:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-09-10 22:45:35,383:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:45:35,384:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:45:35,385:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:45:35,387:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:45:35,389:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:45:35,400:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:45:35,416:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:45:35,417:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:45:35,419:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:45:35,421:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:45:35,421:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:45:35,433:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:45:35,452:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:45:35,452:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:45:35,454:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:45:35,454:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:45:35,454:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:45:35,454:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:45:35,454:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-09-10 22:45:35,454:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-09-10 22:45:35,454:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:45:35,455:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:45:35,455:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:45:35,455:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:45:35,456:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:45:35,456:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-09-10 22:45:35,456:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:45:35,456:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-09-10 22:45:35,457:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:45:35,457:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:45:35,457:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-09-10 22:45:35,458:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:45:35,476:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:45:35,479:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:45:35,479:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-09-10 22:45:35,480:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:45:35,501:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:45:35,506:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:45:35,510:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:45:35,511:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:45:35,536:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:45:35,543:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:45:35,547:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:45:35,550:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:45:35,576:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:45:35,578:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:45:35,579:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-09-10 22:45:35,579:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:45:35,580:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:45:35,580:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:45:35,581:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-09-10 22:45:35,582:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:45:35,585:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:45:35,586:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:45:35,587:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:45:35,587:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-09-10 22:45:35,588:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:45:35,588:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:45:35,589:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-09-10 22:45:35,590:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:45:35,593:INFO:Calculating mean and std
2022-09-10 22:45:35,594:INFO:Creating metrics dataframe
2022-09-10 22:45:35,598:INFO:Uploading results into container
2022-09-10 22:45:35,598:INFO:Uploading model into container now
2022-09-10 22:45:35,599:INFO:master_model_container: 8
2022-09-10 22:45:35,599:INFO:display_container: 2
2022-09-10 22:45:35,599:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2022-09-10 22:45:35,599:INFO:create_model() successfully completed......................................
2022-09-10 22:45:35,725:INFO:SubProcess create_model() end ==================================
2022-09-10 22:45:35,725:INFO:Creating metrics dataframe
2022-09-10 22:45:35,736:INFO:Initializing Ada Boost Classifier
2022-09-10 22:45:35,736:INFO:Total runtime is 0.07098118861516316 minutes
2022-09-10 22:45:35,739:INFO:SubProcess create_model() called ==================================
2022-09-10 22:45:35,739:INFO:Initializing create_model()
2022-09-10 22:45:35,739:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001DAF6F71640>, estimator=ada, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001DAF6BC54C0>, model_only=True, return_train_score=False, kwargs={})
2022-09-10 22:45:35,739:INFO:Checking exceptions
2022-09-10 22:45:35,741:INFO:Importing libraries
2022-09-10 22:45:35,741:INFO:Copying training dataset
2022-09-10 22:45:35,743:INFO:Defining folds
2022-09-10 22:45:35,743:INFO:Declaring metric variables
2022-09-10 22:45:35,746:INFO:Importing untrained model
2022-09-10 22:45:35,750:INFO:Ada Boost Classifier Imported successfully
2022-09-10 22:45:35,756:INFO:Starting cross validation
2022-09-10 22:45:35,756:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-09-10 22:45:35,879:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:45:35,882:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:45:35,883:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:45:35,892:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:45:35,895:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:45:35,905:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:45:35,917:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:45:35,920:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:45:35,922:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:45:35,936:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:45:35,939:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:45:35,945:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:45:35,957:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:45:35,958:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:45:35,959:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:45:35,960:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:45:35,962:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:45:35,963:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:45:35,965:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:45:35,967:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:45:35,968:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:45:35,978:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:45:35,980:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:45:35,981:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:45:35,981:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:45:35,982:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:45:35,983:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:45:35,987:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:45:35,988:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:45:35,989:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:45:36,068:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:45:36,074:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:45:36,086:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:45:36,094:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:45:36,106:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:45:36,115:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:45:36,126:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:45:36,130:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:45:36,148:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:45:36,149:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:45:36,151:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:45:36,157:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:45:36,158:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:45:36,161:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:45:36,167:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:45:36,168:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:45:36,169:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:45:36,171:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:45:36,172:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:45:36,174:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:45:36,177:INFO:Calculating mean and std
2022-09-10 22:45:36,178:INFO:Creating metrics dataframe
2022-09-10 22:45:36,182:INFO:Uploading results into container
2022-09-10 22:45:36,182:INFO:Uploading model into container now
2022-09-10 22:45:36,183:INFO:master_model_container: 9
2022-09-10 22:45:36,183:INFO:display_container: 2
2022-09-10 22:45:36,183:INFO:AdaBoostClassifier(algorithm='SAMME.R', base_estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=4553)
2022-09-10 22:45:36,183:INFO:create_model() successfully completed......................................
2022-09-10 22:45:36,319:INFO:SubProcess create_model() end ==================================
2022-09-10 22:45:36,319:INFO:Creating metrics dataframe
2022-09-10 22:45:36,330:INFO:Initializing Gradient Boosting Classifier
2022-09-10 22:45:36,330:INFO:Total runtime is 0.08089019060134886 minutes
2022-09-10 22:45:36,333:INFO:SubProcess create_model() called ==================================
2022-09-10 22:45:36,334:INFO:Initializing create_model()
2022-09-10 22:45:36,334:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001DAF6F71640>, estimator=gbc, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001DAF6BC54C0>, model_only=True, return_train_score=False, kwargs={})
2022-09-10 22:45:36,334:INFO:Checking exceptions
2022-09-10 22:45:36,335:INFO:Importing libraries
2022-09-10 22:45:36,335:INFO:Copying training dataset
2022-09-10 22:45:36,338:INFO:Defining folds
2022-09-10 22:45:36,338:INFO:Declaring metric variables
2022-09-10 22:45:36,341:INFO:Importing untrained model
2022-09-10 22:45:36,344:INFO:Gradient Boosting Classifier Imported successfully
2022-09-10 22:45:36,350:INFO:Starting cross validation
2022-09-10 22:45:36,351:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-09-10 22:45:36,645:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:45:36,647:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:45:36,647:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:45:36,668:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:45:36,669:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:45:36,670:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:45:36,677:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:45:36,679:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:45:36,680:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:45:36,704:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:45:36,711:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:45:36,712:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:45:36,713:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:45:36,714:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:45:36,714:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:45:36,715:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:45:36,715:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:45:36,716:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:45:36,718:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:45:36,719:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:45:36,725:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:45:36,746:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:45:36,747:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:45:36,748:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:45:36,749:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:45:36,750:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:45:36,752:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:45:36,765:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:45:36,766:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:45:36,770:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:45:37,005:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:45:37,021:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:45:37,030:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:45:37,042:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:45:37,058:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:45:37,063:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:45:37,066:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:45:37,080:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:45:37,082:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:45:37,086:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:45:37,093:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:45:37,095:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:45:37,096:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:45:37,100:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:45:37,106:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:45:37,108:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:45:37,109:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:45:37,135:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:45:37,137:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:45:37,138:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:45:37,142:INFO:Calculating mean and std
2022-09-10 22:45:37,143:INFO:Creating metrics dataframe
2022-09-10 22:45:37,147:INFO:Uploading results into container
2022-09-10 22:45:37,147:INFO:Uploading model into container now
2022-09-10 22:45:37,148:INFO:master_model_container: 10
2022-09-10 22:45:37,148:INFO:display_container: 2
2022-09-10 22:45:37,148:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=4553, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2022-09-10 22:45:37,148:INFO:create_model() successfully completed......................................
2022-09-10 22:45:37,289:INFO:SubProcess create_model() end ==================================
2022-09-10 22:45:37,289:INFO:Creating metrics dataframe
2022-09-10 22:45:37,301:INFO:Initializing Linear Discriminant Analysis
2022-09-10 22:45:37,301:INFO:Total runtime is 0.09707157214482623 minutes
2022-09-10 22:45:37,304:INFO:SubProcess create_model() called ==================================
2022-09-10 22:45:37,305:INFO:Initializing create_model()
2022-09-10 22:45:37,305:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001DAF6F71640>, estimator=lda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001DAF6BC54C0>, model_only=True, return_train_score=False, kwargs={})
2022-09-10 22:45:37,305:INFO:Checking exceptions
2022-09-10 22:45:37,306:INFO:Importing libraries
2022-09-10 22:45:37,306:INFO:Copying training dataset
2022-09-10 22:45:37,309:INFO:Defining folds
2022-09-10 22:45:37,309:INFO:Declaring metric variables
2022-09-10 22:45:37,312:INFO:Importing untrained model
2022-09-10 22:45:37,315:INFO:Linear Discriminant Analysis Imported successfully
2022-09-10 22:45:37,321:INFO:Starting cross validation
2022-09-10 22:45:37,322:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-09-10 22:45:37,383:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:45:37,387:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:45:37,390:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:45:37,392:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:45:37,399:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:45:37,400:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:45:37,414:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:45:37,420:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:45:37,420:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:45:37,425:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:45:37,431:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:45:37,434:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:45:37,447:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:45:37,449:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:45:37,449:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-09-10 22:45:37,450:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:45:37,455:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:45:37,455:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:45:37,456:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:45:37,457:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-09-10 22:45:37,458:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:45:37,458:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:45:37,458:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-09-10 22:45:37,459:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:45:37,461:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:45:37,462:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:45:37,463:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-09-10 22:45:37,464:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:45:37,465:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:45:37,466:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:45:37,467:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-09-10 22:45:37,468:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:45:37,469:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:45:37,471:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:45:37,472:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-09-10 22:45:37,473:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:45:37,503:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:45:37,504:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:45:37,512:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:45:37,512:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:45:37,536:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:45:37,536:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:45:37,546:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:45:37,546:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:45:37,571:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:45:37,572:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:45:37,572:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:45:37,573:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-09-10 22:45:37,574:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:45:37,574:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:45:37,574:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-09-10 22:45:37,576:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:45:37,580:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:45:37,581:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:45:37,581:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:45:37,582:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-09-10 22:45:37,582:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:45:37,582:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:45:37,583:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-09-10 22:45:37,584:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:45:37,586:INFO:Calculating mean and std
2022-09-10 22:45:37,588:INFO:Creating metrics dataframe
2022-09-10 22:45:37,591:INFO:Uploading results into container
2022-09-10 22:45:37,592:INFO:Uploading model into container now
2022-09-10 22:45:37,592:INFO:master_model_container: 11
2022-09-10 22:45:37,592:INFO:display_container: 2
2022-09-10 22:45:37,592:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2022-09-10 22:45:37,592:INFO:create_model() successfully completed......................................
2022-09-10 22:45:37,719:INFO:SubProcess create_model() end ==================================
2022-09-10 22:45:37,719:INFO:Creating metrics dataframe
2022-09-10 22:45:37,733:INFO:Initializing Extra Trees Classifier
2022-09-10 22:45:37,733:INFO:Total runtime is 0.10426143805185951 minutes
2022-09-10 22:45:37,736:INFO:SubProcess create_model() called ==================================
2022-09-10 22:45:37,736:INFO:Initializing create_model()
2022-09-10 22:45:37,736:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001DAF6F71640>, estimator=et, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001DAF6BC54C0>, model_only=True, return_train_score=False, kwargs={})
2022-09-10 22:45:37,736:INFO:Checking exceptions
2022-09-10 22:45:37,738:INFO:Importing libraries
2022-09-10 22:45:37,738:INFO:Copying training dataset
2022-09-10 22:45:37,740:INFO:Defining folds
2022-09-10 22:45:37,741:INFO:Declaring metric variables
2022-09-10 22:45:37,744:INFO:Importing untrained model
2022-09-10 22:45:37,747:INFO:Extra Trees Classifier Imported successfully
2022-09-10 22:45:37,753:INFO:Starting cross validation
2022-09-10 22:45:37,754:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-09-10 22:45:37,909:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:45:37,912:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:45:37,915:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:45:37,922:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:45:37,936:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:45:37,949:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:45:37,955:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:45:37,959:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:45:37,969:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:45:37,974:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:45:37,990:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:45:38,002:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:45:38,003:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:45:38,004:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:45:38,005:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:45:38,008:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:45:38,009:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:45:38,010:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:45:38,029:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:45:38,030:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:45:38,031:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:45:38,032:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:45:38,032:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:45:38,033:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:45:38,045:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:45:38,046:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:45:38,049:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:45:38,057:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:45:38,059:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:45:38,060:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:45:38,149:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:45:38,161:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:45:38,175:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:45:38,181:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:45:38,195:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:45:38,207:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:45:38,224:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:45:38,230:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:45:38,245:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:45:38,246:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:45:38,247:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:45:38,258:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:45:38,259:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:45:38,261:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:45:38,273:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:45:38,274:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:45:38,276:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:45:38,279:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:45:38,281:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:45:38,282:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:45:38,285:INFO:Calculating mean and std
2022-09-10 22:45:38,286:INFO:Creating metrics dataframe
2022-09-10 22:45:38,290:INFO:Uploading results into container
2022-09-10 22:45:38,290:INFO:Uploading model into container now
2022-09-10 22:45:38,290:INFO:master_model_container: 12
2022-09-10 22:45:38,290:INFO:display_container: 2
2022-09-10 22:45:38,291:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     n_estimators=100, n_jobs=-1, oob_score=False,
                     random_state=4553, verbose=0, warm_start=False)
2022-09-10 22:45:38,291:INFO:create_model() successfully completed......................................
2022-09-10 22:45:38,416:INFO:SubProcess create_model() end ==================================
2022-09-10 22:45:38,416:INFO:Creating metrics dataframe
2022-09-10 22:45:38,428:INFO:Initializing Light Gradient Boosting Machine
2022-09-10 22:45:38,428:INFO:Total runtime is 0.11585531234741209 minutes
2022-09-10 22:45:38,431:INFO:SubProcess create_model() called ==================================
2022-09-10 22:45:38,431:INFO:Initializing create_model()
2022-09-10 22:45:38,431:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001DAF6F71640>, estimator=lightgbm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001DAF6BC54C0>, model_only=True, return_train_score=False, kwargs={})
2022-09-10 22:45:38,431:INFO:Checking exceptions
2022-09-10 22:45:38,433:INFO:Importing libraries
2022-09-10 22:45:38,433:INFO:Copying training dataset
2022-09-10 22:45:38,436:INFO:Defining folds
2022-09-10 22:45:38,436:INFO:Declaring metric variables
2022-09-10 22:45:38,439:INFO:Importing untrained model
2022-09-10 22:45:38,442:INFO:Light Gradient Boosting Machine Imported successfully
2022-09-10 22:45:38,448:INFO:Starting cross validation
2022-09-10 22:45:38,449:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-09-10 22:45:38,537:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:45:38,544:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:45:38,544:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:45:38,544:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:45:38,553:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:45:38,570:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:45:38,576:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:45:38,579:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:45:38,583:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:45:38,586:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:45:38,586:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:45:38,604:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:45:38,605:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:45:38,606:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:45:38,611:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:45:38,613:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:45:38,614:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:45:38,616:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:45:38,618:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:45:38,620:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:45:38,620:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:45:38,621:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:45:38,621:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:45:38,621:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:45:38,622:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:45:38,623:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:45:38,624:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:45:38,650:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:45:38,652:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:45:38,653:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:45:38,685:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:45:38,687:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:45:38,692:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:45:38,693:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:45:38,717:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:45:38,719:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:45:38,724:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:45:38,724:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:45:38,751:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:45:38,752:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:45:38,752:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:45:38,753:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:45:38,753:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:45:38,754:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:45:38,757:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:45:38,758:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:45:38,759:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:45:38,759:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:45:38,760:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:45:38,760:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:45:38,763:INFO:Calculating mean and std
2022-09-10 22:45:38,765:INFO:Creating metrics dataframe
2022-09-10 22:45:38,768:INFO:Uploading results into container
2022-09-10 22:45:38,768:INFO:Uploading model into container now
2022-09-10 22:45:38,769:INFO:master_model_container: 13
2022-09-10 22:45:38,769:INFO:display_container: 2
2022-09-10 22:45:38,769:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=4553, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0)
2022-09-10 22:45:38,770:INFO:create_model() successfully completed......................................
2022-09-10 22:45:38,895:INFO:SubProcess create_model() end ==================================
2022-09-10 22:45:38,895:INFO:Creating metrics dataframe
2022-09-10 22:45:38,908:INFO:Initializing Dummy Classifier
2022-09-10 22:45:38,908:INFO:Total runtime is 0.12384590705235797 minutes
2022-09-10 22:45:38,911:INFO:SubProcess create_model() called ==================================
2022-09-10 22:45:38,912:INFO:Initializing create_model()
2022-09-10 22:45:38,912:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001DAF6F71640>, estimator=dummy, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001DAF6BC54C0>, model_only=True, return_train_score=False, kwargs={})
2022-09-10 22:45:38,912:INFO:Checking exceptions
2022-09-10 22:45:38,913:INFO:Importing libraries
2022-09-10 22:45:38,913:INFO:Copying training dataset
2022-09-10 22:45:38,916:INFO:Defining folds
2022-09-10 22:45:38,916:INFO:Declaring metric variables
2022-09-10 22:45:38,919:INFO:Importing untrained model
2022-09-10 22:45:38,922:INFO:Dummy Classifier Imported successfully
2022-09-10 22:45:38,928:INFO:Starting cross validation
2022-09-10 22:45:38,929:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-09-10 22:45:38,989:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:45:38,990:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:45:38,991:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:45:38,995:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:45:38,997:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:45:39,004:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:45:39,019:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:45:39,022:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:45:39,022:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:45:39,028:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:45:39,029:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:45:39,038:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:45:39,051:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:45:39,052:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:45:39,053:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-09-10 22:45:39,054:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:45:39,055:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:45:39,056:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:45:39,056:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:45:39,057:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-09-10 22:45:39,058:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:45:39,058:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:45:39,058:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-09-10 22:45:39,059:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:45:39,064:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:45:39,065:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:45:39,066:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-09-10 22:45:39,066:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:45:39,067:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:45:39,069:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:45:39,070:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-09-10 22:45:39,071:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:45:39,073:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:45:39,074:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:45:39,075:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-09-10 22:45:39,076:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:45:39,100:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:45:39,102:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:45:39,102:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:45:39,108:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:45:39,131:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:45:39,132:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:45:39,132:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:45:39,138:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:45:39,163:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:45:39,164:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:45:39,164:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:45:39,165:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-09-10 22:45:39,165:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:45:39,166:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:45:39,166:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:45:39,167:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-09-10 22:45:39,167:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:45:39,167:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:45:39,168:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-09-10 22:45:39,168:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:45:39,170:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:45:39,171:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:45:39,172:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-09-10 22:45:39,173:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:45:39,175:INFO:Calculating mean and std
2022-09-10 22:45:39,177:INFO:Creating metrics dataframe
2022-09-10 22:45:39,180:INFO:Uploading results into container
2022-09-10 22:45:39,181:INFO:Uploading model into container now
2022-09-10 22:45:39,181:INFO:master_model_container: 14
2022-09-10 22:45:39,181:INFO:display_container: 2
2022-09-10 22:45:39,181:INFO:DummyClassifier(constant=None, random_state=4553, strategy='prior')
2022-09-10 22:45:39,182:INFO:create_model() successfully completed......................................
2022-09-10 22:45:39,306:INFO:SubProcess create_model() end ==================================
2022-09-10 22:45:39,306:INFO:Creating metrics dataframe
2022-09-10 22:45:39,327:INFO:Initializing create_model()
2022-09-10 22:45:39,328:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001DAF6F71640>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=4553, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2022-09-10 22:45:39,328:INFO:Checking exceptions
2022-09-10 22:45:39,331:INFO:Importing libraries
2022-09-10 22:45:39,331:INFO:Copying training dataset
2022-09-10 22:45:39,333:INFO:Defining folds
2022-09-10 22:45:39,333:INFO:Declaring metric variables
2022-09-10 22:45:39,333:INFO:Importing untrained model
2022-09-10 22:45:39,333:INFO:Declaring custom model
2022-09-10 22:45:39,333:INFO:Logistic Regression Imported successfully
2022-09-10 22:45:39,334:INFO:Cross validation set to False
2022-09-10 22:45:39,334:INFO:Fitting Model
2022-09-10 22:45:39,484:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=4553, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2022-09-10 22:45:39,484:INFO:create_model() successfully completed......................................
2022-09-10 22:45:39,635:INFO:master_model_container: 14
2022-09-10 22:45:39,635:INFO:display_container: 2
2022-09-10 22:45:39,636:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=4553, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2022-09-10 22:45:39,636:INFO:compare_models() successfully completed......................................
2022-09-10 22:45:39,710:INFO:Initializing evaluate_model()
2022-09-10 22:45:39,710:INFO:evaluate_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001DAF6F71640>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=4553, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=None, fit_kwargs=None, plot_kwargs=None, feature_name=None, groups=None, use_train_data=False)
2022-09-10 22:45:39,726:INFO:Initializing plot_model()
2022-09-10 22:45:39,726:INFO:plot_model(plot=pipeline, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=4553, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001DAF6F71640>, system=True)
2022-09-10 22:45:39,727:INFO:Checking exceptions
2022-09-10 22:45:39,730:INFO:Preloading libraries
2022-09-10 22:45:39,730:INFO:Copying training dataset
2022-09-10 22:45:39,730:INFO:Plot type: pipeline
2022-09-10 22:45:39,866:INFO:Visual Rendered Successfully
2022-09-10 22:45:39,996:INFO:plot_model() successfully completed......................................
2022-09-10 22:45:40,062:INFO:Initializing plot_model()
2022-09-10 22:45:40,062:INFO:plot_model(plot=auc, fold=None, use_train_data=False, verbose=True, display=None, display_format=None, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=4553, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001DAF6F71640>, system=True)
2022-09-10 22:45:40,063:INFO:Checking exceptions
2022-09-10 22:45:40,067:INFO:Preloading libraries
2022-09-10 22:45:40,067:INFO:Copying training dataset
2022-09-10 22:45:40,068:INFO:Plot type: auc
2022-09-10 22:45:40,203:INFO:Fitting Model
2022-09-10 22:45:40,203:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\base.py:450: UserWarning: X does not have valid feature names, but LogisticRegression was fitted with feature names
  warnings.warn(

2022-09-10 22:45:40,203:INFO:Scoring test/hold-out set
2022-09-10 22:45:40,383:INFO:Visual Rendered Successfully
2022-09-10 22:45:40,527:INFO:plot_model() successfully completed......................................
2022-09-10 22:45:40,667:INFO:Initializing predict_model()
2022-09-10 22:45:40,667:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001DAF6F71640>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=4553, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), probability_threshold=None, encoded_labels=False, raw_score=False, drift_report=False, round=4, verbose=True, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x000001DAF8E00EE0>)
2022-09-10 22:45:40,668:INFO:Checking exceptions
2022-09-10 22:45:40,668:INFO:Preloading libraries
2022-09-10 22:45:40,722:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:45:40,723:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:45:40,723:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:45:40,724:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:45:40,724:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:45:40,725:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:45:40,910:INFO:Initializing predict_model()
2022-09-10 22:45:40,910:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001DAF6F71640>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=4553, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), probability_threshold=None, encoded_labels=False, raw_score=False, drift_report=False, round=4, verbose=True, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x000001DAF6B583A0>)
2022-09-10 22:45:40,910:INFO:Checking exceptions
2022-09-10 22:45:40,910:INFO:Preloading libraries
2022-09-10 22:45:40,912:INFO:Set up data.
2022-09-10 22:45:41,014:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:45:41,014:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:45:41,015:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:45:41,016:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:45:41,017:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:45:41,017:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:45:41,245:INFO:Initializing ensemble_model()
2022-09-10 22:45:41,246:INFO:ensemble_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001DAF6F71640>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=4553, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), method=Bagging, fold=None, n_estimators=10, round=4, choose_better=True, optimize=Accuracy, fit_kwargs=None, groups=None, probability_threshold=None, verbose=True, return_train_score=False)
2022-09-10 22:45:41,246:INFO:Checking exceptions
2022-09-10 22:45:41,272:INFO:Importing libraries
2022-09-10 22:45:41,273:INFO:Copying training dataset
2022-09-10 22:45:41,273:INFO:Checking base model
2022-09-10 22:45:41,273:INFO:Base model : Logistic Regression
2022-09-10 22:45:41,279:INFO:Importing untrained ensembler
2022-09-10 22:45:41,280:INFO:Ensemble method set to Bagging
2022-09-10 22:45:41,280:INFO:SubProcess create_model() called ==================================
2022-09-10 22:45:41,281:INFO:Initializing create_model()
2022-09-10 22:45:41,281:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001DAF6F71640>, estimator=BaggingClassifier(base_estimator=LogisticRegression(C=1.0, class_weight=None,
                                                    dual=False,
                                                    fit_intercept=True,
                                                    intercept_scaling=1,
                                                    l1_ratio=None,
                                                    max_iter=1000,
                                                    multi_class='auto',
                                                    n_jobs=None, penalty='l2',
                                                    random_state=4553,
                                                    solver='lbfgs', tol=0.0001,
                                                    verbose=0,
                                                    warm_start=False),
                  bootstrap=True, bootstrap_features=False, max_features=1.0,
                  max_samples=1.0, n_estimators=10, n_jobs=None,
                  oob_score=False, random_state=4553, verbose=0,
                  warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001DAF6C308E0>, model_only=True, return_train_score=False, kwargs={})
2022-09-10 22:45:41,281:INFO:Checking exceptions
2022-09-10 22:45:41,283:INFO:Importing libraries
2022-09-10 22:45:41,284:INFO:Copying training dataset
2022-09-10 22:45:41,286:INFO:Defining folds
2022-09-10 22:45:41,287:INFO:Declaring metric variables
2022-09-10 22:45:41,289:INFO:Importing untrained model
2022-09-10 22:45:41,290:INFO:Declaring custom model
2022-09-10 22:45:41,294:INFO:Logistic Regression Imported successfully
2022-09-10 22:45:41,301:INFO:Starting cross validation
2022-09-10 22:45:41,302:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-09-10 22:45:41,423:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:45:41,426:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:45:41,430:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:45:41,431:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:45:41,435:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:45:41,455:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:45:41,459:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:45:41,460:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:45:41,464:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:45:41,473:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:45:41,473:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:45:41,490:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:45:41,492:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:45:41,493:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-09-10 22:45:41,494:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:45:41,496:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:45:41,496:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:45:41,498:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:45:41,498:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-09-10 22:45:41,499:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:45:41,505:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:45:41,507:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:45:41,508:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-09-10 22:45:41,509:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:45:41,516:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:45:41,517:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:45:41,518:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:45:41,519:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-09-10 22:45:41,519:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:45:41,520:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-09-10 22:45:41,521:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:45:41,521:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:45:41,538:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:45:41,540:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:45:41,541:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-09-10 22:45:41,542:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:45:41,583:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:45:41,595:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:45:41,602:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:45:41,615:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:45:41,618:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:45:41,627:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:45:41,634:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:45:41,649:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:45:41,651:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:45:41,652:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:45:41,652:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-09-10 22:45:41,652:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:45:41,660:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:45:41,662:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:45:41,662:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-09-10 22:45:41,663:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:45:41,668:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:45:41,670:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:45:41,670:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-09-10 22:45:41,671:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:45:41,686:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:45:41,688:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:45:41,688:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-09-10 22:45:41,689:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:45:41,692:INFO:Calculating mean and std
2022-09-10 22:45:41,692:INFO:Creating metrics dataframe
2022-09-10 22:45:41,697:INFO:Finalizing model
2022-09-10 22:45:41,808:INFO:Uploading results into container
2022-09-10 22:45:41,809:INFO:Uploading model into container now
2022-09-10 22:45:41,810:INFO:master_model_container: 15
2022-09-10 22:45:41,810:INFO:display_container: 5
2022-09-10 22:45:41,811:INFO:BaggingClassifier(base_estimator=LogisticRegression(C=1.0, class_weight=None,
                                                    dual=False,
                                                    fit_intercept=True,
                                                    intercept_scaling=1,
                                                    l1_ratio=None,
                                                    max_iter=1000,
                                                    multi_class='auto',
                                                    n_jobs=None, penalty='l2',
                                                    random_state=4553,
                                                    solver='lbfgs', tol=0.0001,
                                                    verbose=0,
                                                    warm_start=False),
                  bootstrap=True, bootstrap_features=False, max_features=1.0,
                  max_samples=1.0, n_estimators=10, n_jobs=None,
                  oob_score=False, random_state=4553, verbose=0,
                  warm_start=False)
2022-09-10 22:45:41,811:INFO:create_model() successfully completed......................................
2022-09-10 22:45:41,938:INFO:SubProcess create_model() end ==================================
2022-09-10 22:45:41,938:INFO:choose_better activated
2022-09-10 22:45:41,941:INFO:SubProcess create_model() called ==================================
2022-09-10 22:45:41,942:INFO:Initializing create_model()
2022-09-10 22:45:41,942:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001DAF6F71640>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=4553, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2022-09-10 22:45:41,942:INFO:Checking exceptions
2022-09-10 22:45:41,944:INFO:Importing libraries
2022-09-10 22:45:41,944:INFO:Copying training dataset
2022-09-10 22:45:41,946:INFO:Defining folds
2022-09-10 22:45:41,946:INFO:Declaring metric variables
2022-09-10 22:45:41,946:INFO:Importing untrained model
2022-09-10 22:45:41,946:INFO:Declaring custom model
2022-09-10 22:45:41,947:INFO:Logistic Regression Imported successfully
2022-09-10 22:45:41,947:INFO:Starting cross validation
2022-09-10 22:45:41,948:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-09-10 22:45:42,013:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:45:42,015:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:45:42,015:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:45:42,020:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:45:42,022:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:45:42,036:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:45:42,045:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:45:42,046:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:45:42,047:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:45:42,055:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:45:42,057:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:45:42,069:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:45:42,079:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:45:42,079:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:45:42,080:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:45:42,081:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-09-10 22:45:42,081:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:45:42,081:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:45:42,082:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-09-10 22:45:42,082:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:45:42,084:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:45:42,085:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:45:42,086:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-09-10 22:45:42,087:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:45:42,088:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:45:42,091:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:45:42,092:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-09-10 22:45:42,093:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:45:42,093:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:45:42,094:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:45:42,095:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-09-10 22:45:42,095:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:45:42,108:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:45:42,109:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:45:42,110:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-09-10 22:45:42,111:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:45:42,130:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:45:42,134:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:45:42,135:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:45:42,140:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:45:42,161:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:45:42,165:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:45:42,166:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:45:42,171:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:45:42,194:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:45:42,195:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:45:42,196:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-09-10 22:45:42,197:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:45:42,198:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:45:42,200:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:45:42,200:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:45:42,201:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-09-10 22:45:42,201:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:45:42,202:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:45:42,202:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-09-10 22:45:42,203:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:45:42,204:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:45:42,205:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:45:42,206:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-09-10 22:45:42,206:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:45:42,209:INFO:Calculating mean and std
2022-09-10 22:45:42,210:INFO:Creating metrics dataframe
2022-09-10 22:45:42,212:INFO:Finalizing model
2022-09-10 22:45:42,253:INFO:Uploading results into container
2022-09-10 22:45:42,254:INFO:Uploading model into container now
2022-09-10 22:45:42,254:INFO:master_model_container: 16
2022-09-10 22:45:42,254:INFO:display_container: 6
2022-09-10 22:45:42,254:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=4553, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2022-09-10 22:45:42,255:INFO:create_model() successfully completed......................................
2022-09-10 22:45:42,378:INFO:SubProcess create_model() end ==================================
2022-09-10 22:45:42,379:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=4553, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False) result for Accuracy is 0.5664
2022-09-10 22:45:42,380:INFO:BaggingClassifier(base_estimator=LogisticRegression(C=1.0, class_weight=None,
                                                    dual=False,
                                                    fit_intercept=True,
                                                    intercept_scaling=1,
                                                    l1_ratio=None,
                                                    max_iter=1000,
                                                    multi_class='auto',
                                                    n_jobs=None, penalty='l2',
                                                    random_state=4553,
                                                    solver='lbfgs', tol=0.0001,
                                                    verbose=0,
                                                    warm_start=False),
                  bootstrap=True, bootstrap_features=False, max_features=1.0,
                  max_samples=1.0, n_estimators=10, n_jobs=None,
                  oob_score=False, random_state=4553, verbose=0,
                  warm_start=False) result for Accuracy is 0.5664
2022-09-10 22:45:42,380:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=4553, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False) is best model
2022-09-10 22:45:42,380:INFO:choose_better completed
2022-09-10 22:45:42,380:INFO:Original model was better than the ensembled model, hence it will be returned. NOTE: The display metrics are for the ensembled model (not the original one).
2022-09-10 22:45:42,389:INFO:master_model_container: 16
2022-09-10 22:45:42,390:INFO:display_container: 5
2022-09-10 22:45:42,390:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=4553, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2022-09-10 22:45:42,390:INFO:ensemble_model() succesfully completed......................................
2022-09-10 22:45:42,587:INFO:Initializing evaluate_model()
2022-09-10 22:45:42,587:INFO:evaluate_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001DAF6F71640>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=4553, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=None, fit_kwargs=None, plot_kwargs=None, feature_name=None, groups=None, use_train_data=False)
2022-09-10 22:45:42,604:INFO:Initializing plot_model()
2022-09-10 22:45:42,604:INFO:plot_model(plot=pipeline, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=4553, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001DAF6F71640>, system=True)
2022-09-10 22:45:42,604:INFO:Checking exceptions
2022-09-10 22:45:42,607:INFO:Preloading libraries
2022-09-10 22:45:42,607:INFO:Copying training dataset
2022-09-10 22:45:42,607:INFO:Plot type: pipeline
2022-09-10 22:45:42,740:INFO:Visual Rendered Successfully
2022-09-10 22:45:42,898:INFO:plot_model() successfully completed......................................
2022-09-10 22:45:42,936:INFO:Initializing plot_model()
2022-09-10 22:45:42,936:INFO:plot_model(plot=auc, fold=None, use_train_data=False, verbose=True, display=None, display_format=None, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=4553, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001DAF6F71640>, system=True)
2022-09-10 22:45:42,936:INFO:Checking exceptions
2022-09-10 22:45:42,940:INFO:Preloading libraries
2022-09-10 22:45:42,940:INFO:Copying training dataset
2022-09-10 22:45:42,940:INFO:Plot type: auc
2022-09-10 22:45:43,072:INFO:Fitting Model
2022-09-10 22:45:43,072:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\base.py:450: UserWarning: X does not have valid feature names, but LogisticRegression was fitted with feature names
  warnings.warn(

2022-09-10 22:45:43,072:INFO:Scoring test/hold-out set
2022-09-10 22:45:43,244:INFO:Visual Rendered Successfully
2022-09-10 22:45:43,369:INFO:plot_model() successfully completed......................................
2022-09-10 22:45:43,398:INFO:Initializing predict_model()
2022-09-10 22:45:43,398:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001DAF6F71640>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=4553, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), probability_threshold=None, encoded_labels=False, raw_score=False, drift_report=False, round=4, verbose=True, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x000001DAF8DC7790>)
2022-09-10 22:45:43,398:INFO:Checking exceptions
2022-09-10 22:45:43,398:INFO:Preloading libraries
2022-09-10 22:45:43,451:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:45:43,451:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:45:43,452:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:45:43,452:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:45:43,453:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:45:43,454:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:45:43,632:INFO:Initializing save_model()
2022-09-10 22:45:43,633:INFO:save_model(model=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=4553, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), model_name=my_best_pipeline, prep_pipe_=Pipeline(memory=Memory(location=C:\Users\bruno\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              missing_values=nan,
                                                              strategy='m...
                ('rest_encoding',
                 TransformerWrapper(exclude=None, include=['input'],
                                    transformer=LeaveOneOutEncoder(cols=['input'],
                                                                   drop_invariant=False,
                                                                   handle_missing='return_nan',
                                                                   handle_unknown='value',
                                                                   random_state=4553,
                                                                   return_df=True,
                                                                   sigma=None,
                                                                   verbose=0))),
                ('low_variance',
                 TransformerWrapper(exclude=[], include=None,
                                    transformer=VarianceThreshold(threshold=0)))],
         verbose=False), verbose=True, use_case=MLUsecase.CLASSIFICATION, kwargs={})
2022-09-10 22:45:43,633:INFO:Adding model into prep_pipe
2022-09-10 22:45:43,638:INFO:my_best_pipeline.pkl saved in current working directory
2022-09-10 22:45:43,646:INFO:Pipeline(memory=Memory(location=C:\Users\bruno\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              missing_values=nan,
                                                              strategy='m...
                 TransformerWrapper(exclude=[], include=None,
                                    transformer=VarianceThreshold(threshold=0))),
                ['trained_model',
                 LogisticRegression(C=1.0, class_weight=None, dual=False,
                                    fit_intercept=True, intercept_scaling=1,
                                    l1_ratio=None, max_iter=1000,
                                    multi_class='auto', n_jobs=None,
                                    penalty='l2', random_state=4553,
                                    solver='lbfgs', tol=0.0001, verbose=0,
                                    warm_start=False)]],
         verbose=False)
2022-09-10 22:45:43,646:INFO:save_model() successfully completed......................................
2022-09-10 22:45:43,816:INFO:Initializing load_model()
2022-09-10 22:45:43,816:INFO:load_model(model_name=my_best_pipeline, platform=None, authentication=None, verbose=True)
2022-09-10 22:46:49,038:WARNING:No module named 'cuml'.
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-09-10 22:46:49,039:WARNING:No module named 'cuml'.
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-09-10 22:46:49,040:WARNING:No module named 'cuml'.
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-09-10 22:46:49,041:WARNING:No module named 'cuml'.
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-09-10 22:46:50,387:INFO:PyCaret ClassificationExperiment
2022-09-10 22:46:50,387:INFO:Logging name: clf-default-name
2022-09-10 22:46:50,387:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2022-09-10 22:46:50,387:INFO:version 3.0.0.rc3
2022-09-10 22:46:50,387:INFO:Initializing setup()
2022-09-10 22:46:50,387:INFO:self.USI: 2119
2022-09-10 22:46:50,387:INFO:self.variable_keys: {'fold_shuffle_param', 'fold_generator', 'y_train', '_gpu_n_jobs_param', 'display_container', '_all_models', 'fold_groups_param', 'target_param', 'seed', 'y_test', 'USI', 'html_param', 'y', '_available_plots', 'memory', 'exp_id', 'data', 'exp_name_log', 'logging_param', 'pipeline', '_is_multiclass', 'n_jobs_param', 'log_plots_param', 'master_model_container', 'variable_keys', 'X_test', 'fix_imbalance', 'gpu_param', '_all_models_internal', 'X_train', '_ml_usecase', 'idx', '_all_metrics', 'X'}
2022-09-10 22:46:50,387:INFO:Checking environment
2022-09-10 22:46:50,387:INFO:python_version: 3.8.13
2022-09-10 22:46:50,387:INFO:python_build: ('default', 'Mar 28 2022 06:59:08')
2022-09-10 22:46:50,387:INFO:machine: AMD64
2022-09-10 22:46:50,387:INFO:platform: Windows-10-10.0.19044-SP0
2022-09-10 22:46:50,388:INFO:Memory: svmem(total=17107963904, available=6486659072, percent=62.1, used=10621304832, free=6486659072)
2022-09-10 22:46:50,388:INFO:Physical Core: 6
2022-09-10 22:46:50,388:INFO:Logical Core: 6
2022-09-10 22:46:50,388:INFO:Checking libraries
2022-09-10 22:46:50,388:INFO:System:
2022-09-10 22:46:50,388:INFO:    python: 3.8.13 (default, Mar 28 2022, 06:59:08) [MSC v.1916 64 bit (AMD64)]
2022-09-10 22:46:50,388:INFO:executable: c:\Users\bruno\anaconda3\envs\chatbot_env\python.exe
2022-09-10 22:46:50,388:INFO:   machine: Windows-10-10.0.19044-SP0
2022-09-10 22:46:50,388:INFO:PyCaret required dependencies:
2022-09-10 22:46:50,389:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\_distutils_hack\__init__.py:33: UserWarning: Setuptools is replacing distutils.
  warnings.warn("Setuptools is replacing distutils.")

2022-09-10 22:46:50,782:INFO:                 pip: 22.1.2
2022-09-10 22:46:50,782:INFO:          setuptools: 63.4.1
2022-09-10 22:46:50,783:INFO:             pycaret: 3.0.0.rc3
2022-09-10 22:46:50,783:INFO:             IPython: 8.5.0
2022-09-10 22:46:50,783:INFO:          ipywidgets: 8.0.2
2022-09-10 22:46:50,783:INFO:                tqdm: 4.64.1
2022-09-10 22:46:50,783:INFO:               numpy: 1.21.6
2022-09-10 22:46:50,783:INFO:              pandas: 1.4.4
2022-09-10 22:46:50,783:INFO:              jinja2: 3.1.2
2022-09-10 22:46:50,783:INFO:               scipy: 1.8.1
2022-09-10 22:46:50,783:INFO:              joblib: 1.1.0
2022-09-10 22:46:50,783:INFO:             sklearn: 1.1.2
2022-09-10 22:46:50,783:INFO:                pyod: Installed but version unavailable
2022-09-10 22:46:50,783:INFO:            imblearn: 0.9.1
2022-09-10 22:46:50,783:INFO:   category_encoders: 2.5.0
2022-09-10 22:46:50,783:INFO:            lightgbm: 3.3.2
2022-09-10 22:46:50,783:INFO:               numba: 0.55.2
2022-09-10 22:46:50,783:INFO:            requests: 2.28.1
2022-09-10 22:46:50,783:INFO:          matplotlib: 3.6.0rc2
2022-09-10 22:46:50,783:INFO:          scikitplot: 0.3.7
2022-09-10 22:46:50,784:INFO:         yellowbrick: 1.5
2022-09-10 22:46:50,784:INFO:              plotly: 5.10.0
2022-09-10 22:46:50,784:INFO:             kaleido: 0.2.1
2022-09-10 22:46:50,784:INFO:         statsmodels: 0.13.2
2022-09-10 22:46:50,784:INFO:              sktime: 0.11.4
2022-09-10 22:46:50,784:INFO:               tbats: Installed but version unavailable
2022-09-10 22:46:50,784:INFO:            pmdarima: 2.0.1
2022-09-10 22:46:50,784:INFO:              psutil: 5.9.2
2022-09-10 22:46:50,784:INFO:None
2022-09-10 22:46:50,784:INFO:Set up data.
2022-09-10 22:46:50,789:INFO:Set up train/test split.
2022-09-10 22:46:50,794:INFO:Assigning column types.
2022-09-10 22:46:50,796:INFO:Set up folding strategy.
2022-09-10 22:46:50,796:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2022-09-10 22:46:50,847:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2022-09-10 22:46:50,849:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2022-09-10 22:46:50,889:WARNING:No module named 'xgboost'.
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-09-10 22:46:50,891:WARNING:No module named 'catboost'.
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-09-10 22:46:50,942:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2022-09-10 22:46:50,943:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2022-09-10 22:46:50,975:WARNING:No module named 'xgboost'.
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-09-10 22:46:50,976:WARNING:No module named 'catboost'.
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-09-10 22:46:50,977:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2022-09-10 22:46:51,028:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2022-09-10 22:46:51,060:WARNING:No module named 'xgboost'.
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-09-10 22:46:51,062:WARNING:No module named 'catboost'.
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-09-10 22:46:51,114:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2022-09-10 22:46:51,147:WARNING:No module named 'xgboost'.
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-09-10 22:46:51,148:WARNING:No module named 'catboost'.
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-09-10 22:46:51,149:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2022-09-10 22:46:51,234:WARNING:No module named 'xgboost'.
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-09-10 22:46:51,235:WARNING:No module named 'catboost'.
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-09-10 22:46:51,322:WARNING:No module named 'xgboost'.
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-09-10 22:46:51,323:WARNING:No module named 'catboost'.
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-09-10 22:46:51,324:INFO:Preparing preprocessing pipeline...
2022-09-10 22:46:51,325:INFO:Set up label encoding.
2022-09-10 22:46:51,325:INFO:Set up simple imputation.
2022-09-10 22:46:51,325:INFO:Set up encoding of categorical features.
2022-09-10 22:46:51,326:INFO:Set up variance threshold.
2022-09-10 22:46:51,462:INFO:Finished creating preprocessing pipeline.
2022-09-10 22:46:51,469:INFO:Pipeline: Pipeline(memory=Memory(location=C:\Users\bruno\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              missing_values=nan,
                                                              strategy='m...
                ('rest_encoding',
                 TransformerWrapper(exclude=None, include=['input'],
                                    transformer=LeaveOneOutEncoder(cols=['input'],
                                                                   drop_invariant=False,
                                                                   handle_missing='return_nan',
                                                                   handle_unknown='value',
                                                                   random_state=1828,
                                                                   return_df=True,
                                                                   sigma=None,
                                                                   verbose=0))),
                ('low_variance',
                 TransformerWrapper(exclude=[], include=None,
                                    transformer=VarianceThreshold(threshold=0)))],
         verbose=False)
2022-09-10 22:46:51,469:INFO:Creating final display dataframe.
2022-09-10 22:46:52,060:INFO:Setup display_container:                     Description                                     Value
0                    Session id                                      1828
1                        Target                                     class
2                   Target type                                Multiclass
3                Target mapping  covid: 0, seloturismo: 1, tuberculose: 2
4           Original data shape                                 (2142, 2)
5        Transformed data shape                                 (2142, 2)
6   Transformed train set shape                                 (1499, 2)
7    Transformed test set shape                                  (643, 2)
8          Categorical features                                         1
9                    Preprocess                                      True
10              Imputation type                                    simple
11           Numeric imputation                                      mean
12       Categorical imputation                                  constant
13     Maximum one-hot encoding                                         5
14              Encoding method                                      None
15       Low variance threshold                                         0
16               Fold Generator                           StratifiedKFold
17                  Fold Number                                        10
18                     CPU Jobs                                        -1
19                      Use GPU                                     False
20               Log Experiment                                     False
21              Experiment Name                          clf-default-name
22                          USI                                      2119
2022-09-10 22:46:52,152:WARNING:No module named 'xgboost'.
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-09-10 22:46:52,154:WARNING:No module named 'catboost'.
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-09-10 22:46:52,240:WARNING:No module named 'xgboost'.
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-09-10 22:46:52,241:WARNING:No module named 'catboost'.
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-09-10 22:46:52,247:INFO:setup() successfully completed in 1.86s...............
2022-09-10 22:46:52,298:INFO:Initializing compare_models()
2022-09-10 22:46:52,298:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000026DB5BBBC70>, include=None, fold=None, round=4, cross_validation=True, sort=Accuracy, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x0000026DB5BBBC70>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engines': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2022-09-10 22:46:52,299:INFO:Checking exceptions
2022-09-10 22:46:52,301:INFO:Preparing display monitor
2022-09-10 22:46:52,333:INFO:Initializing Logistic Regression
2022-09-10 22:46:52,333:INFO:Total runtime is 0.0 minutes
2022-09-10 22:46:52,336:INFO:SubProcess create_model() called ==================================
2022-09-10 22:46:52,337:INFO:Initializing create_model()
2022-09-10 22:46:52,337:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000026DB5BBBC70>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000026D985D0160>, model_only=True, return_train_score=False, kwargs={})
2022-09-10 22:46:52,337:INFO:Checking exceptions
2022-09-10 22:46:52,339:INFO:Importing libraries
2022-09-10 22:46:52,339:INFO:Copying training dataset
2022-09-10 22:46:52,342:INFO:Defining folds
2022-09-10 22:46:52,342:INFO:Declaring metric variables
2022-09-10 22:46:52,345:INFO:Importing untrained model
2022-09-10 22:46:52,349:INFO:Logistic Regression Imported successfully
2022-09-10 22:46:52,355:INFO:Starting cross validation
2022-09-10 22:46:52,356:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-09-10 22:46:55,395:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:46:55,418:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:46:55,433:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:46:55,449:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:46:55,474:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:46:55,484:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:46:55,533:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:46:55,553:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:46:55,569:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:46:55,584:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:46:55,600:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:46:55,607:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:46:55,609:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:46:55,610:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-09-10 22:46:55,610:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:46:55,614:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:46:55,643:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:46:55,645:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:46:55,646:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-09-10 22:46:55,646:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:46:55,650:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:46:55,652:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:46:55,653:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-09-10 22:46:55,654:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:46:55,660:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:46:55,662:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:46:55,663:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-09-10 22:46:55,663:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:46:55,674:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:46:55,675:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:46:55,676:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-09-10 22:46:55,677:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:46:55,704:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:46:55,705:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:46:55,706:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-09-10 22:46:55,710:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:46:55,837:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:46:55,873:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:46:55,883:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:46:55,893:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:46:55,959:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:46:55,996:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:46:56,005:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:46:56,012:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:46:56,030:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:46:56,032:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:46:56,033:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-09-10 22:46:56,033:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:46:56,064:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:46:56,065:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:46:56,066:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-09-10 22:46:56,067:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:46:56,075:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:46:56,076:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:46:56,077:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-09-10 22:46:56,078:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:46:56,081:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:46:56,082:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:46:56,083:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-09-10 22:46:56,084:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:46:56,086:INFO:Calculating mean and std
2022-09-10 22:46:56,088:INFO:Creating metrics dataframe
2022-09-10 22:46:56,091:INFO:Uploading results into container
2022-09-10 22:46:56,092:INFO:Uploading model into container now
2022-09-10 22:46:56,092:INFO:master_model_container: 1
2022-09-10 22:46:56,092:INFO:display_container: 2
2022-09-10 22:46:56,093:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=1828, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2022-09-10 22:46:56,093:INFO:create_model() successfully completed......................................
2022-09-10 22:46:56,180:INFO:SubProcess create_model() end ==================================
2022-09-10 22:46:56,180:INFO:Creating metrics dataframe
2022-09-10 22:46:56,189:INFO:Initializing K Neighbors Classifier
2022-09-10 22:46:56,189:INFO:Total runtime is 0.06425841649373372 minutes
2022-09-10 22:46:56,192:INFO:SubProcess create_model() called ==================================
2022-09-10 22:46:56,192:INFO:Initializing create_model()
2022-09-10 22:46:56,192:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000026DB5BBBC70>, estimator=knn, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000026D985D0160>, model_only=True, return_train_score=False, kwargs={})
2022-09-10 22:46:56,192:INFO:Checking exceptions
2022-09-10 22:46:56,194:INFO:Importing libraries
2022-09-10 22:46:56,194:INFO:Copying training dataset
2022-09-10 22:46:56,197:INFO:Defining folds
2022-09-10 22:46:56,197:INFO:Declaring metric variables
2022-09-10 22:46:56,200:INFO:Importing untrained model
2022-09-10 22:46:56,203:INFO:K Neighbors Classifier Imported successfully
2022-09-10 22:46:56,209:INFO:Starting cross validation
2022-09-10 22:46:56,210:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-09-10 22:46:56,290:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:46:56,295:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:46:56,297:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:46:56,298:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:46:56,300:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:46:56,302:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:46:56,336:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:46:56,341:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:46:56,341:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:46:56,343:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:46:56,345:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:46:56,345:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:46:56,376:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:46:56,377:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:46:56,378:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:46:56,378:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:46:56,380:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:46:56,380:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:46:56,381:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:46:56,382:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:46:56,382:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:46:56,383:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:46:56,383:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:46:56,385:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:46:56,386:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:46:56,388:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:46:56,390:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:46:56,392:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:46:56,394:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:46:56,396:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:46:56,444:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:46:56,444:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:46:56,445:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:46:56,447:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:46:56,484:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:46:56,484:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:46:56,486:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:46:56,486:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:46:56,521:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:46:56,522:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:46:56,522:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:46:56,523:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:46:56,524:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:46:56,525:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:46:56,525:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:46:56,525:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:46:56,526:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:46:56,527:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:46:56,528:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:46:56,528:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:46:56,531:INFO:Calculating mean and std
2022-09-10 22:46:56,533:INFO:Creating metrics dataframe
2022-09-10 22:46:56,536:INFO:Uploading results into container
2022-09-10 22:46:56,536:INFO:Uploading model into container now
2022-09-10 22:46:56,537:INFO:master_model_container: 2
2022-09-10 22:46:56,537:INFO:display_container: 2
2022-09-10 22:46:56,537:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2022-09-10 22:46:56,537:INFO:create_model() successfully completed......................................
2022-09-10 22:46:56,624:INFO:SubProcess create_model() end ==================================
2022-09-10 22:46:56,624:INFO:Creating metrics dataframe
2022-09-10 22:46:56,633:INFO:Initializing Naive Bayes
2022-09-10 22:46:56,633:INFO:Total runtime is 0.07166514794031778 minutes
2022-09-10 22:46:56,636:INFO:SubProcess create_model() called ==================================
2022-09-10 22:46:56,636:INFO:Initializing create_model()
2022-09-10 22:46:56,636:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000026DB5BBBC70>, estimator=nb, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000026D985D0160>, model_only=True, return_train_score=False, kwargs={})
2022-09-10 22:46:56,636:INFO:Checking exceptions
2022-09-10 22:46:56,638:INFO:Importing libraries
2022-09-10 22:46:56,638:INFO:Copying training dataset
2022-09-10 22:46:56,641:INFO:Defining folds
2022-09-10 22:46:56,641:INFO:Declaring metric variables
2022-09-10 22:46:56,644:INFO:Importing untrained model
2022-09-10 22:46:56,647:INFO:Naive Bayes Imported successfully
2022-09-10 22:46:56,653:INFO:Starting cross validation
2022-09-10 22:46:56,654:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-09-10 22:46:56,714:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:46:56,718:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:46:56,719:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:46:56,722:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:46:56,723:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:46:56,730:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:46:56,745:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:46:56,751:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:46:56,754:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:46:56,754:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:46:56,759:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:46:56,764:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:46:56,779:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:46:56,780:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:46:56,781:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-09-10 22:46:56,782:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:46:56,786:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:46:56,787:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:46:56,788:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-09-10 22:46:56,789:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:46:56,789:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:46:56,791:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:46:56,792:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:46:56,793:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:46:56,794:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-09-10 22:46:56,794:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

_start, len(result))

2022-09-10 22:46:56,794:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:46:56,795:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:46:56,796:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:46:56,797:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-09-10 22:46:56,798:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:46:56,802:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:46:56,803:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:46:56,804:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-09-10 22:46:56,805:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:46:56,824:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:46:56,833:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:46:56,839:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:46:56,841:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:46:56,855:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:46:56,866:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:46:56,871:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:46:56,872:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:46:56,887:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:46:56,888:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:46:56,889:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-09-10 22:46:56,890:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:46:56,900:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:46:56,902:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:46:56,903:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-09-10 22:46:56,903:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:46:56,904:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:46:56,905:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:46:56,906:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:46:56,906:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:46:56,907:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-09-10 22:46:56,907:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-09-10 22:46:56,907:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:46:56,907:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:46:56,910:INFO:Calculating mean and std
2022-09-10 22:46:56,912:INFO:Creating metrics dataframe
2022-09-10 22:46:56,915:INFO:Uploading results into container
2022-09-10 22:46:56,917:INFO:Uploading model into container now
2022-09-10 22:46:56,917:INFO:master_model_container: 3
2022-09-10 22:46:56,917:INFO:display_container: 2
2022-09-10 22:46:56,917:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2022-09-10 22:46:56,917:INFO:create_model() successfully completed......................................
2022-09-10 22:46:57,004:INFO:SubProcess create_model() end ==================================
2022-09-10 22:46:57,004:INFO:Creating metrics dataframe
2022-09-10 22:46:57,013:INFO:Initializing Decision Tree Classifier
2022-09-10 22:46:57,014:INFO:Total runtime is 0.07800424496332803 minutes
2022-09-10 22:46:57,017:INFO:SubProcess create_model() called ==================================
2022-09-10 22:46:57,017:INFO:Initializing create_model()
2022-09-10 22:46:57,017:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000026DB5BBBC70>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000026D985D0160>, model_only=True, return_train_score=False, kwargs={})
2022-09-10 22:46:57,017:INFO:Checking exceptions
2022-09-10 22:46:57,018:INFO:Importing libraries
2022-09-10 22:46:57,018:INFO:Copying training dataset
2022-09-10 22:46:57,021:INFO:Defining folds
2022-09-10 22:46:57,021:INFO:Declaring metric variables
2022-09-10 22:46:57,024:INFO:Importing untrained model
2022-09-10 22:46:57,028:INFO:Decision Tree Classifier Imported successfully
2022-09-10 22:46:57,034:INFO:Starting cross validation
2022-09-10 22:46:57,035:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-09-10 22:46:57,096:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:46:57,099:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:46:57,101:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:46:57,102:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:46:57,106:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:46:57,113:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:46:57,129:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:46:57,130:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:46:57,132:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:46:57,133:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:46:57,139:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:46:57,147:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:46:57,163:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:46:57,164:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:46:57,165:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:46:57,166:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:46:57,166:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:46:57,166:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:46:57,166:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:46:57,167:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:46:57,168:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:46:57,169:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:46:57,171:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:46:57,175:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:46:57,177:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:46:57,178:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:46:57,183:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:46:57,184:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:46:57,186:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:46:57,211:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:46:57,212:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:46:57,213:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:46:57,219:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:46:57,243:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:46:57,243:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:46:57,244:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:46:57,250:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:46:57,275:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:46:57,276:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:46:57,276:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:46:57,278:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:46:57,278:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:46:57,278:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:46:57,279:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:46:57,280:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:46:57,281:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:46:57,282:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:46:57,284:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:46:57,285:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:46:57,288:INFO:Calculating mean and std
2022-09-10 22:46:57,290:INFO:Creating metrics dataframe
2022-09-10 22:46:57,293:INFO:Uploading results into container
2022-09-10 22:46:57,293:INFO:Uploading model into container now
2022-09-10 22:46:57,294:INFO:master_model_container: 4
2022-09-10 22:46:57,294:INFO:display_container: 2
2022-09-10 22:46:57,294:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=1828, splitter='best')
2022-09-10 22:46:57,294:INFO:create_model() successfully completed......................................
2022-09-10 22:46:57,381:INFO:SubProcess create_model() end ==================================
2022-09-10 22:46:57,381:INFO:Creating metrics dataframe
2022-09-10 22:46:57,390:INFO:Initializing SVM - Linear Kernel
2022-09-10 22:46:57,391:INFO:Total runtime is 0.08429329792658487 minutes
2022-09-10 22:46:57,394:INFO:SubProcess create_model() called ==================================
2022-09-10 22:46:57,394:INFO:Initializing create_model()
2022-09-10 22:46:57,394:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000026DB5BBBC70>, estimator=svm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000026D985D0160>, model_only=True, return_train_score=False, kwargs={})
2022-09-10 22:46:57,394:INFO:Checking exceptions
2022-09-10 22:46:57,396:INFO:Importing libraries
2022-09-10 22:46:57,396:INFO:Copying training dataset
2022-09-10 22:46:57,399:INFO:Defining folds
2022-09-10 22:46:57,399:INFO:Declaring metric variables
2022-09-10 22:46:57,402:INFO:Importing untrained model
2022-09-10 22:46:57,405:INFO:SVM - Linear Kernel Imported successfully
2022-09-10 22:46:57,411:INFO:Starting cross validation
2022-09-10 22:46:57,412:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-09-10 22:46:57,482:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:46:57,492:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:46:57,494:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:46:57,494:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:46:57,499:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:46:57,512:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:46:57,515:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:46:57,515:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:46:57,517:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:46:57,517:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-09-10 22:46:57,518:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:46:57,524:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:46:57,525:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:46:57,527:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:46:57,528:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-09-10 22:46:57,529:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:46:57,529:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:46:57,529:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:46:57,530:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:46:57,531:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:46:57,531:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:46:57,532:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-09-10 22:46:57,532:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:46:57,532:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:46:57,533:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-09-10 22:46:57,534:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:46:57,534:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:46:57,535:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:46:57,536:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:46:57,537:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-09-10 22:46:57,537:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:46:57,545:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:46:57,546:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:46:57,548:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:46:57,549:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-09-10 22:46:57,549:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:46:57,574:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:46:57,580:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:46:57,588:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:46:57,589:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:46:57,609:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:46:57,610:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:46:57,611:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:46:57,612:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-09-10 22:46:57,613:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:46:57,613:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:46:57,613:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:46:57,615:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:46:57,616:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-09-10 22:46:57,616:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:46:57,619:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:46:57,620:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:46:57,621:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:46:57,621:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:46:57,622:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:46:57,622:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-09-10 22:46:57,623:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:46:57,623:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:46:57,624:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-09-10 22:46:57,625:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:46:57,627:INFO:Calculating mean and std
2022-09-10 22:46:57,629:INFO:Creating metrics dataframe
2022-09-10 22:46:57,632:INFO:Uploading results into container
2022-09-10 22:46:57,633:INFO:Uploading model into container now
2022-09-10 22:46:57,633:INFO:master_model_container: 5
2022-09-10 22:46:57,633:INFO:display_container: 2
2022-09-10 22:46:57,634:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=1828, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2022-09-10 22:46:57,634:INFO:create_model() successfully completed......................................
2022-09-10 22:46:57,720:INFO:SubProcess create_model() end ==================================
2022-09-10 22:46:57,720:INFO:Creating metrics dataframe
2022-09-10 22:46:57,730:INFO:Initializing Ridge Classifier
2022-09-10 22:46:57,730:INFO:Total runtime is 0.08994843562444049 minutes
2022-09-10 22:46:57,733:INFO:SubProcess create_model() called ==================================
2022-09-10 22:46:57,733:INFO:Initializing create_model()
2022-09-10 22:46:57,733:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000026DB5BBBC70>, estimator=ridge, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000026D985D0160>, model_only=True, return_train_score=False, kwargs={})
2022-09-10 22:46:57,733:INFO:Checking exceptions
2022-09-10 22:46:57,735:INFO:Importing libraries
2022-09-10 22:46:57,735:INFO:Copying training dataset
2022-09-10 22:46:57,738:INFO:Defining folds
2022-09-10 22:46:57,738:INFO:Declaring metric variables
2022-09-10 22:46:57,741:INFO:Importing untrained model
2022-09-10 22:46:57,744:INFO:Ridge Classifier Imported successfully
2022-09-10 22:46:57,750:INFO:Starting cross validation
2022-09-10 22:46:57,751:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-09-10 22:46:57,813:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:46:57,815:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:46:57,817:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:46:57,821:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:46:57,822:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:46:57,833:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:46:57,845:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:46:57,846:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:46:57,847:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:46:57,848:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-09-10 22:46:57,848:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:46:57,848:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:46:57,849:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:46:57,849:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:46:57,849:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:46:57,850:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:46:57,851:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:46:57,851:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-09-10 22:46:57,852:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:46:57,852:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-09-10 22:46:57,853:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:46:57,855:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:46:57,856:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:46:57,857:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:46:57,858:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-09-10 22:46:57,858:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:46:57,859:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:46:57,860:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:46:57,861:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:46:57,862:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-09-10 22:46:57,863:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:46:57,866:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:46:57,867:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:46:57,869:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:46:57,869:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-09-10 22:46:57,870:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:46:57,894:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:46:57,898:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:46:57,900:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:46:57,903:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:46:57,925:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:46:57,926:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:46:57,927:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:46:57,928:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-09-10 22:46:57,929:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:46:57,930:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:46:57,931:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:46:57,931:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:46:57,931:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:46:57,932:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:46:57,933:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:46:57,933:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-09-10 22:46:57,934:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:46:57,934:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-09-10 22:46:57,934:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:46:57,934:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:46:57,934:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:46:57,936:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:46:57,936:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-09-10 22:46:57,937:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:46:57,940:INFO:Calculating mean and std
2022-09-10 22:46:57,941:INFO:Creating metrics dataframe
2022-09-10 22:46:57,945:INFO:Uploading results into container
2022-09-10 22:46:57,945:INFO:Uploading model into container now
2022-09-10 22:46:57,946:INFO:master_model_container: 6
2022-09-10 22:46:57,946:INFO:display_container: 2
2022-09-10 22:46:57,946:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, normalize='deprecated', positive=False,
                random_state=1828, solver='auto', tol=0.001)
2022-09-10 22:46:57,946:INFO:create_model() successfully completed......................................
2022-09-10 22:46:58,033:INFO:SubProcess create_model() end ==================================
2022-09-10 22:46:58,033:INFO:Creating metrics dataframe
2022-09-10 22:46:58,044:INFO:Initializing Random Forest Classifier
2022-09-10 22:46:58,044:INFO:Total runtime is 0.09516985019048053 minutes
2022-09-10 22:46:58,047:INFO:SubProcess create_model() called ==================================
2022-09-10 22:46:58,047:INFO:Initializing create_model()
2022-09-10 22:46:58,047:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000026DB5BBBC70>, estimator=rf, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000026D985D0160>, model_only=True, return_train_score=False, kwargs={})
2022-09-10 22:46:58,048:INFO:Checking exceptions
2022-09-10 22:46:58,049:INFO:Importing libraries
2022-09-10 22:46:58,049:INFO:Copying training dataset
2022-09-10 22:46:58,052:INFO:Defining folds
2022-09-10 22:46:58,052:INFO:Declaring metric variables
2022-09-10 22:46:58,055:INFO:Importing untrained model
2022-09-10 22:46:58,058:INFO:Random Forest Classifier Imported successfully
2022-09-10 22:46:58,064:INFO:Starting cross validation
2022-09-10 22:46:58,065:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-09-10 22:46:58,251:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:46:58,254:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:46:58,257:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:46:58,260:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:46:58,268:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:46:58,283:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:46:58,301:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:46:58,306:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:46:58,306:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:46:58,309:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:46:58,338:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:46:58,352:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:46:58,354:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:46:58,355:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:46:58,357:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:46:58,358:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:46:58,359:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:46:58,361:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:46:58,362:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:46:58,363:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:46:58,364:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:46:58,365:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:46:58,366:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:46:58,366:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:46:58,400:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:46:58,402:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:46:58,403:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:46:58,433:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:46:58,434:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:46:58,436:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:46:58,557:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:46:58,558:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:46:58,558:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:46:58,584:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:46:58,604:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:46:58,605:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:46:58,607:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:46:58,631:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:46:58,654:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:46:58,655:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:46:58,655:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:46:58,655:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:46:58,656:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:46:58,657:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:46:58,658:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:46:58,659:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:46:58,679:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:46:58,681:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:46:58,682:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:46:58,685:INFO:Calculating mean and std
2022-09-10 22:46:58,687:INFO:Creating metrics dataframe
2022-09-10 22:46:58,690:INFO:Uploading results into container
2022-09-10 22:46:58,690:INFO:Uploading model into container now
2022-09-10 22:46:58,691:INFO:master_model_container: 7
2022-09-10 22:46:58,691:INFO:display_container: 2
2022-09-10 22:46:58,691:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=1828, verbose=0, warm_start=False)
2022-09-10 22:46:58,691:INFO:create_model() successfully completed......................................
2022-09-10 22:46:58,779:INFO:SubProcess create_model() end ==================================
2022-09-10 22:46:58,779:INFO:Creating metrics dataframe
2022-09-10 22:46:58,791:INFO:Initializing Quadratic Discriminant Analysis
2022-09-10 22:46:58,791:INFO:Total runtime is 0.10763117869695026 minutes
2022-09-10 22:46:58,793:INFO:SubProcess create_model() called ==================================
2022-09-10 22:46:58,794:INFO:Initializing create_model()
2022-09-10 22:46:58,794:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000026DB5BBBC70>, estimator=qda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000026D985D0160>, model_only=True, return_train_score=False, kwargs={})
2022-09-10 22:46:58,794:INFO:Checking exceptions
2022-09-10 22:46:58,795:INFO:Importing libraries
2022-09-10 22:46:58,795:INFO:Copying training dataset
2022-09-10 22:46:58,798:INFO:Defining folds
2022-09-10 22:46:58,799:INFO:Declaring metric variables
2022-09-10 22:46:58,802:INFO:Importing untrained model
2022-09-10 22:46:58,805:INFO:Quadratic Discriminant Analysis Imported successfully
2022-09-10 22:46:58,811:INFO:Starting cross validation
2022-09-10 22:46:58,812:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-09-10 22:46:58,878:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:46:58,879:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:46:58,881:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:46:58,885:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:46:58,892:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:46:58,904:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:46:58,912:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:46:58,913:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:46:58,923:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:46:58,926:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:46:58,942:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:46:58,947:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:46:58,948:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:46:58,950:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-09-10 22:46:58,951:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:46:58,956:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:46:58,964:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:46:58,966:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:46:58,966:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:46:58,967:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-09-10 22:46:58,967:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:46:58,968:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:46:58,969:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-09-10 22:46:58,969:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:46:58,970:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:46:58,973:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:46:58,974:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-09-10 22:46:58,975:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:46:58,991:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:46:58,993:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:46:58,993:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-09-10 22:46:58,994:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:46:59,002:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:46:59,005:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:46:59,007:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:46:59,007:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-09-10 22:46:59,008:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:46:59,012:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:46:59,016:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:46:59,023:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:46:59,034:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:46:59,045:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:46:59,048:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:46:59,056:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:46:59,069:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:46:59,070:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:46:59,071:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-09-10 22:46:59,072:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:46:59,078:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:46:59,080:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:46:59,080:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:46:59,080:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-09-10 22:46:59,081:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:46:59,082:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:46:59,082:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-09-10 22:46:59,083:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:46:59,088:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:46:59,090:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:46:59,090:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-09-10 22:46:59,091:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:46:59,094:INFO:Calculating mean and std
2022-09-10 22:46:59,096:INFO:Creating metrics dataframe
2022-09-10 22:46:59,099:INFO:Uploading results into container
2022-09-10 22:46:59,099:INFO:Uploading model into container now
2022-09-10 22:46:59,099:INFO:master_model_container: 8
2022-09-10 22:46:59,100:INFO:display_container: 2
2022-09-10 22:46:59,100:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2022-09-10 22:46:59,100:INFO:create_model() successfully completed......................................
2022-09-10 22:46:59,189:INFO:SubProcess create_model() end ==================================
2022-09-10 22:46:59,189:INFO:Creating metrics dataframe
2022-09-10 22:46:59,200:INFO:Initializing Ada Boost Classifier
2022-09-10 22:46:59,200:INFO:Total runtime is 0.11443736155827838 minutes
2022-09-10 22:46:59,203:INFO:SubProcess create_model() called ==================================
2022-09-10 22:46:59,203:INFO:Initializing create_model()
2022-09-10 22:46:59,203:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000026DB5BBBC70>, estimator=ada, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000026D985D0160>, model_only=True, return_train_score=False, kwargs={})
2022-09-10 22:46:59,203:INFO:Checking exceptions
2022-09-10 22:46:59,205:INFO:Importing libraries
2022-09-10 22:46:59,205:INFO:Copying training dataset
2022-09-10 22:46:59,208:INFO:Defining folds
2022-09-10 22:46:59,208:INFO:Declaring metric variables
2022-09-10 22:46:59,211:INFO:Importing untrained model
2022-09-10 22:46:59,214:INFO:Ada Boost Classifier Imported successfully
2022-09-10 22:46:59,220:INFO:Starting cross validation
2022-09-10 22:46:59,221:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-09-10 22:46:59,357:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:46:59,364:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:46:59,371:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:46:59,376:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:46:59,380:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:46:59,401:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:46:59,401:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:46:59,403:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:46:59,408:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:46:59,415:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:46:59,424:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:46:59,441:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:46:59,443:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:46:59,444:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:46:59,444:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:46:59,445:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:46:59,446:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:46:59,446:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:46:59,447:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:46:59,448:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:46:59,449:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:46:59,458:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:46:59,459:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:46:59,461:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:46:59,466:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:46:59,467:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:46:59,469:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:46:59,487:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:46:59,488:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:46:59,489:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:46:59,551:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:46:59,552:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:46:59,553:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:46:59,568:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:46:59,588:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:46:59,591:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:46:59,592:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:46:59,606:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:46:59,629:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:46:59,630:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:46:59,630:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:46:59,631:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:46:59,631:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:46:59,632:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:46:59,632:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:46:59,633:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:46:59,634:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:46:59,645:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:46:59,647:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:46:59,648:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:46:59,651:INFO:Calculating mean and std
2022-09-10 22:46:59,652:INFO:Creating metrics dataframe
2022-09-10 22:46:59,656:INFO:Uploading results into container
2022-09-10 22:46:59,656:INFO:Uploading model into container now
2022-09-10 22:46:59,657:INFO:master_model_container: 9
2022-09-10 22:46:59,657:INFO:display_container: 2
2022-09-10 22:46:59,657:INFO:AdaBoostClassifier(algorithm='SAMME.R', base_estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=1828)
2022-09-10 22:46:59,657:INFO:create_model() successfully completed......................................
2022-09-10 22:46:59,743:INFO:SubProcess create_model() end ==================================
2022-09-10 22:46:59,744:INFO:Creating metrics dataframe
2022-09-10 22:46:59,755:INFO:Initializing Gradient Boosting Classifier
2022-09-10 22:46:59,755:INFO:Total runtime is 0.12369578679402668 minutes
2022-09-10 22:46:59,758:INFO:SubProcess create_model() called ==================================
2022-09-10 22:46:59,758:INFO:Initializing create_model()
2022-09-10 22:46:59,758:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000026DB5BBBC70>, estimator=gbc, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000026D985D0160>, model_only=True, return_train_score=False, kwargs={})
2022-09-10 22:46:59,758:INFO:Checking exceptions
2022-09-10 22:46:59,760:INFO:Importing libraries
2022-09-10 22:46:59,760:INFO:Copying training dataset
2022-09-10 22:46:59,763:INFO:Defining folds
2022-09-10 22:46:59,763:INFO:Declaring metric variables
2022-09-10 22:46:59,766:INFO:Importing untrained model
2022-09-10 22:46:59,770:INFO:Gradient Boosting Classifier Imported successfully
2022-09-10 22:46:59,775:INFO:Starting cross validation
2022-09-10 22:46:59,777:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-09-10 22:47:00,061:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:47:00,061:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:47:00,071:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:47:00,081:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:47:00,087:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:47:00,094:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:47:00,094:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:47:00,102:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:47:00,115:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:47:00,115:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:47:00,121:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:47:00,128:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:47:00,129:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:47:00,131:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:47:00,132:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:47:00,136:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:47:00,138:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:47:00,139:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:47:00,153:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:47:00,153:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:47:00,154:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:47:00,154:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:47:00,155:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:47:00,156:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:47:00,160:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:47:00,162:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:47:00,163:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:47:00,165:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:47:00,167:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:47:00,168:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:47:00,403:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:47:00,410:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:47:00,423:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:47:00,424:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:47:00,436:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:47:00,441:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:47:00,456:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:47:00,470:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:47:00,471:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:47:00,472:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:47:00,475:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:47:00,476:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:47:00,478:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:47:00,488:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:47:00,490:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:47:00,490:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:47:00,491:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:47:00,492:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:47:00,493:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:47:00,496:INFO:Calculating mean and std
2022-09-10 22:47:00,497:INFO:Creating metrics dataframe
2022-09-10 22:47:00,501:INFO:Uploading results into container
2022-09-10 22:47:00,501:INFO:Uploading model into container now
2022-09-10 22:47:00,502:INFO:master_model_container: 10
2022-09-10 22:47:00,502:INFO:display_container: 2
2022-09-10 22:47:00,502:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=1828, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2022-09-10 22:47:00,502:INFO:create_model() successfully completed......................................
2022-09-10 22:47:00,590:INFO:SubProcess create_model() end ==================================
2022-09-10 22:47:00,590:INFO:Creating metrics dataframe
2022-09-10 22:47:00,602:INFO:Initializing Linear Discriminant Analysis
2022-09-10 22:47:00,602:INFO:Total runtime is 0.13780861695607502 minutes
2022-09-10 22:47:00,605:INFO:SubProcess create_model() called ==================================
2022-09-10 22:47:00,605:INFO:Initializing create_model()
2022-09-10 22:47:00,605:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000026DB5BBBC70>, estimator=lda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000026D985D0160>, model_only=True, return_train_score=False, kwargs={})
2022-09-10 22:47:00,605:INFO:Checking exceptions
2022-09-10 22:47:00,607:INFO:Importing libraries
2022-09-10 22:47:00,607:INFO:Copying training dataset
2022-09-10 22:47:00,609:INFO:Defining folds
2022-09-10 22:47:00,610:INFO:Declaring metric variables
2022-09-10 22:47:00,613:INFO:Importing untrained model
2022-09-10 22:47:00,616:INFO:Linear Discriminant Analysis Imported successfully
2022-09-10 22:47:00,622:INFO:Starting cross validation
2022-09-10 22:47:00,623:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-09-10 22:47:00,687:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:47:00,688:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:47:00,689:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:47:00,696:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:47:00,697:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:47:00,702:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:47:00,718:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:47:00,719:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:47:00,723:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:47:00,729:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:47:00,730:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:47:00,735:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:47:00,751:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:47:00,752:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:47:00,753:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:47:00,753:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:47:00,753:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-09-10 22:47:00,754:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-09-10 22:47:00,754:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:47:00,755:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:47:00,757:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:47:00,759:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:47:00,759:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-09-10 22:47:00,760:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:47:00,765:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:47:00,766:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:47:00,766:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:47:00,767:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-09-10 22:47:00,767:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:47:00,767:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:47:00,768:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-09-10 22:47:00,769:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:47:00,774:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:47:00,776:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:47:00,777:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-09-10 22:47:00,777:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:47:00,798:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:47:00,802:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:47:00,805:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:47:00,810:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:47:00,829:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:47:00,833:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:47:00,837:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:47:00,842:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:47:00,861:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:47:00,863:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:47:00,864:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-09-10 22:47:00,865:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:47:00,867:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:47:00,868:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:47:00,869:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-09-10 22:47:00,870:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:47:00,870:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:47:00,872:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:47:00,872:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-09-10 22:47:00,873:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:47:00,875:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:47:00,876:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:47:00,877:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-09-10 22:47:00,878:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:47:00,880:INFO:Calculating mean and std
2022-09-10 22:47:00,882:INFO:Creating metrics dataframe
2022-09-10 22:47:00,885:INFO:Uploading results into container
2022-09-10 22:47:00,886:INFO:Uploading model into container now
2022-09-10 22:47:00,886:INFO:master_model_container: 11
2022-09-10 22:47:00,886:INFO:display_container: 2
2022-09-10 22:47:00,886:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2022-09-10 22:47:00,886:INFO:create_model() successfully completed......................................
2022-09-10 22:47:00,973:INFO:SubProcess create_model() end ==================================
2022-09-10 22:47:00,973:INFO:Creating metrics dataframe
2022-09-10 22:47:00,985:INFO:Initializing Extra Trees Classifier
2022-09-10 22:47:00,985:INFO:Total runtime is 0.14419775009155272 minutes
2022-09-10 22:47:00,989:INFO:SubProcess create_model() called ==================================
2022-09-10 22:47:00,989:INFO:Initializing create_model()
2022-09-10 22:47:00,989:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000026DB5BBBC70>, estimator=et, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000026D985D0160>, model_only=True, return_train_score=False, kwargs={})
2022-09-10 22:47:00,989:INFO:Checking exceptions
2022-09-10 22:47:00,990:INFO:Importing libraries
2022-09-10 22:47:00,991:INFO:Copying training dataset
2022-09-10 22:47:00,993:INFO:Defining folds
2022-09-10 22:47:00,993:INFO:Declaring metric variables
2022-09-10 22:47:00,997:INFO:Importing untrained model
2022-09-10 22:47:01,001:INFO:Extra Trees Classifier Imported successfully
2022-09-10 22:47:01,006:INFO:Starting cross validation
2022-09-10 22:47:01,007:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-09-10 22:47:01,164:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:47:01,164:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:47:01,174:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:47:01,179:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:47:01,191:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:47:01,211:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:47:01,216:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:47:01,221:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:47:01,226:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:47:01,231:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:47:01,239:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:47:01,261:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:47:01,262:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:47:01,264:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:47:01,267:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:47:01,268:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:47:01,269:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:47:01,271:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:47:01,279:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:47:01,281:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:47:01,282:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:47:01,289:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:47:01,291:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:47:01,292:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:47:01,296:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:47:01,298:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:47:01,299:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:47:01,323:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:47:01,324:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:47:01,326:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:47:01,413:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:47:01,417:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:47:01,435:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:47:01,438:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:47:01,459:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:47:01,465:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:47:01,482:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:47:01,487:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:47:01,508:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:47:01,509:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:47:01,510:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:47:01,514:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:47:01,516:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:47:01,517:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:47:01,532:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:47:01,534:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:47:01,535:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:47:01,536:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:47:01,537:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:47:01,539:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:47:01,542:INFO:Calculating mean and std
2022-09-10 22:47:01,543:INFO:Creating metrics dataframe
2022-09-10 22:47:01,547:INFO:Uploading results into container
2022-09-10 22:47:01,547:INFO:Uploading model into container now
2022-09-10 22:47:01,548:INFO:master_model_container: 12
2022-09-10 22:47:01,548:INFO:display_container: 2
2022-09-10 22:47:01,548:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     n_estimators=100, n_jobs=-1, oob_score=False,
                     random_state=1828, verbose=0, warm_start=False)
2022-09-10 22:47:01,548:INFO:create_model() successfully completed......................................
2022-09-10 22:47:01,635:INFO:SubProcess create_model() end ==================================
2022-09-10 22:47:01,635:INFO:Creating metrics dataframe
2022-09-10 22:47:01,647:INFO:Initializing Light Gradient Boosting Machine
2022-09-10 22:47:01,648:INFO:Total runtime is 0.15524111986160277 minutes
2022-09-10 22:47:01,651:INFO:SubProcess create_model() called ==================================
2022-09-10 22:47:01,651:INFO:Initializing create_model()
2022-09-10 22:47:01,651:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000026DB5BBBC70>, estimator=lightgbm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000026D985D0160>, model_only=True, return_train_score=False, kwargs={})
2022-09-10 22:47:01,651:INFO:Checking exceptions
2022-09-10 22:47:01,653:INFO:Importing libraries
2022-09-10 22:47:01,653:INFO:Copying training dataset
2022-09-10 22:47:01,656:INFO:Defining folds
2022-09-10 22:47:01,657:INFO:Declaring metric variables
2022-09-10 22:47:01,661:INFO:Importing untrained model
2022-09-10 22:47:01,664:INFO:Light Gradient Boosting Machine Imported successfully
2022-09-10 22:47:01,670:INFO:Starting cross validation
2022-09-10 22:47:01,671:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-09-10 22:47:01,782:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:47:01,784:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:47:01,786:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:47:01,786:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:47:01,791:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:47:01,794:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:47:01,814:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:47:01,818:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:47:01,819:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:47:01,821:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:47:01,824:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:47:01,834:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:47:01,848:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:47:01,849:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:47:01,850:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:47:01,851:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:47:01,852:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:47:01,853:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:47:01,855:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:47:01,855:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:47:01,856:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:47:01,857:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:47:01,858:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:47:01,858:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:47:01,861:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:47:01,863:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:47:01,864:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:47:01,871:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:47:01,872:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:47:01,874:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:47:01,925:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:47:01,927:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:47:01,929:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:47:01,930:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:47:01,956:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:47:01,959:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:47:01,961:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:47:01,963:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:47:01,991:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:47:01,992:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:47:01,992:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:47:01,994:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:47:01,995:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:47:01,996:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:47:01,997:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:47:01,997:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:47:01,998:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:47:01,999:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:47:02,002:INFO:Calculating mean and std
2022-09-10 22:47:02,003:INFO:Creating metrics dataframe
2022-09-10 22:47:02,006:INFO:Uploading results into container
2022-09-10 22:47:02,007:INFO:Uploading model into container now
2022-09-10 22:47:02,007:INFO:master_model_container: 13
2022-09-10 22:47:02,007:INFO:display_container: 2
2022-09-10 22:47:02,008:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=1828, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0)
2022-09-10 22:47:02,008:INFO:create_model() successfully completed......................................
2022-09-10 22:47:02,094:INFO:SubProcess create_model() end ==================================
2022-09-10 22:47:02,094:INFO:Creating metrics dataframe
2022-09-10 22:47:02,107:INFO:Initializing Dummy Classifier
2022-09-10 22:47:02,107:INFO:Total runtime is 0.16289808352788288 minutes
2022-09-10 22:47:02,110:INFO:SubProcess create_model() called ==================================
2022-09-10 22:47:02,110:INFO:Initializing create_model()
2022-09-10 22:47:02,110:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000026DB5BBBC70>, estimator=dummy, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000026D985D0160>, model_only=True, return_train_score=False, kwargs={})
2022-09-10 22:47:02,110:INFO:Checking exceptions
2022-09-10 22:47:02,112:INFO:Importing libraries
2022-09-10 22:47:02,112:INFO:Copying training dataset
2022-09-10 22:47:02,115:INFO:Defining folds
2022-09-10 22:47:02,115:INFO:Declaring metric variables
2022-09-10 22:47:02,118:INFO:Importing untrained model
2022-09-10 22:47:02,121:INFO:Dummy Classifier Imported successfully
2022-09-10 22:47:02,127:INFO:Starting cross validation
2022-09-10 22:47:02,128:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-09-10 22:47:02,189:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:47:02,192:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:47:02,195:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:47:02,196:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:47:02,198:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:47:02,214:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:47:02,221:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:47:02,222:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:47:02,225:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:47:02,229:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:47:02,231:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:47:02,246:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:47:02,253:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:47:02,255:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:47:02,255:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:47:02,256:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-09-10 22:47:02,257:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:47:02,257:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-09-10 22:47:02,257:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:47:02,258:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:47:02,258:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:47:02,259:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-09-10 22:47:02,261:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:47:02,263:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:47:02,265:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:47:02,265:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:47:02,266:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-09-10 22:47:02,266:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:47:02,267:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:47:02,267:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-09-10 22:47:02,268:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:47:02,285:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:47:02,287:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:47:02,287:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-09-10 22:47:02,288:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:47:02,300:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:47:02,301:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:47:02,303:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:47:02,311:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:47:02,331:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:47:02,332:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:47:02,332:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:47:02,343:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:47:02,364:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:47:02,364:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:47:02,365:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:47:02,365:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:47:02,366:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:47:02,366:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-09-10 22:47:02,366:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-09-10 22:47:02,367:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:47:02,367:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:47:02,367:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:47:02,368:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-09-10 22:47:02,368:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:47:02,375:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:47:02,377:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:47:02,377:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-09-10 22:47:02,378:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:47:02,381:INFO:Calculating mean and std
2022-09-10 22:47:02,382:INFO:Creating metrics dataframe
2022-09-10 22:47:02,386:INFO:Uploading results into container
2022-09-10 22:47:02,386:INFO:Uploading model into container now
2022-09-10 22:47:02,386:INFO:master_model_container: 14
2022-09-10 22:47:02,386:INFO:display_container: 2
2022-09-10 22:47:02,387:INFO:DummyClassifier(constant=None, random_state=1828, strategy='prior')
2022-09-10 22:47:02,387:INFO:create_model() successfully completed......................................
2022-09-10 22:47:02,474:INFO:SubProcess create_model() end ==================================
2022-09-10 22:47:02,474:INFO:Creating metrics dataframe
2022-09-10 22:47:02,495:INFO:Initializing create_model()
2022-09-10 22:47:02,495:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000026DB5BBBC70>, estimator=KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform'), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2022-09-10 22:47:02,495:INFO:Checking exceptions
2022-09-10 22:47:02,498:INFO:Importing libraries
2022-09-10 22:47:02,498:INFO:Copying training dataset
2022-09-10 22:47:02,500:INFO:Defining folds
2022-09-10 22:47:02,501:INFO:Declaring metric variables
2022-09-10 22:47:02,501:INFO:Importing untrained model
2022-09-10 22:47:02,501:INFO:Declaring custom model
2022-09-10 22:47:02,501:INFO:K Neighbors Classifier Imported successfully
2022-09-10 22:47:02,502:INFO:Cross validation set to False
2022-09-10 22:47:02,502:INFO:Fitting Model
2022-09-10 22:47:02,651:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2022-09-10 22:47:02,651:INFO:create_model() successfully completed......................................
2022-09-10 22:47:02,765:INFO:master_model_container: 14
2022-09-10 22:47:02,765:INFO:display_container: 2
2022-09-10 22:47:02,765:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2022-09-10 22:47:02,765:INFO:compare_models() successfully completed......................................
2022-09-10 22:47:02,872:INFO:Initializing evaluate_model()
2022-09-10 22:47:02,872:INFO:evaluate_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000026DB5BBBC70>, estimator=KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform'), fold=None, fit_kwargs=None, plot_kwargs=None, feature_name=None, groups=None, use_train_data=False)
2022-09-10 22:47:02,890:INFO:Initializing plot_model()
2022-09-10 22:47:02,890:INFO:plot_model(plot=pipeline, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform'), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000026DB5BBBC70>, system=True)
2022-09-10 22:47:02,890:INFO:Checking exceptions
2022-09-10 22:47:02,893:INFO:Preloading libraries
2022-09-10 22:47:02,894:INFO:Copying training dataset
2022-09-10 22:47:02,894:INFO:Plot type: pipeline
2022-09-10 22:47:03,064:INFO:Visual Rendered Successfully
2022-09-10 22:47:03,153:INFO:plot_model() successfully completed......................................
2022-09-10 22:47:03,212:INFO:Initializing plot_model()
2022-09-10 22:47:03,212:INFO:plot_model(plot=auc, fold=None, use_train_data=False, verbose=True, display=None, display_format=None, estimator=KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform'), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000026DB5BBBC70>, system=True)
2022-09-10 22:47:03,213:INFO:Checking exceptions
2022-09-10 22:47:03,217:INFO:Preloading libraries
2022-09-10 22:47:03,217:INFO:Copying training dataset
2022-09-10 22:47:03,217:INFO:Plot type: auc
2022-09-10 22:47:03,352:INFO:Fitting Model
2022-09-10 22:47:03,352:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\base.py:450: UserWarning: X does not have valid feature names, but KNeighborsClassifier was fitted with feature names
  warnings.warn(

2022-09-10 22:47:03,352:INFO:Scoring test/hold-out set
2022-09-10 22:47:03,561:INFO:Visual Rendered Successfully
2022-09-10 22:47:03,647:INFO:plot_model() successfully completed......................................
2022-09-10 22:47:03,701:INFO:Initializing predict_model()
2022-09-10 22:47:03,701:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000026DB5BBBC70>, estimator=KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform'), probability_threshold=None, encoded_labels=False, raw_score=False, drift_report=False, round=4, verbose=True, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x0000026DB79DADC0>)
2022-09-10 22:47:03,702:INFO:Checking exceptions
2022-09-10 22:47:03,702:INFO:Preloading libraries
2022-09-10 22:47:03,784:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:47:03,785:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:47:03,785:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:47:03,786:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:47:03,786:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:47:03,787:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:47:03,931:INFO:Initializing predict_model()
2022-09-10 22:47:03,932:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000026DB5BBBC70>, estimator=KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform'), probability_threshold=None, encoded_labels=False, raw_score=False, drift_report=False, round=4, verbose=True, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x0000026DB5AC8CA0>)
2022-09-10 22:47:03,932:INFO:Checking exceptions
2022-09-10 22:47:03,932:INFO:Preloading libraries
2022-09-10 22:47:03,933:INFO:Set up data.
2022-09-10 22:47:04,101:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:47:04,102:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:47:04,103:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:47:04,103:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:47:04,104:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:47:04,105:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:47:04,244:INFO:Initializing ensemble_model()
2022-09-10 22:47:04,245:INFO:ensemble_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000026DB5BBBC70>, estimator=KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform'), method=Bagging, fold=None, n_estimators=10, round=4, choose_better=True, optimize=Accuracy, fit_kwargs=None, groups=None, probability_threshold=None, verbose=True, return_train_score=False)
2022-09-10 22:47:04,245:INFO:Checking exceptions
2022-09-10 22:47:04,273:INFO:Importing libraries
2022-09-10 22:47:04,273:INFO:Copying training dataset
2022-09-10 22:47:04,273:INFO:Checking base model
2022-09-10 22:47:04,273:INFO:Base model : K Neighbors Classifier
2022-09-10 22:47:04,280:INFO:Importing untrained ensembler
2022-09-10 22:47:04,280:INFO:Ensemble method set to Bagging
2022-09-10 22:47:04,281:INFO:SubProcess create_model() called ==================================
2022-09-10 22:47:04,282:INFO:Initializing create_model()
2022-09-10 22:47:04,282:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000026DB5BBBC70>, estimator=BaggingClassifier(base_estimator=KNeighborsClassifier(algorithm='auto',
                                                      leaf_size=30,
                                                      metric='minkowski',
                                                      metric_params=None,
                                                      n_jobs=-1, n_neighbors=5,
                                                      p=2, weights='uniform'),
                  bootstrap=True, bootstrap_features=False, max_features=1.0,
                  max_samples=1.0, n_estimators=10, n_jobs=None,
                  oob_score=False, random_state=1828, verbose=0,
                  warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000026DB5DA78E0>, model_only=True, return_train_score=False, kwargs={})
2022-09-10 22:47:04,282:INFO:Checking exceptions
2022-09-10 22:47:04,284:INFO:Importing libraries
2022-09-10 22:47:04,284:INFO:Copying training dataset
2022-09-10 22:47:04,286:INFO:Defining folds
2022-09-10 22:47:04,286:INFO:Declaring metric variables
2022-09-10 22:47:04,288:INFO:Importing untrained model
2022-09-10 22:47:04,289:INFO:Declaring custom model
2022-09-10 22:47:04,292:INFO:K Neighbors Classifier Imported successfully
2022-09-10 22:47:04,298:INFO:Starting cross validation
2022-09-10 22:47:04,299:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-09-10 22:47:04,375:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:47:04,376:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:47:04,380:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:47:04,381:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:47:04,391:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:47:04,392:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:47:04,453:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:47:04,461:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:47:04,463:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:47:04,466:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:47:04,470:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:47:04,482:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:47:04,530:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:47:04,531:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:47:04,532:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:47:04,550:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:47:04,552:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:47:04,552:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:47:04,553:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:47:04,553:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:47:04,555:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:47:04,562:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:47:04,563:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:47:04,564:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:47:04,564:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:47:04,565:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:47:04,565:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:47:04,567:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:47:04,567:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:47:04,568:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:47:04,601:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:47:04,612:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:47:04,614:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:47:04,621:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:47:04,670:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:47:04,684:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:47:04,687:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:47:04,695:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:47:04,740:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:47:04,741:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:47:04,743:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:47:04,756:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:47:04,757:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:47:04,759:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:47:04,759:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:47:04,760:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:47:04,762:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:47:04,769:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:47:04,771:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:47:04,772:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:47:04,775:INFO:Calculating mean and std
2022-09-10 22:47:04,775:INFO:Creating metrics dataframe
2022-09-10 22:47:04,780:INFO:Finalizing model
2022-09-10 22:47:04,854:INFO:Uploading results into container
2022-09-10 22:47:04,855:INFO:Uploading model into container now
2022-09-10 22:47:04,855:INFO:master_model_container: 15
2022-09-10 22:47:04,855:INFO:display_container: 5
2022-09-10 22:47:04,856:INFO:BaggingClassifier(base_estimator=KNeighborsClassifier(algorithm='auto',
                                                      leaf_size=30,
                                                      metric='minkowski',
                                                      metric_params=None,
                                                      n_jobs=-1, n_neighbors=5,
                                                      p=2, weights='uniform'),
                  bootstrap=True, bootstrap_features=False, max_features=1.0,
                  max_samples=1.0, n_estimators=10, n_jobs=None,
                  oob_score=False, random_state=1828, verbose=0,
                  warm_start=False)
2022-09-10 22:47:04,856:INFO:create_model() successfully completed......................................
2022-09-10 22:47:04,944:INFO:SubProcess create_model() end ==================================
2022-09-10 22:47:04,944:INFO:choose_better activated
2022-09-10 22:47:04,947:INFO:SubProcess create_model() called ==================================
2022-09-10 22:47:04,948:INFO:Initializing create_model()
2022-09-10 22:47:04,948:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000026DB5BBBC70>, estimator=KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform'), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2022-09-10 22:47:04,948:INFO:Checking exceptions
2022-09-10 22:47:04,950:INFO:Importing libraries
2022-09-10 22:47:04,951:INFO:Copying training dataset
2022-09-10 22:47:04,952:INFO:Defining folds
2022-09-10 22:47:04,952:INFO:Declaring metric variables
2022-09-10 22:47:04,952:INFO:Importing untrained model
2022-09-10 22:47:04,953:INFO:Declaring custom model
2022-09-10 22:47:04,953:INFO:K Neighbors Classifier Imported successfully
2022-09-10 22:47:04,953:INFO:Starting cross validation
2022-09-10 22:47:04,954:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-09-10 22:47:05,020:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:47:05,021:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:47:05,023:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:47:05,023:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:47:05,029:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:47:05,034:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:47:05,060:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:47:05,063:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:47:05,063:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:47:05,063:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:47:05,070:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:47:05,081:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:47:05,096:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:47:05,097:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:47:05,099:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:47:05,100:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:47:05,101:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:47:05,103:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:47:05,103:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:47:05,105:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:47:05,106:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:47:05,106:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:47:05,108:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:47:05,109:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:47:05,118:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:47:05,119:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:47:05,120:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:47:05,123:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:47:05,124:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:47:05,126:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:47:05,146:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:47:05,147:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:47:05,150:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:47:05,152:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:47:05,184:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:47:05,188:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:47:05,189:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:47:05,192:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:47:05,223:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:47:05,224:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:47:05,225:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:47:05,226:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:47:05,226:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:47:05,227:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:47:05,227:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:47:05,228:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:47:05,230:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:47:05,231:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:47:05,233:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:47:05,234:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:47:05,237:INFO:Calculating mean and std
2022-09-10 22:47:05,237:INFO:Creating metrics dataframe
2022-09-10 22:47:05,239:INFO:Finalizing model
2022-09-10 22:47:05,278:INFO:Uploading results into container
2022-09-10 22:47:05,278:INFO:Uploading model into container now
2022-09-10 22:47:05,278:INFO:master_model_container: 16
2022-09-10 22:47:05,279:INFO:display_container: 6
2022-09-10 22:47:05,279:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2022-09-10 22:47:05,279:INFO:create_model() successfully completed......................................
2022-09-10 22:47:05,365:INFO:SubProcess create_model() end ==================================
2022-09-10 22:47:05,365:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform') result for Accuracy is 0.6558
2022-09-10 22:47:05,366:INFO:BaggingClassifier(base_estimator=KNeighborsClassifier(algorithm='auto',
                                                      leaf_size=30,
                                                      metric='minkowski',
                                                      metric_params=None,
                                                      n_jobs=-1, n_neighbors=5,
                                                      p=2, weights='uniform'),
                  bootstrap=True, bootstrap_features=False, max_features=1.0,
                  max_samples=1.0, n_estimators=10, n_jobs=None,
                  oob_score=False, random_state=1828, verbose=0,
                  warm_start=False) result for Accuracy is 0.6558
2022-09-10 22:47:05,367:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform') is best model
2022-09-10 22:47:05,367:INFO:choose_better completed
2022-09-10 22:47:05,367:INFO:Original model was better than the ensembled model, hence it will be returned. NOTE: The display metrics are for the ensembled model (not the original one).
2022-09-10 22:47:05,376:INFO:master_model_container: 16
2022-09-10 22:47:05,376:INFO:display_container: 5
2022-09-10 22:47:05,376:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2022-09-10 22:47:05,376:INFO:ensemble_model() succesfully completed......................................
2022-09-10 22:47:05,584:INFO:Initializing evaluate_model()
2022-09-10 22:47:05,584:INFO:evaluate_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000026DB5BBBC70>, estimator=KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform'), fold=None, fit_kwargs=None, plot_kwargs=None, feature_name=None, groups=None, use_train_data=False)
2022-09-10 22:47:05,600:INFO:Initializing plot_model()
2022-09-10 22:47:05,600:INFO:plot_model(plot=pipeline, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform'), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000026DB5BBBC70>, system=True)
2022-09-10 22:47:05,600:INFO:Checking exceptions
2022-09-10 22:47:05,604:INFO:Preloading libraries
2022-09-10 22:47:05,605:INFO:Copying training dataset
2022-09-10 22:47:05,605:INFO:Plot type: pipeline
2022-09-10 22:47:05,743:INFO:Visual Rendered Successfully
2022-09-10 22:47:05,834:INFO:plot_model() successfully completed......................................
2022-09-10 22:47:05,878:INFO:Initializing plot_model()
2022-09-10 22:47:05,878:INFO:plot_model(plot=auc, fold=None, use_train_data=False, verbose=True, display=None, display_format=None, estimator=KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform'), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000026DB5BBBC70>, system=True)
2022-09-10 22:47:05,878:INFO:Checking exceptions
2022-09-10 22:47:05,882:INFO:Preloading libraries
2022-09-10 22:47:05,883:INFO:Copying training dataset
2022-09-10 22:47:05,883:INFO:Plot type: auc
2022-09-10 22:47:06,015:INFO:Fitting Model
2022-09-10 22:47:06,015:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\base.py:450: UserWarning: X does not have valid feature names, but KNeighborsClassifier was fitted with feature names
  warnings.warn(

2022-09-10 22:47:06,016:INFO:Scoring test/hold-out set
2022-09-10 22:47:06,214:INFO:Visual Rendered Successfully
2022-09-10 22:47:06,302:INFO:plot_model() successfully completed......................................
2022-09-10 22:47:06,347:INFO:Initializing predict_model()
2022-09-10 22:47:06,348:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000026DB5BBBC70>, estimator=KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform'), probability_threshold=None, encoded_labels=False, raw_score=False, drift_report=False, round=4, verbose=True, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x0000026DB7883B80>)
2022-09-10 22:47:06,348:INFO:Checking exceptions
2022-09-10 22:47:06,348:INFO:Preloading libraries
2022-09-10 22:47:06,429:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:47:06,429:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:47:06,430:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:47:06,431:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:47:06,431:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:47:06,432:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:47:06,594:INFO:Initializing save_model()
2022-09-10 22:47:06,594:INFO:save_model(model=KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform'), model_name=my_best_pipeline, prep_pipe_=Pipeline(memory=Memory(location=C:\Users\bruno\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              missing_values=nan,
                                                              strategy='m...
                ('rest_encoding',
                 TransformerWrapper(exclude=None, include=['input'],
                                    transformer=LeaveOneOutEncoder(cols=['input'],
                                                                   drop_invariant=False,
                                                                   handle_missing='return_nan',
                                                                   handle_unknown='value',
                                                                   random_state=1828,
                                                                   return_df=True,
                                                                   sigma=None,
                                                                   verbose=0))),
                ('low_variance',
                 TransformerWrapper(exclude=[], include=None,
                                    transformer=VarianceThreshold(threshold=0)))],
         verbose=False), verbose=True, use_case=MLUsecase.CLASSIFICATION, kwargs={})
2022-09-10 22:47:06,594:INFO:Adding model into prep_pipe
2022-09-10 22:47:06,600:INFO:my_best_pipeline.pkl saved in current working directory
2022-09-10 22:47:06,608:INFO:Pipeline(memory=Memory(location=C:\Users\bruno\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              missing_values=nan,
                                                              strategy='m...
                                                                   handle_unknown='value',
                                                                   random_state=1828,
                                                                   return_df=True,
                                                                   sigma=None,
                                                                   verbose=0))),
                ('low_variance',
                 TransformerWrapper(exclude=[], include=None,
                                    transformer=VarianceThreshold(threshold=0))),
                ['trained_model',
                 KNeighborsClassifier(algorithm='auto', leaf_size=30,
                                      metric='minkowski', metric_params=None,
                                      n_jobs=-1, n_neighbors=5, p=2,
                                      weights='uniform')]],
         verbose=False)
2022-09-10 22:47:06,609:INFO:save_model() successfully completed......................................
2022-09-10 22:47:06,753:INFO:Initializing load_model()
2022-09-10 22:47:06,753:INFO:load_model(model_name=my_best_pipeline, platform=None, authentication=None, verbose=True)
2022-09-10 22:49:38,389:INFO:PyCaret ClassificationExperiment
2022-09-10 22:49:38,389:INFO:Logging name: clf-default-name
2022-09-10 22:49:38,389:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2022-09-10 22:49:38,389:INFO:version 3.0.0.rc3
2022-09-10 22:49:38,389:INFO:Initializing setup()
2022-09-10 22:49:38,389:INFO:self.USI: 681d
2022-09-10 22:49:38,389:INFO:self.variable_keys: {'fold_shuffle_param', 'fold_generator', 'y_train', '_gpu_n_jobs_param', 'display_container', '_all_models', 'fold_groups_param', 'target_param', 'seed', 'y_test', 'USI', 'html_param', 'y', '_available_plots', 'memory', 'exp_id', 'data', 'exp_name_log', 'logging_param', 'pipeline', '_is_multiclass', 'n_jobs_param', 'log_plots_param', 'master_model_container', 'variable_keys', 'X_test', 'fix_imbalance', 'gpu_param', '_all_models_internal', 'X_train', '_ml_usecase', 'idx', '_all_metrics', 'X'}
2022-09-10 22:49:38,389:INFO:Checking environment
2022-09-10 22:49:38,389:INFO:python_version: 3.8.13
2022-09-10 22:49:38,389:INFO:python_build: ('default', 'Mar 28 2022 06:59:08')
2022-09-10 22:49:38,390:INFO:machine: AMD64
2022-09-10 22:49:38,390:INFO:platform: Windows-10-10.0.19044-SP0
2022-09-10 22:49:38,390:INFO:Memory: svmem(total=17107963904, available=5742235648, percent=66.4, used=11365728256, free=5742235648)
2022-09-10 22:49:38,390:INFO:Physical Core: 6
2022-09-10 22:49:38,390:INFO:Logical Core: 6
2022-09-10 22:49:38,390:INFO:Checking libraries
2022-09-10 22:49:38,390:INFO:System:
2022-09-10 22:49:38,390:INFO:    python: 3.8.13 (default, Mar 28 2022, 06:59:08) [MSC v.1916 64 bit (AMD64)]
2022-09-10 22:49:38,390:INFO:executable: c:\Users\bruno\anaconda3\envs\chatbot_env\python.exe
2022-09-10 22:49:38,390:INFO:   machine: Windows-10-10.0.19044-SP0
2022-09-10 22:49:38,390:INFO:PyCaret required dependencies:
2022-09-10 22:49:38,390:INFO:                 pip: 22.1.2
2022-09-10 22:49:38,390:INFO:          setuptools: 63.4.1
2022-09-10 22:49:38,390:INFO:             pycaret: 3.0.0.rc3
2022-09-10 22:49:38,390:INFO:             IPython: 8.5.0
2022-09-10 22:49:38,390:INFO:          ipywidgets: 8.0.2
2022-09-10 22:49:38,390:INFO:                tqdm: 4.64.1
2022-09-10 22:49:38,390:INFO:               numpy: 1.21.6
2022-09-10 22:49:38,391:INFO:              pandas: 1.4.4
2022-09-10 22:49:38,391:INFO:              jinja2: 3.1.2
2022-09-10 22:49:38,391:INFO:               scipy: 1.8.1
2022-09-10 22:49:38,391:INFO:              joblib: 1.1.0
2022-09-10 22:49:38,391:INFO:             sklearn: 1.1.2
2022-09-10 22:49:38,391:INFO:                pyod: Installed but version unavailable
2022-09-10 22:49:38,391:INFO:            imblearn: 0.9.1
2022-09-10 22:49:38,391:INFO:   category_encoders: 2.5.0
2022-09-10 22:49:38,391:INFO:            lightgbm: 3.3.2
2022-09-10 22:49:38,391:INFO:               numba: 0.55.2
2022-09-10 22:49:38,391:INFO:            requests: 2.28.1
2022-09-10 22:49:38,391:INFO:          matplotlib: 3.6.0rc2
2022-09-10 22:49:38,391:INFO:          scikitplot: 0.3.7
2022-09-10 22:49:38,391:INFO:         yellowbrick: 1.5
2022-09-10 22:49:38,391:INFO:              plotly: 5.10.0
2022-09-10 22:49:38,391:INFO:             kaleido: 0.2.1
2022-09-10 22:49:38,391:INFO:         statsmodels: 0.13.2
2022-09-10 22:49:38,391:INFO:              sktime: 0.11.4
2022-09-10 22:49:38,391:INFO:               tbats: Installed but version unavailable
2022-09-10 22:49:38,392:INFO:            pmdarima: 2.0.1
2022-09-10 22:49:38,392:INFO:              psutil: 5.9.2
2022-09-10 22:49:38,392:INFO:None
2022-09-10 22:49:38,392:INFO:Set up data.
2022-09-10 22:49:38,396:INFO:Set up train/test split.
2022-09-10 22:49:38,401:INFO:Assigning column types.
2022-09-10 22:49:38,403:INFO:Set up folding strategy.
2022-09-10 22:49:38,403:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2022-09-10 22:49:38,454:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2022-09-10 22:49:38,455:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2022-09-10 22:49:38,488:WARNING:No module named 'xgboost'.
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-09-10 22:49:38,489:WARNING:No module named 'catboost'.
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-09-10 22:49:38,540:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2022-09-10 22:49:38,541:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2022-09-10 22:49:38,574:WARNING:No module named 'xgboost'.
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-09-10 22:49:38,575:WARNING:No module named 'catboost'.
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-09-10 22:49:38,575:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2022-09-10 22:49:38,627:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2022-09-10 22:49:38,660:WARNING:No module named 'xgboost'.
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-09-10 22:49:38,661:WARNING:No module named 'catboost'.
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-09-10 22:49:38,713:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2022-09-10 22:49:38,745:WARNING:No module named 'xgboost'.
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-09-10 22:49:38,746:WARNING:No module named 'catboost'.
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-09-10 22:49:38,747:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2022-09-10 22:49:38,832:WARNING:No module named 'xgboost'.
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-09-10 22:49:38,833:WARNING:No module named 'catboost'.
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-09-10 22:49:38,919:WARNING:No module named 'xgboost'.
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-09-10 22:49:38,920:WARNING:No module named 'catboost'.
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-09-10 22:49:38,921:INFO:Preparing preprocessing pipeline...
2022-09-10 22:49:38,922:INFO:Set up label encoding.
2022-09-10 22:49:38,922:INFO:Set up simple imputation.
2022-09-10 22:49:38,923:INFO:Set up encoding of categorical features.
2022-09-10 22:49:38,923:INFO:Set up variance threshold.
2022-09-10 22:49:39,062:INFO:Finished creating preprocessing pipeline.
2022-09-10 22:49:39,069:INFO:Pipeline: Pipeline(memory=Memory(location=C:\Users\bruno\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              missing_values=nan,
                                                              strategy='m...
                ('rest_encoding',
                 TransformerWrapper(exclude=None, include=['input'],
                                    transformer=LeaveOneOutEncoder(cols=['input'],
                                                                   drop_invariant=False,
                                                                   handle_missing='return_nan',
                                                                   handle_unknown='value',
                                                                   random_state=8840,
                                                                   return_df=True,
                                                                   sigma=None,
                                                                   verbose=0))),
                ('low_variance',
                 TransformerWrapper(exclude=[], include=None,
                                    transformer=VarianceThreshold(threshold=0)))],
         verbose=False)
2022-09-10 22:49:39,069:INFO:Creating final display dataframe.
2022-09-10 22:49:39,644:INFO:Setup display_container:                     Description                                     Value
0                    Session id                                      8840
1                        Target                                     class
2                   Target type                                Multiclass
3                Target mapping  covid: 0, seloturismo: 1, tuberculose: 2
4           Original data shape                                 (2142, 2)
5        Transformed data shape                                 (2142, 2)
6   Transformed train set shape                                 (1499, 2)
7    Transformed test set shape                                  (643, 2)
8          Categorical features                                         1
9                    Preprocess                                      True
10              Imputation type                                    simple
11           Numeric imputation                                      mean
12       Categorical imputation                                  constant
13     Maximum one-hot encoding                                         5
14              Encoding method                                      None
15       Low variance threshold                                         0
16               Fold Generator                           StratifiedKFold
17                  Fold Number                                        10
18                     CPU Jobs                                        -1
19                      Use GPU                                     False
20               Log Experiment                                     False
21              Experiment Name                          clf-default-name
22                          USI                                      681d
2022-09-10 22:49:39,734:WARNING:No module named 'xgboost'.
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-09-10 22:49:39,736:WARNING:No module named 'catboost'.
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-09-10 22:49:39,820:WARNING:No module named 'xgboost'.
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-09-10 22:49:39,821:WARNING:No module named 'catboost'.
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-09-10 22:49:39,827:INFO:setup() successfully completed in 1.44s...............
2022-09-10 22:49:39,883:INFO:Initializing compare_models()
2022-09-10 22:49:39,883:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000026DB7ACBD90>, include=None, fold=None, round=4, cross_validation=True, sort=Accuracy, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x0000026DB7ACBD90>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engines': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2022-09-10 22:49:39,883:INFO:Checking exceptions
2022-09-10 22:49:39,885:INFO:Preparing display monitor
2022-09-10 22:49:39,922:INFO:Initializing Logistic Regression
2022-09-10 22:49:39,923:INFO:Total runtime is 1.6689300537109375e-05 minutes
2022-09-10 22:49:39,926:INFO:SubProcess create_model() called ==================================
2022-09-10 22:49:39,926:INFO:Initializing create_model()
2022-09-10 22:49:39,926:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000026DB7ACBD90>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000026DB793A3D0>, model_only=True, return_train_score=False, kwargs={})
2022-09-10 22:49:39,926:INFO:Checking exceptions
2022-09-10 22:49:39,928:INFO:Importing libraries
2022-09-10 22:49:39,928:INFO:Copying training dataset
2022-09-10 22:49:39,930:INFO:Defining folds
2022-09-10 22:49:39,930:INFO:Declaring metric variables
2022-09-10 22:49:39,933:INFO:Importing untrained model
2022-09-10 22:49:39,936:INFO:Logistic Regression Imported successfully
2022-09-10 22:49:39,942:INFO:Starting cross validation
2022-09-10 22:49:39,943:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-09-10 22:49:40,148:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:49:40,148:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:49:40,149:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:49:40,169:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:49:40,169:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:49:40,180:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:49:40,274:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:49:40,284:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:49:40,288:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:49:40,305:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:49:40,311:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:49:40,314:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:49:40,360:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:49:40,361:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:49:40,361:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:49:40,362:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-09-10 22:49:40,362:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:49:40,363:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:49:40,363:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:49:40,363:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-09-10 22:49:40,364:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:49:40,364:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:49:40,365:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-09-10 22:49:40,366:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:49:40,378:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:49:40,379:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:49:40,380:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-09-10 22:49:40,381:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:49:40,392:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:49:40,393:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:49:40,394:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-09-10 22:49:40,394:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:49:40,397:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:49:40,398:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:49:40,399:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-09-10 22:49:40,400:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:49:40,538:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:49:40,538:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:49:40,540:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:49:40,557:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:49:40,659:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:49:40,661:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:49:40,664:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:49:40,680:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:49:40,729:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:49:40,730:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:49:40,731:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:49:40,731:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-09-10 22:49:40,732:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:49:40,732:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:49:40,732:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:49:40,733:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:49:40,733:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-09-10 22:49:40,734:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:49:40,734:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-09-10 22:49:40,735:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:49:40,750:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:49:40,751:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:49:40,752:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-09-10 22:49:40,753:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:49:40,756:INFO:Calculating mean and std
2022-09-10 22:49:40,756:INFO:Creating metrics dataframe
2022-09-10 22:49:40,759:INFO:Uploading results into container
2022-09-10 22:49:40,759:INFO:Uploading model into container now
2022-09-10 22:49:40,760:INFO:master_model_container: 1
2022-09-10 22:49:40,760:INFO:display_container: 2
2022-09-10 22:49:40,760:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=8840, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2022-09-10 22:49:40,760:INFO:create_model() successfully completed......................................
2022-09-10 22:49:40,848:INFO:SubProcess create_model() end ==================================
2022-09-10 22:49:40,848:INFO:Creating metrics dataframe
2022-09-10 22:49:40,856:INFO:Initializing K Neighbors Classifier
2022-09-10 22:49:40,856:INFO:Total runtime is 0.015564155578613282 minutes
2022-09-10 22:49:40,859:INFO:SubProcess create_model() called ==================================
2022-09-10 22:49:40,859:INFO:Initializing create_model()
2022-09-10 22:49:40,859:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000026DB7ACBD90>, estimator=knn, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000026DB793A3D0>, model_only=True, return_train_score=False, kwargs={})
2022-09-10 22:49:40,859:INFO:Checking exceptions
2022-09-10 22:49:40,861:INFO:Importing libraries
2022-09-10 22:49:40,861:INFO:Copying training dataset
2022-09-10 22:49:40,863:INFO:Defining folds
2022-09-10 22:49:40,863:INFO:Declaring metric variables
2022-09-10 22:49:40,865:INFO:Importing untrained model
2022-09-10 22:49:40,868:INFO:K Neighbors Classifier Imported successfully
2022-09-10 22:49:40,874:INFO:Starting cross validation
2022-09-10 22:49:40,875:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-09-10 22:49:40,955:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:49:40,956:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:49:40,959:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:49:40,961:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:49:40,962:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:49:40,972:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:49:40,996:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:49:41,002:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:49:41,002:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:49:41,006:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:49:41,007:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:49:41,016:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:49:41,033:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:49:41,034:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:49:41,036:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:49:41,041:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:49:41,042:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:49:41,043:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:49:41,046:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:49:41,047:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:49:41,047:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:49:41,048:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:49:41,049:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:49:41,050:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:49:41,051:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:49:41,052:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:49:41,054:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:49:41,059:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:49:41,060:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:49:41,062:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:49:41,101:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:49:41,105:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:49:41,113:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:49:41,142:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:49:41,146:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:49:41,153:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:49:41,153:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:49:41,179:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:49:41,181:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:49:41,182:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:49:41,183:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:49:41,184:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:49:41,186:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:49:41,191:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:49:41,192:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:49:41,193:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:49:41,194:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:49:41,194:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:49:41,195:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:49:41,198:INFO:Calculating mean and std
2022-09-10 22:49:41,199:INFO:Creating metrics dataframe
2022-09-10 22:49:41,203:INFO:Uploading results into container
2022-09-10 22:49:41,203:INFO:Uploading model into container now
2022-09-10 22:49:41,203:INFO:master_model_container: 2
2022-09-10 22:49:41,204:INFO:display_container: 2
2022-09-10 22:49:41,204:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2022-09-10 22:49:41,204:INFO:create_model() successfully completed......................................
2022-09-10 22:49:41,293:INFO:SubProcess create_model() end ==================================
2022-09-10 22:49:41,293:INFO:Creating metrics dataframe
2022-09-10 22:49:41,301:INFO:Initializing Naive Bayes
2022-09-10 22:49:41,301:INFO:Total runtime is 0.022987564404805504 minutes
2022-09-10 22:49:41,304:INFO:SubProcess create_model() called ==================================
2022-09-10 22:49:41,305:INFO:Initializing create_model()
2022-09-10 22:49:41,305:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000026DB7ACBD90>, estimator=nb, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000026DB793A3D0>, model_only=True, return_train_score=False, kwargs={})
2022-09-10 22:49:41,305:INFO:Checking exceptions
2022-09-10 22:49:41,306:INFO:Importing libraries
2022-09-10 22:49:41,307:INFO:Copying training dataset
2022-09-10 22:49:41,309:INFO:Defining folds
2022-09-10 22:49:41,309:INFO:Declaring metric variables
2022-09-10 22:49:41,312:INFO:Importing untrained model
2022-09-10 22:49:41,315:INFO:Naive Bayes Imported successfully
2022-09-10 22:49:41,321:INFO:Starting cross validation
2022-09-10 22:49:41,322:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-09-10 22:49:41,382:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:49:41,385:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:49:41,389:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:49:41,390:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:49:41,394:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:49:41,397:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:49:41,415:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:49:41,420:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:49:41,422:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:49:41,428:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:49:41,430:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:49:41,448:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:49:41,449:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:49:41,450:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-09-10 22:49:41,451:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:49:41,454:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:49:41,455:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:49:41,455:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:49:41,456:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-09-10 22:49:41,457:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:49:41,457:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:49:41,457:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:49:41,458:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-09-10 22:49:41,458:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:49:41,459:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:49:41,459:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-09-10 22:49:41,460:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:49:41,464:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:49:41,465:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:49:41,466:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:49:41,466:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

_start, len(result))

2022-09-10 22:49:41,467:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:49:41,467:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-09-10 22:49:41,468:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:49:41,501:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:49:41,511:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:49:41,523:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:49:41,525:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:49:41,535:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:49:41,544:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:49:41,554:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:49:41,556:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:49:41,570:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:49:41,571:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:49:41,572:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-09-10 22:49:41,573:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:49:41,578:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:49:41,580:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:49:41,580:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-09-10 22:49:41,581:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:49:41,587:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:49:41,589:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:49:41,589:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:49:41,589:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-09-10 22:49:41,590:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:49:41,591:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-09-10 22:49:41,592:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:49:41,594:INFO:Calculating mean and std
2022-09-10 22:49:41,596:INFO:Creating metrics dataframe
2022-09-10 22:49:41,599:INFO:Uploading results into container
2022-09-10 22:49:41,600:INFO:Uploading model into container now
2022-09-10 22:49:41,600:INFO:master_model_container: 3
2022-09-10 22:49:41,600:INFO:display_container: 2
2022-09-10 22:49:41,600:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2022-09-10 22:49:41,600:INFO:create_model() successfully completed......................................
2022-09-10 22:49:41,689:INFO:SubProcess create_model() end ==================================
2022-09-10 22:49:41,689:INFO:Creating metrics dataframe
2022-09-10 22:49:41,698:INFO:Initializing Decision Tree Classifier
2022-09-10 22:49:41,698:INFO:Total runtime is 0.029593571027119958 minutes
2022-09-10 22:49:41,701:INFO:SubProcess create_model() called ==================================
2022-09-10 22:49:41,702:INFO:Initializing create_model()
2022-09-10 22:49:41,702:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000026DB7ACBD90>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000026DB793A3D0>, model_only=True, return_train_score=False, kwargs={})
2022-09-10 22:49:41,702:INFO:Checking exceptions
2022-09-10 22:49:41,703:INFO:Importing libraries
2022-09-10 22:49:41,703:INFO:Copying training dataset
2022-09-10 22:49:41,706:INFO:Defining folds
2022-09-10 22:49:41,706:INFO:Declaring metric variables
2022-09-10 22:49:41,709:INFO:Importing untrained model
2022-09-10 22:49:41,712:INFO:Decision Tree Classifier Imported successfully
2022-09-10 22:49:41,718:INFO:Starting cross validation
2022-09-10 22:49:41,719:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-09-10 22:49:41,782:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:49:41,782:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:49:41,783:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:49:41,788:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:49:41,788:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:49:41,797:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:49:41,813:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:49:41,814:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:49:41,814:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:49:41,821:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:49:41,822:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:49:41,830:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:49:41,846:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:49:41,847:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:49:41,848:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:49:41,848:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:49:41,849:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:49:41,849:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:49:41,849:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:49:41,851:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:49:41,852:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:49:41,856:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:49:41,856:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:49:41,858:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:49:41,859:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:49:41,860:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:49:41,865:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:49:41,866:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:49:41,868:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:49:41,893:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:49:41,898:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:49:41,898:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:49:41,904:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:49:41,924:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:49:41,929:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:49:41,930:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:49:41,934:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:49:41,958:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:49:41,959:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:49:41,960:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:49:41,962:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:49:41,963:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:49:41,964:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:49:41,965:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:49:41,965:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:49:41,966:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:49:41,967:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:49:41,969:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:49:41,970:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:49:41,973:INFO:Calculating mean and std
2022-09-10 22:49:41,974:INFO:Creating metrics dataframe
2022-09-10 22:49:41,978:INFO:Uploading results into container
2022-09-10 22:49:41,978:INFO:Uploading model into container now
2022-09-10 22:49:41,978:INFO:master_model_container: 4
2022-09-10 22:49:41,978:INFO:display_container: 2
2022-09-10 22:49:41,979:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=8840, splitter='best')
2022-09-10 22:49:41,979:INFO:create_model() successfully completed......................................
2022-09-10 22:49:42,068:INFO:SubProcess create_model() end ==================================
2022-09-10 22:49:42,068:INFO:Creating metrics dataframe
2022-09-10 22:49:42,078:INFO:Initializing SVM - Linear Kernel
2022-09-10 22:49:42,078:INFO:Total runtime is 0.03593266407648723 minutes
2022-09-10 22:49:42,081:INFO:SubProcess create_model() called ==================================
2022-09-10 22:49:42,082:INFO:Initializing create_model()
2022-09-10 22:49:42,082:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000026DB7ACBD90>, estimator=svm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000026DB793A3D0>, model_only=True, return_train_score=False, kwargs={})
2022-09-10 22:49:42,082:INFO:Checking exceptions
2022-09-10 22:49:42,083:INFO:Importing libraries
2022-09-10 22:49:42,083:INFO:Copying training dataset
2022-09-10 22:49:42,086:INFO:Defining folds
2022-09-10 22:49:42,086:INFO:Declaring metric variables
2022-09-10 22:49:42,089:INFO:Importing untrained model
2022-09-10 22:49:42,092:INFO:SVM - Linear Kernel Imported successfully
2022-09-10 22:49:42,097:INFO:Starting cross validation
2022-09-10 22:49:42,098:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-09-10 22:49:42,180:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:49:42,182:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:49:42,187:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:49:42,206:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:49:42,206:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:49:42,214:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:49:42,214:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:49:42,215:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:49:42,215:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:49:42,216:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:49:42,216:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:49:42,217:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-09-10 22:49:42,217:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:49:42,217:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:49:42,218:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-09-10 22:49:42,218:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:49:42,224:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:49:42,224:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:49:42,226:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:49:42,227:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-09-10 22:49:42,228:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:49:42,239:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:49:42,240:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:49:42,240:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:49:42,241:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:49:42,242:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:49:42,243:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-09-10 22:49:42,243:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:49:42,243:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:49:42,243:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-09-10 22:49:42,244:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:49:42,248:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:49:42,248:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:49:42,250:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:49:42,251:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-09-10 22:49:42,251:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:49:42,270:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:49:42,274:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:49:42,282:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:49:42,296:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:49:42,302:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:49:42,303:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:49:42,304:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:49:42,305:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-09-10 22:49:42,305:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:49:42,305:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:49:42,306:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:49:42,307:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:49:42,308:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-09-10 22:49:42,308:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:49:42,315:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:49:42,315:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:49:42,317:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:49:42,317:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-09-10 22:49:42,318:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:49:42,328:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:49:42,328:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:49:42,330:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:49:42,330:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-09-10 22:49:42,331:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:49:42,334:INFO:Calculating mean and std
2022-09-10 22:49:42,336:INFO:Creating metrics dataframe
2022-09-10 22:49:42,339:INFO:Uploading results into container
2022-09-10 22:49:42,339:INFO:Uploading model into container now
2022-09-10 22:49:42,340:INFO:master_model_container: 5
2022-09-10 22:49:42,340:INFO:display_container: 2
2022-09-10 22:49:42,340:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=8840, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2022-09-10 22:49:42,340:INFO:create_model() successfully completed......................................
2022-09-10 22:49:42,429:INFO:SubProcess create_model() end ==================================
2022-09-10 22:49:42,429:INFO:Creating metrics dataframe
2022-09-10 22:49:42,440:INFO:Initializing Ridge Classifier
2022-09-10 22:49:42,440:INFO:Total runtime is 0.041971488793691 minutes
2022-09-10 22:49:42,443:INFO:SubProcess create_model() called ==================================
2022-09-10 22:49:42,443:INFO:Initializing create_model()
2022-09-10 22:49:42,443:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000026DB7ACBD90>, estimator=ridge, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000026DB793A3D0>, model_only=True, return_train_score=False, kwargs={})
2022-09-10 22:49:42,443:INFO:Checking exceptions
2022-09-10 22:49:42,445:INFO:Importing libraries
2022-09-10 22:49:42,445:INFO:Copying training dataset
2022-09-10 22:49:42,447:INFO:Defining folds
2022-09-10 22:49:42,447:INFO:Declaring metric variables
2022-09-10 22:49:42,450:INFO:Importing untrained model
2022-09-10 22:49:42,454:INFO:Ridge Classifier Imported successfully
2022-09-10 22:49:42,459:INFO:Starting cross validation
2022-09-10 22:49:42,460:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-09-10 22:49:42,523:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:49:42,524:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:49:42,526:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:49:42,529:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:49:42,531:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:49:42,540:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:49:42,555:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:49:42,555:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:49:42,556:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:49:42,556:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:49:42,556:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:49:42,557:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:49:42,557:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:49:42,557:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:49:42,558:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-09-10 22:49:42,558:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-09-10 22:49:42,558:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:49:42,559:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:49:42,559:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:49:42,559:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-09-10 22:49:42,560:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:49:42,564:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:49:42,564:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:49:42,566:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:49:42,566:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:49:42,567:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-09-10 22:49:42,567:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:49:42,568:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:49:42,569:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:49:42,569:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-09-10 22:49:42,570:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:49:42,573:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:49:42,574:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:49:42,575:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:49:42,576:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-09-10 22:49:42,577:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:49:42,606:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:49:42,607:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:49:42,607:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:49:42,613:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:49:42,638:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:49:42,639:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:49:42,639:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:49:42,640:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:49:42,640:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:49:42,640:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:49:42,641:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:49:42,641:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:49:42,641:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-09-10 22:49:42,642:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-09-10 22:49:42,642:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:49:42,642:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:49:42,643:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:49:42,643:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-09-10 22:49:42,644:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:49:42,647:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:49:42,648:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:49:42,649:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:49:42,650:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-09-10 22:49:42,650:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:49:42,653:INFO:Calculating mean and std
2022-09-10 22:49:42,655:INFO:Creating metrics dataframe
2022-09-10 22:49:42,658:INFO:Uploading results into container
2022-09-10 22:49:42,658:INFO:Uploading model into container now
2022-09-10 22:49:42,659:INFO:master_model_container: 6
2022-09-10 22:49:42,659:INFO:display_container: 2
2022-09-10 22:49:42,659:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, normalize='deprecated', positive=False,
                random_state=8840, solver='auto', tol=0.001)
2022-09-10 22:49:42,659:INFO:create_model() successfully completed......................................
2022-09-10 22:49:42,747:INFO:SubProcess create_model() end ==================================
2022-09-10 22:49:42,747:INFO:Creating metrics dataframe
2022-09-10 22:49:42,758:INFO:Initializing Random Forest Classifier
2022-09-10 22:49:42,758:INFO:Total runtime is 0.047259628772735596 minutes
2022-09-10 22:49:42,761:INFO:SubProcess create_model() called ==================================
2022-09-10 22:49:42,761:INFO:Initializing create_model()
2022-09-10 22:49:42,762:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000026DB7ACBD90>, estimator=rf, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000026DB793A3D0>, model_only=True, return_train_score=False, kwargs={})
2022-09-10 22:49:42,762:INFO:Checking exceptions
2022-09-10 22:49:42,763:INFO:Importing libraries
2022-09-10 22:49:42,763:INFO:Copying training dataset
2022-09-10 22:49:42,766:INFO:Defining folds
2022-09-10 22:49:42,766:INFO:Declaring metric variables
2022-09-10 22:49:42,770:INFO:Importing untrained model
2022-09-10 22:49:42,774:INFO:Random Forest Classifier Imported successfully
2022-09-10 22:49:42,781:INFO:Starting cross validation
2022-09-10 22:49:42,782:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-09-10 22:49:42,968:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:49:42,973:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:49:42,976:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:49:42,978:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:49:42,981:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:49:43,002:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:49:43,018:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:49:43,023:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:49:43,024:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:49:43,028:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:49:43,030:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:49:43,050:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:49:43,068:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:49:43,070:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:49:43,071:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:49:43,075:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:49:43,076:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:49:43,076:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:49:43,077:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:49:43,077:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:49:43,078:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:49:43,079:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:49:43,080:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:49:43,081:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:49:43,082:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:49:43,082:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:49:43,084:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:49:43,112:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:49:43,114:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:49:43,115:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:49:43,249:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:49:43,257:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:49:43,260:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:49:43,260:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:49:43,295:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:49:43,305:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:49:43,307:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:49:43,308:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:49:43,344:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:49:43,345:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:49:43,346:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:49:43,353:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:49:43,355:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:49:43,356:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:49:43,356:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:49:43,357:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:49:43,358:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:49:43,359:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:49:43,359:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:49:43,361:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:49:43,363:INFO:Calculating mean and std
2022-09-10 22:49:43,365:INFO:Creating metrics dataframe
2022-09-10 22:49:43,368:INFO:Uploading results into container
2022-09-10 22:49:43,369:INFO:Uploading model into container now
2022-09-10 22:49:43,369:INFO:master_model_container: 7
2022-09-10 22:49:43,369:INFO:display_container: 2
2022-09-10 22:49:43,370:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=8840, verbose=0, warm_start=False)
2022-09-10 22:49:43,370:INFO:create_model() successfully completed......................................
2022-09-10 22:49:43,458:INFO:SubProcess create_model() end ==================================
2022-09-10 22:49:43,458:INFO:Creating metrics dataframe
2022-09-10 22:49:43,469:INFO:Initializing Quadratic Discriminant Analysis
2022-09-10 22:49:43,469:INFO:Total runtime is 0.05912041664123535 minutes
2022-09-10 22:49:43,472:INFO:SubProcess create_model() called ==================================
2022-09-10 22:49:43,472:INFO:Initializing create_model()
2022-09-10 22:49:43,472:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000026DB7ACBD90>, estimator=qda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000026DB793A3D0>, model_only=True, return_train_score=False, kwargs={})
2022-09-10 22:49:43,472:INFO:Checking exceptions
2022-09-10 22:49:43,474:INFO:Importing libraries
2022-09-10 22:49:43,474:INFO:Copying training dataset
2022-09-10 22:49:43,477:INFO:Defining folds
2022-09-10 22:49:43,477:INFO:Declaring metric variables
2022-09-10 22:49:43,480:INFO:Importing untrained model
2022-09-10 22:49:43,483:INFO:Quadratic Discriminant Analysis Imported successfully
2022-09-10 22:49:43,489:INFO:Starting cross validation
2022-09-10 22:49:43,490:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-09-10 22:49:43,551:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:49:43,553:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:49:43,554:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:49:43,557:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:49:43,559:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:49:43,568:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:49:43,584:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:49:43,584:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:49:43,587:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:49:43,590:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:49:43,591:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:49:43,602:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:49:43,617:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:49:43,618:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:49:43,618:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:49:43,619:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-09-10 22:49:43,619:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:49:43,620:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:49:43,620:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-09-10 22:49:43,621:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:49:43,623:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:49:43,624:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:49:43,624:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:49:43,625:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-09-10 22:49:43,625:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:49:43,626:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:49:43,626:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:49:43,626:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-09-10 22:49:43,627:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:49:43,627:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:49:43,628:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-09-10 22:49:43,629:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:49:43,639:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:49:43,641:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:49:43,641:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-09-10 22:49:43,642:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:49:43,668:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:49:43,668:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:49:43,669:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:49:43,671:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:49:43,699:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:49:43,700:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:49:43,701:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:49:43,702:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:49:43,733:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:49:43,735:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:49:43,735:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:49:43,735:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-09-10 22:49:43,736:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:49:43,736:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:49:43,736:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:49:43,736:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:49:43,737:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-09-10 22:49:43,737:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:49:43,738:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:49:43,738:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-09-10 22:49:43,738:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-09-10 22:49:43,738:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:49:43,739:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:49:43,742:INFO:Calculating mean and std
2022-09-10 22:49:43,743:INFO:Creating metrics dataframe
2022-09-10 22:49:43,746:INFO:Uploading results into container
2022-09-10 22:49:43,747:INFO:Uploading model into container now
2022-09-10 22:49:43,747:INFO:master_model_container: 8
2022-09-10 22:49:43,747:INFO:display_container: 2
2022-09-10 22:49:43,747:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2022-09-10 22:49:43,747:INFO:create_model() successfully completed......................................
2022-09-10 22:49:43,836:INFO:SubProcess create_model() end ==================================
2022-09-10 22:49:43,836:INFO:Creating metrics dataframe
2022-09-10 22:49:43,847:INFO:Initializing Ada Boost Classifier
2022-09-10 22:49:43,847:INFO:Total runtime is 0.06540946165720622 minutes
2022-09-10 22:49:43,850:INFO:SubProcess create_model() called ==================================
2022-09-10 22:49:43,850:INFO:Initializing create_model()
2022-09-10 22:49:43,850:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000026DB7ACBD90>, estimator=ada, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000026DB793A3D0>, model_only=True, return_train_score=False, kwargs={})
2022-09-10 22:49:43,851:INFO:Checking exceptions
2022-09-10 22:49:43,852:INFO:Importing libraries
2022-09-10 22:49:43,852:INFO:Copying training dataset
2022-09-10 22:49:43,855:INFO:Defining folds
2022-09-10 22:49:43,855:INFO:Declaring metric variables
2022-09-10 22:49:43,858:INFO:Importing untrained model
2022-09-10 22:49:43,862:INFO:Ada Boost Classifier Imported successfully
2022-09-10 22:49:43,868:INFO:Starting cross validation
2022-09-10 22:49:43,868:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-09-10 22:49:43,989:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:49:43,991:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:49:43,991:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:49:43,999:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:49:44,000:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:49:44,009:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:49:44,027:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:49:44,028:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:49:44,029:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:49:44,040:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:49:44,040:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:49:44,049:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:49:44,067:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:49:44,067:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:49:44,068:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:49:44,068:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:49:44,069:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:49:44,069:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:49:44,070:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:49:44,070:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:49:44,071:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:49:44,082:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:49:44,083:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:49:44,083:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:49:44,084:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:49:44,085:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:49:44,085:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:49:44,090:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:49:44,092:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:49:44,093:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:49:44,176:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:49:44,176:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:49:44,177:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:49:44,188:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:49:44,214:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:49:44,215:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:49:44,216:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:49:44,225:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:49:44,254:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:49:44,254:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:49:44,254:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:49:44,255:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:49:44,256:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:49:44,256:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:49:44,257:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:49:44,257:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:49:44,257:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:49:44,263:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:49:44,264:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:49:44,266:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:49:44,268:INFO:Calculating mean and std
2022-09-10 22:49:44,270:INFO:Creating metrics dataframe
2022-09-10 22:49:44,273:INFO:Uploading results into container
2022-09-10 22:49:44,274:INFO:Uploading model into container now
2022-09-10 22:49:44,274:INFO:master_model_container: 9
2022-09-10 22:49:44,274:INFO:display_container: 2
2022-09-10 22:49:44,274:INFO:AdaBoostClassifier(algorithm='SAMME.R', base_estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=8840)
2022-09-10 22:49:44,274:INFO:create_model() successfully completed......................................
2022-09-10 22:49:44,363:INFO:SubProcess create_model() end ==================================
2022-09-10 22:49:44,363:INFO:Creating metrics dataframe
2022-09-10 22:49:44,375:INFO:Initializing Gradient Boosting Classifier
2022-09-10 22:49:44,375:INFO:Total runtime is 0.07421747048695883 minutes
2022-09-10 22:49:44,378:INFO:SubProcess create_model() called ==================================
2022-09-10 22:49:44,378:INFO:Initializing create_model()
2022-09-10 22:49:44,378:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000026DB7ACBD90>, estimator=gbc, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000026DB793A3D0>, model_only=True, return_train_score=False, kwargs={})
2022-09-10 22:49:44,378:INFO:Checking exceptions
2022-09-10 22:49:44,380:INFO:Importing libraries
2022-09-10 22:49:44,380:INFO:Copying training dataset
2022-09-10 22:49:44,383:INFO:Defining folds
2022-09-10 22:49:44,383:INFO:Declaring metric variables
2022-09-10 22:49:44,386:INFO:Importing untrained model
2022-09-10 22:49:44,389:INFO:Gradient Boosting Classifier Imported successfully
2022-09-10 22:49:44,395:INFO:Starting cross validation
2022-09-10 22:49:44,396:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-09-10 22:49:44,678:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:49:44,684:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:49:44,684:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:49:44,701:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:49:44,702:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:49:44,709:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:49:44,712:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:49:44,716:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:49:44,717:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:49:44,734:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:49:44,735:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:49:44,743:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:49:44,744:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:49:44,746:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:49:44,746:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:49:44,753:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:49:44,755:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:49:44,755:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:49:44,756:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:49:44,757:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:49:44,757:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:49:44,768:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:49:44,769:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:49:44,770:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:49:44,772:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:49:44,774:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:49:44,775:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:49:44,781:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:49:44,783:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:49:44,785:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:49:45,012:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:49:45,029:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:49:45,031:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:49:45,034:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:49:45,044:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:49:45,061:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:49:45,063:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:49:45,065:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:49:45,078:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:49:45,080:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:49:45,081:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:49:45,095:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:49:45,096:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:49:45,097:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:49:45,097:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:49:45,098:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:49:45,099:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:49:45,099:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:49:45,100:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:49:45,101:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:49:45,104:INFO:Calculating mean and std
2022-09-10 22:49:45,106:INFO:Creating metrics dataframe
2022-09-10 22:49:45,109:INFO:Uploading results into container
2022-09-10 22:49:45,110:INFO:Uploading model into container now
2022-09-10 22:49:45,110:INFO:master_model_container: 10
2022-09-10 22:49:45,110:INFO:display_container: 2
2022-09-10 22:49:45,111:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=8840, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2022-09-10 22:49:45,111:INFO:create_model() successfully completed......................................
2022-09-10 22:49:45,201:INFO:SubProcess create_model() end ==================================
2022-09-10 22:49:45,201:INFO:Creating metrics dataframe
2022-09-10 22:49:45,212:INFO:Initializing Linear Discriminant Analysis
2022-09-10 22:49:45,212:INFO:Total runtime is 0.08816348711649577 minutes
2022-09-10 22:49:45,215:INFO:SubProcess create_model() called ==================================
2022-09-10 22:49:45,215:INFO:Initializing create_model()
2022-09-10 22:49:45,215:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000026DB7ACBD90>, estimator=lda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000026DB793A3D0>, model_only=True, return_train_score=False, kwargs={})
2022-09-10 22:49:45,215:INFO:Checking exceptions
2022-09-10 22:49:45,217:INFO:Importing libraries
2022-09-10 22:49:45,217:INFO:Copying training dataset
2022-09-10 22:49:45,220:INFO:Defining folds
2022-09-10 22:49:45,220:INFO:Declaring metric variables
2022-09-10 22:49:45,223:INFO:Importing untrained model
2022-09-10 22:49:45,226:INFO:Linear Discriminant Analysis Imported successfully
2022-09-10 22:49:45,231:INFO:Starting cross validation
2022-09-10 22:49:45,232:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-09-10 22:49:45,294:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:49:45,296:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:49:45,296:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:49:45,300:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:49:45,303:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:49:45,316:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:49:45,324:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:49:45,328:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:49:45,329:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:49:45,335:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:49:45,336:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:49:45,350:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:49:45,359:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:49:45,360:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:49:45,360:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:49:45,361:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-09-10 22:49:45,361:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:49:45,362:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:49:45,362:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-09-10 22:49:45,363:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:49:45,364:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:49:45,365:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:49:45,366:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-09-10 22:49:45,367:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:49:45,371:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:49:45,372:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:49:45,372:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:49:45,374:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-09-10 22:49:45,374:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:49:45,374:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:49:45,375:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-09-10 22:49:45,375:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:49:45,385:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:49:45,386:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:49:45,387:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-09-10 22:49:45,388:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:49:45,406:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:49:45,411:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:49:45,412:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:49:45,419:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:49:45,437:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:49:45,442:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:49:45,443:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:49:45,452:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:49:45,471:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:49:45,472:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:49:45,473:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-09-10 22:49:45,473:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:49:45,475:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:49:45,476:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:49:45,477:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:49:45,478:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-09-10 22:49:45,478:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:49:45,478:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:49:45,479:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-09-10 22:49:45,479:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:49:45,484:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:49:45,485:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:49:45,486:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-09-10 22:49:45,486:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:49:45,489:INFO:Calculating mean and std
2022-09-10 22:49:45,491:INFO:Creating metrics dataframe
2022-09-10 22:49:45,494:INFO:Uploading results into container
2022-09-10 22:49:45,494:INFO:Uploading model into container now
2022-09-10 22:49:45,495:INFO:master_model_container: 11
2022-09-10 22:49:45,495:INFO:display_container: 2
2022-09-10 22:49:45,495:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2022-09-10 22:49:45,495:INFO:create_model() successfully completed......................................
2022-09-10 22:49:45,584:INFO:SubProcess create_model() end ==================================
2022-09-10 22:49:45,584:INFO:Creating metrics dataframe
2022-09-10 22:49:45,595:INFO:Initializing Extra Trees Classifier
2022-09-10 22:49:45,595:INFO:Total runtime is 0.09455261627833049 minutes
2022-09-10 22:49:45,598:INFO:SubProcess create_model() called ==================================
2022-09-10 22:49:45,599:INFO:Initializing create_model()
2022-09-10 22:49:45,599:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000026DB7ACBD90>, estimator=et, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000026DB793A3D0>, model_only=True, return_train_score=False, kwargs={})
2022-09-10 22:49:45,599:INFO:Checking exceptions
2022-09-10 22:49:45,600:INFO:Importing libraries
2022-09-10 22:49:45,601:INFO:Copying training dataset
2022-09-10 22:49:45,604:INFO:Defining folds
2022-09-10 22:49:45,604:INFO:Declaring metric variables
2022-09-10 22:49:45,607:INFO:Importing untrained model
2022-09-10 22:49:45,610:INFO:Extra Trees Classifier Imported successfully
2022-09-10 22:49:45,616:INFO:Starting cross validation
2022-09-10 22:49:45,617:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-09-10 22:49:45,773:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:49:45,773:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:49:45,774:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:49:45,791:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:49:45,799:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:49:45,818:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:49:45,820:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:49:45,823:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:49:45,831:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:49:45,842:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:49:45,851:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:49:45,868:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:49:45,868:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:49:45,869:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:49:45,870:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:49:45,870:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:49:45,871:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:49:45,875:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:49:45,883:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:49:45,885:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:49:45,887:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:49:45,891:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:49:45,892:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:49:45,894:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:49:45,909:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:49:45,910:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:49:45,912:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:49:45,928:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:49:45,929:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:49:45,931:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:49:46,013:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:49:46,020:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:49:46,038:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:49:46,043:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:49:46,061:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:49:46,067:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:49:46,086:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:49:46,090:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:49:46,110:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:49:46,111:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:49:46,113:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:49:46,118:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:49:46,119:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:49:46,120:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:49:46,136:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:49:46,137:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:49:46,139:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:49:46,139:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:49:46,140:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:49:46,142:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:49:46,145:INFO:Calculating mean and std
2022-09-10 22:49:46,146:INFO:Creating metrics dataframe
2022-09-10 22:49:46,150:INFO:Uploading results into container
2022-09-10 22:49:46,150:INFO:Uploading model into container now
2022-09-10 22:49:46,150:INFO:master_model_container: 12
2022-09-10 22:49:46,151:INFO:display_container: 2
2022-09-10 22:49:46,151:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     n_estimators=100, n_jobs=-1, oob_score=False,
                     random_state=8840, verbose=0, warm_start=False)
2022-09-10 22:49:46,151:INFO:create_model() successfully completed......................................
2022-09-10 22:49:46,240:INFO:SubProcess create_model() end ==================================
2022-09-10 22:49:46,240:INFO:Creating metrics dataframe
2022-09-10 22:49:46,253:INFO:Initializing Light Gradient Boosting Machine
2022-09-10 22:49:46,253:INFO:Total runtime is 0.10551258722941081 minutes
2022-09-10 22:49:46,256:INFO:SubProcess create_model() called ==================================
2022-09-10 22:49:46,256:INFO:Initializing create_model()
2022-09-10 22:49:46,256:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000026DB7ACBD90>, estimator=lightgbm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000026DB793A3D0>, model_only=True, return_train_score=False, kwargs={})
2022-09-10 22:49:46,256:INFO:Checking exceptions
2022-09-10 22:49:46,258:INFO:Importing libraries
2022-09-10 22:49:46,258:INFO:Copying training dataset
2022-09-10 22:49:46,260:INFO:Defining folds
2022-09-10 22:49:46,261:INFO:Declaring metric variables
2022-09-10 22:49:46,264:INFO:Importing untrained model
2022-09-10 22:49:46,267:INFO:Light Gradient Boosting Machine Imported successfully
2022-09-10 22:49:46,273:INFO:Starting cross validation
2022-09-10 22:49:46,274:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-09-10 22:49:46,362:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:49:46,366:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:49:46,368:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:49:46,375:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:49:46,375:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:49:46,377:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:49:46,393:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:49:46,397:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:49:46,401:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:49:46,408:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:49:46,411:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:49:46,411:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:49:46,427:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:49:46,429:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:49:46,429:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:49:46,430:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:49:46,431:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:49:46,432:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:49:46,437:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:49:46,439:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:49:46,440:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:49:46,444:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:49:46,446:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:49:46,446:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:49:46,447:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:49:46,447:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:49:46,449:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:49:46,452:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:49:46,453:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:49:46,455:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:49:46,500:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:49:46,504:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:49:46,511:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:49:46,518:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:49:46,533:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:49:46,536:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:49:46,543:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:49:46,549:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:49:46,567:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:49:46,568:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:49:46,569:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:49:46,570:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:49:46,571:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:49:46,572:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:49:46,578:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:49:46,579:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:49:46,581:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:49:46,582:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:49:46,584:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:49:46,585:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:49:46,588:INFO:Calculating mean and std
2022-09-10 22:49:46,589:INFO:Creating metrics dataframe
2022-09-10 22:49:46,593:INFO:Uploading results into container
2022-09-10 22:49:46,593:INFO:Uploading model into container now
2022-09-10 22:49:46,594:INFO:master_model_container: 13
2022-09-10 22:49:46,594:INFO:display_container: 2
2022-09-10 22:49:46,594:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=8840, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0)
2022-09-10 22:49:46,594:INFO:create_model() successfully completed......................................
2022-09-10 22:49:46,683:INFO:SubProcess create_model() end ==================================
2022-09-10 22:49:46,683:INFO:Creating metrics dataframe
2022-09-10 22:49:46,695:INFO:Initializing Dummy Classifier
2022-09-10 22:49:46,695:INFO:Total runtime is 0.11288594404856364 minutes
2022-09-10 22:49:46,698:INFO:SubProcess create_model() called ==================================
2022-09-10 22:49:46,699:INFO:Initializing create_model()
2022-09-10 22:49:46,699:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000026DB7ACBD90>, estimator=dummy, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000026DB793A3D0>, model_only=True, return_train_score=False, kwargs={})
2022-09-10 22:49:46,699:INFO:Checking exceptions
2022-09-10 22:49:46,700:INFO:Importing libraries
2022-09-10 22:49:46,700:INFO:Copying training dataset
2022-09-10 22:49:46,703:INFO:Defining folds
2022-09-10 22:49:46,703:INFO:Declaring metric variables
2022-09-10 22:49:46,706:INFO:Importing untrained model
2022-09-10 22:49:46,709:INFO:Dummy Classifier Imported successfully
2022-09-10 22:49:46,715:INFO:Starting cross validation
2022-09-10 22:49:46,716:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-09-10 22:49:46,776:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:49:46,777:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:49:46,778:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:49:46,781:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:49:46,784:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:49:46,792:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:49:46,809:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:49:46,809:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:49:46,809:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:49:46,814:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:49:46,815:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:49:46,824:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:49:46,841:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:49:46,842:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:49:46,842:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:49:46,843:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-09-10 22:49:46,843:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:49:46,843:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:49:46,844:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:49:46,845:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-09-10 22:49:46,845:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:49:46,846:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:49:46,846:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-09-10 22:49:46,847:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:49:46,848:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:49:46,848:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:49:46,849:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:49:46,850:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:49:46,851:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-09-10 22:49:46,851:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-09-10 22:49:46,851:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:49:46,852:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:49:46,859:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:49:46,860:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:49:46,861:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-09-10 22:49:46,861:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:49:46,888:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:49:46,891:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:49:46,892:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:49:46,894:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:49:46,919:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:49:46,922:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:49:46,924:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:49:46,924:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:49:46,952:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:49:46,953:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:49:46,953:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:49:46,954:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-09-10 22:49:46,954:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:49:46,955:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:49:46,955:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-09-10 22:49:46,956:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:49:46,956:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:49:46,957:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:49:46,957:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:49:46,958:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-09-10 22:49:46,959:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:49:46,959:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:49:46,959:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-09-10 22:49:46,960:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:49:46,963:INFO:Calculating mean and std
2022-09-10 22:49:46,964:INFO:Creating metrics dataframe
2022-09-10 22:49:46,967:INFO:Uploading results into container
2022-09-10 22:49:46,968:INFO:Uploading model into container now
2022-09-10 22:49:46,968:INFO:master_model_container: 14
2022-09-10 22:49:46,968:INFO:display_container: 2
2022-09-10 22:49:46,968:INFO:DummyClassifier(constant=None, random_state=8840, strategy='prior')
2022-09-10 22:49:46,969:INFO:create_model() successfully completed......................................
2022-09-10 22:49:47,058:INFO:SubProcess create_model() end ==================================
2022-09-10 22:49:47,058:INFO:Creating metrics dataframe
2022-09-10 22:49:47,079:INFO:Initializing create_model()
2022-09-10 22:49:47,079:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000026DB7ACBD90>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=8840, splitter='best'), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2022-09-10 22:49:47,079:INFO:Checking exceptions
2022-09-10 22:49:47,083:INFO:Importing libraries
2022-09-10 22:49:47,083:INFO:Copying training dataset
2022-09-10 22:49:47,085:INFO:Defining folds
2022-09-10 22:49:47,085:INFO:Declaring metric variables
2022-09-10 22:49:47,085:INFO:Importing untrained model
2022-09-10 22:49:47,085:INFO:Declaring custom model
2022-09-10 22:49:47,085:INFO:Decision Tree Classifier Imported successfully
2022-09-10 22:49:47,086:INFO:Cross validation set to False
2022-09-10 22:49:47,086:INFO:Fitting Model
2022-09-10 22:49:47,234:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=8840, splitter='best')
2022-09-10 22:49:47,234:INFO:create_model() successfully completed......................................
2022-09-10 22:49:47,349:INFO:master_model_container: 14
2022-09-10 22:49:47,350:INFO:display_container: 2
2022-09-10 22:49:47,350:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=8840, splitter='best')
2022-09-10 22:49:47,350:INFO:compare_models() successfully completed......................................
2022-09-10 22:49:47,456:INFO:Initializing evaluate_model()
2022-09-10 22:49:47,457:INFO:evaluate_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000026DB7ACBD90>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=8840, splitter='best'), fold=None, fit_kwargs=None, plot_kwargs=None, feature_name=None, groups=None, use_train_data=False)
2022-09-10 22:49:47,473:INFO:Initializing plot_model()
2022-09-10 22:49:47,473:INFO:plot_model(plot=pipeline, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=8840, splitter='best'), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000026DB7ACBD90>, system=True)
2022-09-10 22:49:47,473:INFO:Checking exceptions
2022-09-10 22:49:47,476:INFO:Preloading libraries
2022-09-10 22:49:47,476:INFO:Copying training dataset
2022-09-10 22:49:47,477:INFO:Plot type: pipeline
2022-09-10 22:49:47,612:INFO:Visual Rendered Successfully
2022-09-10 22:49:47,702:INFO:plot_model() successfully completed......................................
2022-09-10 22:49:47,750:INFO:Initializing plot_model()
2022-09-10 22:49:47,750:INFO:plot_model(plot=auc, fold=None, use_train_data=False, verbose=True, display=None, display_format=None, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=8840, splitter='best'), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000026DB7ACBD90>, system=True)
2022-09-10 22:49:47,751:INFO:Checking exceptions
2022-09-10 22:49:47,755:INFO:Preloading libraries
2022-09-10 22:49:47,755:INFO:Copying training dataset
2022-09-10 22:49:47,755:INFO:Plot type: auc
2022-09-10 22:49:47,890:INFO:Fitting Model
2022-09-10 22:49:47,890:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\base.py:450: UserWarning: X does not have valid feature names, but DecisionTreeClassifier was fitted with feature names
  warnings.warn(

2022-09-10 22:49:47,890:INFO:Scoring test/hold-out set
2022-09-10 22:49:48,062:INFO:Visual Rendered Successfully
2022-09-10 22:49:48,150:INFO:plot_model() successfully completed......................................
2022-09-10 22:49:48,195:INFO:Initializing predict_model()
2022-09-10 22:49:48,195:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000026DB7ACBD90>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=8840, splitter='best'), probability_threshold=None, encoded_labels=False, raw_score=False, drift_report=False, round=4, verbose=True, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x0000026DB9F299D0>)
2022-09-10 22:49:48,195:INFO:Checking exceptions
2022-09-10 22:49:48,195:INFO:Preloading libraries
2022-09-10 22:49:48,250:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:49:48,250:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:49:48,251:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:49:48,251:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:49:48,252:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:49:48,253:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:49:48,382:INFO:Initializing predict_model()
2022-09-10 22:49:48,383:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000026DB7ACBD90>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=8840, splitter='best'), probability_threshold=None, encoded_labels=False, raw_score=False, drift_report=False, round=4, verbose=True, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x0000026D990F3C10>)
2022-09-10 22:49:48,383:INFO:Checking exceptions
2022-09-10 22:49:48,383:INFO:Preloading libraries
2022-09-10 22:49:48,384:INFO:Set up data.
2022-09-10 22:49:48,486:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:49:48,487:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:49:48,487:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:49:48,488:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:49:48,489:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:49:48,490:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:49:48,631:INFO:Initializing ensemble_model()
2022-09-10 22:49:48,632:INFO:ensemble_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000026DB7ACBD90>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=8840, splitter='best'), method=Bagging, fold=None, n_estimators=10, round=4, choose_better=True, optimize=Accuracy, fit_kwargs=None, groups=None, probability_threshold=None, verbose=True, return_train_score=False)
2022-09-10 22:49:48,632:INFO:Checking exceptions
2022-09-10 22:49:48,658:INFO:Importing libraries
2022-09-10 22:49:48,658:INFO:Copying training dataset
2022-09-10 22:49:48,658:INFO:Checking base model
2022-09-10 22:49:48,659:INFO:Base model : Decision Tree Classifier
2022-09-10 22:49:48,665:INFO:Importing untrained ensembler
2022-09-10 22:49:48,666:INFO:Ensemble method set to Bagging
2022-09-10 22:49:48,666:INFO:SubProcess create_model() called ==================================
2022-09-10 22:49:48,667:INFO:Initializing create_model()
2022-09-10 22:49:48,667:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000026DB7ACBD90>, estimator=BaggingClassifier(base_estimator=DecisionTreeClassifier(ccp_alpha=0.0,
                                                        class_weight=None,
                                                        criterion='gini',
                                                        max_depth=None,
                                                        max_features=None,
                                                        max_leaf_nodes=None,
                                                        min_impurity_decrease=0.0,
                                                        min_samples_leaf=1,
                                                        min_samples_split=2,
                                                        min_weight_fraction_leaf=0.0,
                                                        random_state=8840,
                                                        splitter='best'),
                  bootstrap=True, bootstrap_features=False, max_features=1.0,
                  max_samples=1.0, n_estimators=10, n_jobs=None,
                  oob_score=False, random_state=8840, verbose=0,
                  warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000026DB4F4B370>, model_only=True, return_train_score=False, kwargs={})
2022-09-10 22:49:48,667:INFO:Checking exceptions
2022-09-10 22:49:48,669:INFO:Importing libraries
2022-09-10 22:49:48,669:INFO:Copying training dataset
2022-09-10 22:49:48,670:INFO:Defining folds
2022-09-10 22:49:48,670:INFO:Declaring metric variables
2022-09-10 22:49:48,673:INFO:Importing untrained model
2022-09-10 22:49:48,674:INFO:Declaring custom model
2022-09-10 22:49:48,677:INFO:Decision Tree Classifier Imported successfully
2022-09-10 22:49:48,683:INFO:Starting cross validation
2022-09-10 22:49:48,684:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-09-10 22:49:48,762:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:49:48,763:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:49:48,764:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:49:48,771:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:49:48,772:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:49:48,780:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:49:48,794:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:49:48,796:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:49:48,798:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:49:48,806:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:49:48,807:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:49:48,814:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:49:48,830:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:49:48,830:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:49:48,831:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:49:48,832:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:49:48,832:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:49:48,832:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:49:48,833:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:49:48,834:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:49:48,842:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:49:48,843:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:49:48,845:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:49:48,847:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:49:48,849:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:49:48,850:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:49:48,851:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:49:48,853:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:49:48,854:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:49:48,892:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:49:48,893:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:49:48,894:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:49:48,902:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:49:48,924:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:49:48,926:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:49:48,927:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:49:48,934:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:49:48,959:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:49:48,960:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:49:48,960:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:49:48,961:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:49:48,961:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:49:48,961:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:49:48,962:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:49:48,962:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:49:48,963:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:49:48,968:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:49:48,970:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:49:48,972:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:49:48,974:INFO:Calculating mean and std
2022-09-10 22:49:48,975:INFO:Creating metrics dataframe
2022-09-10 22:49:48,980:INFO:Finalizing model
2022-09-10 22:49:49,052:INFO:Uploading results into container
2022-09-10 22:49:49,053:INFO:Uploading model into container now
2022-09-10 22:49:49,054:INFO:master_model_container: 15
2022-09-10 22:49:49,054:INFO:display_container: 5
2022-09-10 22:49:49,055:INFO:BaggingClassifier(base_estimator=DecisionTreeClassifier(ccp_alpha=0.0,
                                                        class_weight=None,
                                                        criterion='gini',
                                                        max_depth=None,
                                                        max_features=None,
                                                        max_leaf_nodes=None,
                                                        min_impurity_decrease=0.0,
                                                        min_samples_leaf=1,
                                                        min_samples_split=2,
                                                        min_weight_fraction_leaf=0.0,
                                                        random_state=8840,
                                                        splitter='best'),
                  bootstrap=True, bootstrap_features=False, max_features=1.0,
                  max_samples=1.0, n_estimators=10, n_jobs=None,
                  oob_score=False, random_state=8840, verbose=0,
                  warm_start=False)
2022-09-10 22:49:49,055:INFO:create_model() successfully completed......................................
2022-09-10 22:49:49,143:INFO:SubProcess create_model() end ==================================
2022-09-10 22:49:49,143:INFO:choose_better activated
2022-09-10 22:49:49,146:INFO:SubProcess create_model() called ==================================
2022-09-10 22:49:49,146:INFO:Initializing create_model()
2022-09-10 22:49:49,146:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000026DB7ACBD90>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=8840, splitter='best'), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2022-09-10 22:49:49,147:INFO:Checking exceptions
2022-09-10 22:49:49,149:INFO:Importing libraries
2022-09-10 22:49:49,150:INFO:Copying training dataset
2022-09-10 22:49:49,151:INFO:Defining folds
2022-09-10 22:49:49,151:INFO:Declaring metric variables
2022-09-10 22:49:49,152:INFO:Importing untrained model
2022-09-10 22:49:49,152:INFO:Declaring custom model
2022-09-10 22:49:49,152:INFO:Decision Tree Classifier Imported successfully
2022-09-10 22:49:49,152:INFO:Starting cross validation
2022-09-10 22:49:49,153:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-09-10 22:49:49,214:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:49:49,215:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:49:49,216:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:49:49,224:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:49:49,224:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:49:49,226:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:49:49,245:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:49:49,247:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:49:49,247:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:49:49,257:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:49:49,258:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:49:49,260:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:49:49,278:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:49:49,279:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:49:49,279:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:49:49,281:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:49:49,281:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:49:49,281:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:49:49,282:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:49:49,282:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:49:49,285:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:49:49,293:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:49:49,294:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:49:49,295:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:49:49,295:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:49:49,295:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:49:49,297:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:49:49,297:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:49:49,298:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:49:49,298:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:49:49,327:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:49:49,328:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:49:49,329:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:49:49,340:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:49:49,358:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:49:49,358:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:49:49,361:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:49:49,370:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 22:49:49,391:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:49:49,392:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:49:49,393:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:49:49,393:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:49:49,394:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:49:49,394:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:49:49,395:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:49:49,396:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:49:49,397:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:49:49,404:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:49:49,405:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:49:49,406:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:49:49,409:INFO:Calculating mean and std
2022-09-10 22:49:49,410:INFO:Creating metrics dataframe
2022-09-10 22:49:49,412:INFO:Finalizing model
2022-09-10 22:49:49,450:INFO:Uploading results into container
2022-09-10 22:49:49,450:INFO:Uploading model into container now
2022-09-10 22:49:49,450:INFO:master_model_container: 16
2022-09-10 22:49:49,451:INFO:display_container: 6
2022-09-10 22:49:49,451:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=8840, splitter='best')
2022-09-10 22:49:49,451:INFO:create_model() successfully completed......................................
2022-09-10 22:49:49,539:INFO:SubProcess create_model() end ==================================
2022-09-10 22:49:49,539:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=8840, splitter='best') result for Accuracy is 0.5671
2022-09-10 22:49:49,540:INFO:BaggingClassifier(base_estimator=DecisionTreeClassifier(ccp_alpha=0.0,
                                                        class_weight=None,
                                                        criterion='gini',
                                                        max_depth=None,
                                                        max_features=None,
                                                        max_leaf_nodes=None,
                                                        min_impurity_decrease=0.0,
                                                        min_samples_leaf=1,
                                                        min_samples_split=2,
                                                        min_weight_fraction_leaf=0.0,
                                                        random_state=8840,
                                                        splitter='best'),
                  bootstrap=True, bootstrap_features=False, max_features=1.0,
                  max_samples=1.0, n_estimators=10, n_jobs=None,
                  oob_score=False, random_state=8840, verbose=0,
                  warm_start=False) result for Accuracy is 0.5671
2022-09-10 22:49:49,541:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=8840, splitter='best') is best model
2022-09-10 22:49:49,541:INFO:choose_better completed
2022-09-10 22:49:49,541:INFO:Original model was better than the ensembled model, hence it will be returned. NOTE: The display metrics are for the ensembled model (not the original one).
2022-09-10 22:49:49,551:INFO:master_model_container: 16
2022-09-10 22:49:49,551:INFO:display_container: 5
2022-09-10 22:49:49,551:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=8840, splitter='best')
2022-09-10 22:49:49,551:INFO:ensemble_model() succesfully completed......................................
2022-09-10 22:49:49,728:INFO:Initializing evaluate_model()
2022-09-10 22:49:49,728:INFO:evaluate_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000026DB7ACBD90>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=8840, splitter='best'), fold=None, fit_kwargs=None, plot_kwargs=None, feature_name=None, groups=None, use_train_data=False)
2022-09-10 22:49:49,745:INFO:Initializing plot_model()
2022-09-10 22:49:49,745:INFO:plot_model(plot=pipeline, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=8840, splitter='best'), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000026DB7ACBD90>, system=True)
2022-09-10 22:49:49,745:INFO:Checking exceptions
2022-09-10 22:49:49,748:INFO:Preloading libraries
2022-09-10 22:49:49,749:INFO:Copying training dataset
2022-09-10 22:49:49,749:INFO:Plot type: pipeline
2022-09-10 22:49:49,883:INFO:Visual Rendered Successfully
2022-09-10 22:49:49,976:INFO:plot_model() successfully completed......................................
2022-09-10 22:49:50,051:INFO:Initializing plot_model()
2022-09-10 22:49:50,051:INFO:plot_model(plot=auc, fold=None, use_train_data=False, verbose=True, display=None, display_format=None, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=8840, splitter='best'), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000026DB7ACBD90>, system=True)
2022-09-10 22:49:50,051:INFO:Checking exceptions
2022-09-10 22:49:50,055:INFO:Preloading libraries
2022-09-10 22:49:50,056:INFO:Copying training dataset
2022-09-10 22:49:50,056:INFO:Plot type: auc
2022-09-10 22:49:50,189:INFO:Fitting Model
2022-09-10 22:49:50,190:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\base.py:450: UserWarning: X does not have valid feature names, but DecisionTreeClassifier was fitted with feature names
  warnings.warn(

2022-09-10 22:49:50,190:INFO:Scoring test/hold-out set
2022-09-10 22:49:50,361:INFO:Visual Rendered Successfully
2022-09-10 22:49:50,449:INFO:plot_model() successfully completed......................................
2022-09-10 22:49:50,494:INFO:Initializing predict_model()
2022-09-10 22:49:50,494:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000026DB7ACBD90>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=8840, splitter='best'), probability_threshold=None, encoded_labels=False, raw_score=False, drift_report=False, round=4, verbose=True, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x0000026DB9E275E0>)
2022-09-10 22:49:50,494:INFO:Checking exceptions
2022-09-10 22:49:50,494:INFO:Preloading libraries
2022-09-10 22:49:50,550:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:49:50,551:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:49:50,552:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:49:50,552:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:49:50,553:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:49:50,554:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:49:50,706:INFO:Initializing predict_model()
2022-09-10 22:49:50,706:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000026DB7ACBD90>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=8840, splitter='best'), probability_threshold=None, encoded_labels=False, raw_score=False, drift_report=False, round=4, verbose=True, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x0000026DBA4A14C0>)
2022-09-10 22:49:50,706:INFO:Checking exceptions
2022-09-10 22:49:50,706:INFO:Preloading libraries
2022-09-10 22:49:50,708:INFO:Set up data.
2022-09-10 22:49:50,767:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:49:50,767:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:49:50,768:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:49:50,769:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:49:50,769:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:49:50,770:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 22:49:50,919:INFO:Initializing save_model()
2022-09-10 22:49:50,919:INFO:save_model(model=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=8840, splitter='best'), model_name=my_best_pipeline, prep_pipe_=Pipeline(memory=Memory(location=C:\Users\bruno\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              missing_values=nan,
                                                              strategy='m...
                ('rest_encoding',
                 TransformerWrapper(exclude=None, include=['input'],
                                    transformer=LeaveOneOutEncoder(cols=['input'],
                                                                   drop_invariant=False,
                                                                   handle_missing='return_nan',
                                                                   handle_unknown='value',
                                                                   random_state=8840,
                                                                   return_df=True,
                                                                   sigma=None,
                                                                   verbose=0))),
                ('low_variance',
                 TransformerWrapper(exclude=[], include=None,
                                    transformer=VarianceThreshold(threshold=0)))],
         verbose=False), verbose=True, use_case=MLUsecase.CLASSIFICATION, kwargs={})
2022-09-10 22:49:50,919:INFO:Adding model into prep_pipe
2022-09-10 22:49:50,925:INFO:my_best_pipeline.pkl saved in current working directory
2022-09-10 22:49:50,933:INFO:Pipeline(memory=Memory(location=C:\Users\bruno\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              missing_values=nan,
                                                              strategy='m...
                 TransformerWrapper(exclude=[], include=None,
                                    transformer=VarianceThreshold(threshold=0))),
                ['trained_model',
                 DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None,
                                        criterion='gini', max_depth=None,
                                        max_features=None, max_leaf_nodes=None,
                                        min_impurity_decrease=0.0,
                                        min_samples_leaf=1, min_samples_split=2,
                                        min_weight_fraction_leaf=0.0,
                                        random_state=8840, splitter='best')]],
         verbose=False)
2022-09-10 22:49:50,933:INFO:save_model() successfully completed......................................
2022-09-10 22:49:51,085:INFO:Initializing load_model()
2022-09-10 22:49:51,085:INFO:load_model(model_name=my_best_pipeline, platform=None, authentication=None, verbose=True)
2022-09-10 23:05:00,555:INFO:PyCaret ClassificationExperiment
2022-09-10 23:05:00,555:INFO:Logging name: clf-default-name
2022-09-10 23:05:00,555:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2022-09-10 23:05:00,555:INFO:version 3.0.0.rc3
2022-09-10 23:05:00,555:INFO:Initializing setup()
2022-09-10 23:05:00,555:INFO:self.USI: b87c
2022-09-10 23:05:00,555:INFO:self.variable_keys: {'fold_shuffle_param', 'fold_generator', 'y_train', '_gpu_n_jobs_param', 'display_container', '_all_models', 'fold_groups_param', 'target_param', 'seed', 'y_test', 'USI', 'html_param', 'y', '_available_plots', 'memory', 'exp_id', 'data', 'exp_name_log', 'logging_param', 'pipeline', '_is_multiclass', 'n_jobs_param', 'log_plots_param', 'master_model_container', 'variable_keys', 'X_test', 'fix_imbalance', 'gpu_param', '_all_models_internal', 'X_train', '_ml_usecase', 'idx', '_all_metrics', 'X'}
2022-09-10 23:05:00,555:INFO:Checking environment
2022-09-10 23:05:00,555:INFO:python_version: 3.8.13
2022-09-10 23:05:00,555:INFO:python_build: ('default', 'Mar 28 2022 06:59:08')
2022-09-10 23:05:00,555:INFO:machine: AMD64
2022-09-10 23:05:00,555:INFO:platform: Windows-10-10.0.19044-SP0
2022-09-10 23:05:00,556:INFO:Memory: svmem(total=17107963904, available=6127124480, percent=64.2, used=10980839424, free=6127124480)
2022-09-10 23:05:00,556:INFO:Physical Core: 6
2022-09-10 23:05:00,556:INFO:Logical Core: 6
2022-09-10 23:05:00,556:INFO:Checking libraries
2022-09-10 23:05:00,556:INFO:System:
2022-09-10 23:05:00,556:INFO:    python: 3.8.13 (default, Mar 28 2022, 06:59:08) [MSC v.1916 64 bit (AMD64)]
2022-09-10 23:05:00,556:INFO:executable: c:\Users\bruno\anaconda3\envs\chatbot_env\python.exe
2022-09-10 23:05:00,556:INFO:   machine: Windows-10-10.0.19044-SP0
2022-09-10 23:05:00,556:INFO:PyCaret required dependencies:
2022-09-10 23:05:00,556:INFO:                 pip: 22.1.2
2022-09-10 23:05:00,556:INFO:          setuptools: 63.4.1
2022-09-10 23:05:00,556:INFO:             pycaret: 3.0.0.rc3
2022-09-10 23:05:00,556:INFO:             IPython: 8.5.0
2022-09-10 23:05:00,557:INFO:          ipywidgets: 8.0.2
2022-09-10 23:05:00,557:INFO:                tqdm: 4.64.1
2022-09-10 23:05:00,557:INFO:               numpy: 1.21.6
2022-09-10 23:05:00,557:INFO:              pandas: 1.4.4
2022-09-10 23:05:00,557:INFO:              jinja2: 3.1.2
2022-09-10 23:05:00,557:INFO:               scipy: 1.8.1
2022-09-10 23:05:00,557:INFO:              joblib: 1.1.0
2022-09-10 23:05:00,557:INFO:             sklearn: 1.1.2
2022-09-10 23:05:00,557:INFO:                pyod: Installed but version unavailable
2022-09-10 23:05:00,557:INFO:            imblearn: 0.9.1
2022-09-10 23:05:00,557:INFO:   category_encoders: 2.5.0
2022-09-10 23:05:00,557:INFO:            lightgbm: 3.3.2
2022-09-10 23:05:00,558:INFO:               numba: 0.55.2
2022-09-10 23:05:00,558:INFO:            requests: 2.28.1
2022-09-10 23:05:00,558:INFO:          matplotlib: 3.6.0rc2
2022-09-10 23:05:00,558:INFO:          scikitplot: 0.3.7
2022-09-10 23:05:00,558:INFO:         yellowbrick: 1.5
2022-09-10 23:05:00,558:INFO:              plotly: 5.10.0
2022-09-10 23:05:00,558:INFO:             kaleido: 0.2.1
2022-09-10 23:05:00,558:INFO:         statsmodels: 0.13.2
2022-09-10 23:05:00,558:INFO:              sktime: 0.11.4
2022-09-10 23:05:00,558:INFO:               tbats: Installed but version unavailable
2022-09-10 23:05:00,558:INFO:            pmdarima: 2.0.1
2022-09-10 23:05:00,558:INFO:              psutil: 5.9.2
2022-09-10 23:05:00,558:INFO:None
2022-09-10 23:05:00,558:INFO:Set up data.
2022-09-10 23:05:00,563:INFO:Set up train/test split.
2022-09-10 23:05:00,567:INFO:Assigning column types.
2022-09-10 23:05:00,570:INFO:Set up folding strategy.
2022-09-10 23:05:00,570:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2022-09-10 23:05:00,621:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2022-09-10 23:05:00,622:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2022-09-10 23:05:00,655:WARNING:No module named 'xgboost'.
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-09-10 23:05:00,656:WARNING:No module named 'catboost'.
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-09-10 23:05:00,708:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2022-09-10 23:05:00,709:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2022-09-10 23:05:00,742:WARNING:No module named 'xgboost'.
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-09-10 23:05:00,743:WARNING:No module named 'catboost'.
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-09-10 23:05:00,743:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2022-09-10 23:05:00,795:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2022-09-10 23:05:00,828:WARNING:No module named 'xgboost'.
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-09-10 23:05:00,829:WARNING:No module named 'catboost'.
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-09-10 23:05:00,884:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2022-09-10 23:05:00,917:WARNING:No module named 'xgboost'.
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-09-10 23:05:00,918:WARNING:No module named 'catboost'.
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-09-10 23:05:00,918:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2022-09-10 23:05:01,004:WARNING:No module named 'xgboost'.
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-09-10 23:05:01,005:WARNING:No module named 'catboost'.
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-09-10 23:05:01,089:WARNING:No module named 'xgboost'.
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-09-10 23:05:01,090:WARNING:No module named 'catboost'.
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-09-10 23:05:01,091:INFO:Preparing preprocessing pipeline...
2022-09-10 23:05:01,091:INFO:Set up label encoding.
2022-09-10 23:05:01,092:INFO:Set up simple imputation.
2022-09-10 23:05:01,092:INFO:Set up encoding of categorical features.
2022-09-10 23:05:01,092:INFO:Set up variance threshold.
2022-09-10 23:05:01,225:INFO:Finished creating preprocessing pipeline.
2022-09-10 23:05:01,232:INFO:Pipeline: Pipeline(memory=Memory(location=C:\Users\bruno\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              missing_values=nan,
                                                              strategy='m...
                ('rest_encoding',
                 TransformerWrapper(exclude=None, include=['input'],
                                    transformer=LeaveOneOutEncoder(cols=['input'],
                                                                   drop_invariant=False,
                                                                   handle_missing='return_nan',
                                                                   handle_unknown='value',
                                                                   random_state=7178,
                                                                   return_df=True,
                                                                   sigma=None,
                                                                   verbose=0))),
                ('low_variance',
                 TransformerWrapper(exclude=[], include=None,
                                    transformer=VarianceThreshold(threshold=0)))],
         verbose=False)
2022-09-10 23:05:01,232:INFO:Creating final display dataframe.
2022-09-10 23:05:01,807:INFO:Setup display_container:                     Description                                     Value
0                    Session id                                      7178
1                        Target                                     class
2                   Target type                                Multiclass
3                Target mapping  covid: 0, seloturismo: 1, tuberculose: 2
4           Original data shape                                 (2142, 2)
5        Transformed data shape                                 (2142, 2)
6   Transformed train set shape                                 (1499, 2)
7    Transformed test set shape                                  (643, 2)
8          Categorical features                                         1
9                    Preprocess                                      True
10              Imputation type                                    simple
11           Numeric imputation                                      mean
12       Categorical imputation                                  constant
13     Maximum one-hot encoding                                         5
14              Encoding method                                      None
15       Low variance threshold                                         0
16               Fold Generator                           StratifiedKFold
17                  Fold Number                                        10
18                     CPU Jobs                                        -1
19                      Use GPU                                     False
20               Log Experiment                                     False
21              Experiment Name                          clf-default-name
22                          USI                                      b87c
2022-09-10 23:05:01,897:WARNING:No module named 'xgboost'.
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-09-10 23:05:01,898:WARNING:No module named 'catboost'.
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-09-10 23:05:01,984:WARNING:No module named 'xgboost'.
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-09-10 23:05:01,985:WARNING:No module named 'catboost'.
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-09-10 23:05:01,991:INFO:setup() successfully completed in 1.44s...............
2022-09-10 23:05:02,013:INFO:Initializing compare_models()
2022-09-10 23:05:02,013:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000026DB9BCBEB0>, include=None, fold=None, round=4, cross_validation=True, sort=Accuracy, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x0000026DB9BCBEB0>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engines': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2022-09-10 23:05:02,013:INFO:Checking exceptions
2022-09-10 23:05:02,016:INFO:Preparing display monitor
2022-09-10 23:05:02,048:INFO:Initializing Logistic Regression
2022-09-10 23:05:02,048:INFO:Total runtime is 0.0 minutes
2022-09-10 23:05:02,051:INFO:SubProcess create_model() called ==================================
2022-09-10 23:05:02,052:INFO:Initializing create_model()
2022-09-10 23:05:02,052:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000026DB9BCBEB0>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000026DB9F28970>, model_only=True, return_train_score=False, kwargs={})
2022-09-10 23:05:02,052:INFO:Checking exceptions
2022-09-10 23:05:02,054:INFO:Importing libraries
2022-09-10 23:05:02,054:INFO:Copying training dataset
2022-09-10 23:05:02,056:INFO:Defining folds
2022-09-10 23:05:02,056:INFO:Declaring metric variables
2022-09-10 23:05:02,059:INFO:Importing untrained model
2022-09-10 23:05:02,062:INFO:Logistic Regression Imported successfully
2022-09-10 23:05:02,069:INFO:Starting cross validation
2022-09-10 23:05:02,070:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-09-10 23:05:05,095:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 23:05:05,118:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 23:05:05,121:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 23:05:05,154:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 23:05:05,181:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 23:05:05,185:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 23:05:05,222:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 23:05:05,242:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 23:05:05,253:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 23:05:05,280:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 23:05:05,302:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 23:05:05,305:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 23:05:05,306:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-09-10 23:05:05,306:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 23:05:05,318:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 23:05:05,320:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 23:05:05,322:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 23:05:05,323:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-09-10 23:05:05,323:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 23:05:05,330:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 23:05:05,331:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 23:05:05,333:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-09-10 23:05:05,333:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 23:05:05,333:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 23:05:05,363:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 23:05:05,364:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 23:05:05,365:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-09-10 23:05:05,365:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 23:05:05,398:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 23:05:05,400:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 23:05:05,400:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-09-10 23:05:05,401:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 23:05:05,426:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 23:05:05,428:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 23:05:05,429:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-09-10 23:05:05,429:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 23:05:05,536:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 23:05:05,552:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 23:05:05,562:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 23:05:05,592:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 23:05:05,660:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 23:05:05,682:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 23:05:05,690:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 23:05:05,718:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 23:05:05,733:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 23:05:05,735:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 23:05:05,735:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-09-10 23:05:05,736:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 23:05:05,753:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 23:05:05,755:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 23:05:05,755:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-09-10 23:05:05,756:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 23:05:05,761:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 23:05:05,762:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 23:05:05,763:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-09-10 23:05:05,764:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 23:05:05,786:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 23:05:05,787:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 23:05:05,788:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-09-10 23:05:05,789:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 23:05:05,792:INFO:Calculating mean and std
2022-09-10 23:05:05,793:INFO:Creating metrics dataframe
2022-09-10 23:05:05,796:INFO:Uploading results into container
2022-09-10 23:05:05,797:INFO:Uploading model into container now
2022-09-10 23:05:05,797:INFO:master_model_container: 1
2022-09-10 23:05:05,797:INFO:display_container: 2
2022-09-10 23:05:05,797:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=7178, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2022-09-10 23:05:05,797:INFO:create_model() successfully completed......................................
2022-09-10 23:05:05,890:INFO:SubProcess create_model() end ==================================
2022-09-10 23:05:05,890:INFO:Creating metrics dataframe
2022-09-10 23:05:05,898:INFO:Initializing K Neighbors Classifier
2022-09-10 23:05:05,898:INFO:Total runtime is 0.06415833234786987 minutes
2022-09-10 23:05:05,901:INFO:SubProcess create_model() called ==================================
2022-09-10 23:05:05,901:INFO:Initializing create_model()
2022-09-10 23:05:05,901:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000026DB9BCBEB0>, estimator=knn, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000026DB9F28970>, model_only=True, return_train_score=False, kwargs={})
2022-09-10 23:05:05,901:INFO:Checking exceptions
2022-09-10 23:05:05,903:INFO:Importing libraries
2022-09-10 23:05:05,903:INFO:Copying training dataset
2022-09-10 23:05:05,906:INFO:Defining folds
2022-09-10 23:05:05,906:INFO:Declaring metric variables
2022-09-10 23:05:05,909:INFO:Importing untrained model
2022-09-10 23:05:05,912:INFO:K Neighbors Classifier Imported successfully
2022-09-10 23:05:05,918:INFO:Starting cross validation
2022-09-10 23:05:05,919:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-09-10 23:05:06,001:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 23:05:06,002:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 23:05:06,003:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 23:05:06,008:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 23:05:06,008:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 23:05:06,012:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 23:05:06,044:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 23:05:06,044:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 23:05:06,052:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 23:05:06,052:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 23:05:06,055:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 23:05:06,062:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 23:05:06,081:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 23:05:06,083:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 23:05:06,084:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 23:05:06,086:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 23:05:06,088:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 23:05:06,089:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 23:05:06,089:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 23:05:06,091:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 23:05:06,092:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 23:05:06,095:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 23:05:06,097:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 23:05:06,099:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 23:05:06,099:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 23:05:06,100:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 23:05:06,102:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 23:05:06,104:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 23:05:06,106:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 23:05:06,107:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 23:05:06,153:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 23:05:06,154:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 23:05:06,154:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 23:05:06,162:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 23:05:06,194:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 23:05:06,194:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 23:05:06,194:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 23:05:06,203:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 23:05:06,231:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 23:05:06,233:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 23:05:06,233:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 23:05:06,233:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 23:05:06,234:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 23:05:06,234:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 23:05:06,234:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 23:05:06,236:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 23:05:06,236:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 23:05:06,241:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 23:05:06,242:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 23:05:06,244:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 23:05:06,247:INFO:Calculating mean and std
2022-09-10 23:05:06,248:INFO:Creating metrics dataframe
2022-09-10 23:05:06,252:INFO:Uploading results into container
2022-09-10 23:05:06,252:INFO:Uploading model into container now
2022-09-10 23:05:06,252:INFO:master_model_container: 2
2022-09-10 23:05:06,253:INFO:display_container: 2
2022-09-10 23:05:06,253:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2022-09-10 23:05:06,253:INFO:create_model() successfully completed......................................
2022-09-10 23:05:06,342:INFO:SubProcess create_model() end ==================================
2022-09-10 23:05:06,342:INFO:Creating metrics dataframe
2022-09-10 23:05:06,351:INFO:Initializing Naive Bayes
2022-09-10 23:05:06,351:INFO:Total runtime is 0.07171519597371419 minutes
2022-09-10 23:05:06,354:INFO:SubProcess create_model() called ==================================
2022-09-10 23:05:06,354:INFO:Initializing create_model()
2022-09-10 23:05:06,354:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000026DB9BCBEB0>, estimator=nb, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000026DB9F28970>, model_only=True, return_train_score=False, kwargs={})
2022-09-10 23:05:06,354:INFO:Checking exceptions
2022-09-10 23:05:06,356:INFO:Importing libraries
2022-09-10 23:05:06,356:INFO:Copying training dataset
2022-09-10 23:05:06,359:INFO:Defining folds
2022-09-10 23:05:06,359:INFO:Declaring metric variables
2022-09-10 23:05:06,362:INFO:Importing untrained model
2022-09-10 23:05:06,365:INFO:Naive Bayes Imported successfully
2022-09-10 23:05:06,371:INFO:Starting cross validation
2022-09-10 23:05:06,372:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-09-10 23:05:06,433:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 23:05:06,437:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 23:05:06,437:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 23:05:06,441:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 23:05:06,444:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 23:05:06,448:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 23:05:06,467:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 23:05:06,468:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 23:05:06,471:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 23:05:06,476:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 23:05:06,478:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 23:05:06,479:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 23:05:06,503:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 23:05:06,504:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 23:05:06,505:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 23:05:06,505:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 23:05:06,506:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-09-10 23:05:06,506:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 23:05:06,506:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-09-10 23:05:06,506:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 23:05:06,507:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 23:05:06,508:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 23:05:06,509:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-09-10 23:05:06,509:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 23:05:06,512:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 23:05:06,513:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 23:05:06,513:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 23:05:06,514:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 23:05:06,514:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-09-10 23:05:06,515:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 23:05:06,515:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 23:05:06,516:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-09-10 23:05:06,517:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 23:05:06,518:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 23:05:06,519:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-09-10 23:05:06,520:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 23:05:06,552:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 23:05:06,552:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 23:05:06,556:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 23:05:06,560:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 23:05:06,583:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 23:05:06,585:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 23:05:06,588:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 23:05:06,592:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 23:05:06,615:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 23:05:06,616:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 23:05:06,617:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-09-10 23:05:06,618:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 23:05:06,618:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 23:05:06,620:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 23:05:06,621:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-09-10 23:05:06,621:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 23:05:06,622:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 23:05:06,623:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 23:05:06,624:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-09-10 23:05:06,625:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 23:05:06,626:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 23:05:06,627:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 23:05:06,628:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-09-10 23:05:06,629:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 23:05:06,631:INFO:Calculating mean and std
2022-09-10 23:05:06,633:INFO:Creating metrics dataframe
2022-09-10 23:05:06,636:INFO:Uploading results into container
2022-09-10 23:05:06,636:INFO:Uploading model into container now
2022-09-10 23:05:06,637:INFO:master_model_container: 3
2022-09-10 23:05:06,637:INFO:display_container: 2
2022-09-10 23:05:06,637:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2022-09-10 23:05:06,637:INFO:create_model() successfully completed......................................
2022-09-10 23:05:06,727:INFO:SubProcess create_model() end ==================================
2022-09-10 23:05:06,727:INFO:Creating metrics dataframe
2022-09-10 23:05:06,736:INFO:Initializing Decision Tree Classifier
2022-09-10 23:05:06,736:INFO:Total runtime is 0.07812101046244303 minutes
2022-09-10 23:05:06,739:INFO:SubProcess create_model() called ==================================
2022-09-10 23:05:06,739:INFO:Initializing create_model()
2022-09-10 23:05:06,740:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000026DB9BCBEB0>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000026DB9F28970>, model_only=True, return_train_score=False, kwargs={})
2022-09-10 23:05:06,740:INFO:Checking exceptions
2022-09-10 23:05:06,741:INFO:Importing libraries
2022-09-10 23:05:06,741:INFO:Copying training dataset
2022-09-10 23:05:06,744:INFO:Defining folds
2022-09-10 23:05:06,744:INFO:Declaring metric variables
2022-09-10 23:05:06,747:INFO:Importing untrained model
2022-09-10 23:05:06,750:INFO:Decision Tree Classifier Imported successfully
2022-09-10 23:05:06,756:INFO:Starting cross validation
2022-09-10 23:05:06,757:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-09-10 23:05:06,819:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 23:05:06,821:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 23:05:06,821:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 23:05:06,825:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 23:05:06,827:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 23:05:06,835:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 23:05:06,851:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 23:05:06,852:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 23:05:06,853:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 23:05:06,857:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 23:05:06,859:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 23:05:06,869:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 23:05:06,886:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 23:05:06,887:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 23:05:06,887:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 23:05:06,887:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 23:05:06,888:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 23:05:06,888:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 23:05:06,889:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 23:05:06,889:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 23:05:06,889:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 23:05:06,890:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 23:05:06,891:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 23:05:06,892:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 23:05:06,894:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 23:05:06,896:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 23:05:06,898:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 23:05:06,906:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 23:05:06,907:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 23:05:06,908:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 23:05:06,935:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 23:05:06,935:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 23:05:06,937:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 23:05:06,942:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 23:05:06,965:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 23:05:06,967:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 23:05:06,968:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 23:05:06,975:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 23:05:06,998:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 23:05:07,000:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 23:05:07,001:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 23:05:07,001:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 23:05:07,002:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 23:05:07,002:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 23:05:07,003:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 23:05:07,004:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 23:05:07,004:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 23:05:07,008:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 23:05:07,009:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 23:05:07,011:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 23:05:07,013:INFO:Calculating mean and std
2022-09-10 23:05:07,015:INFO:Creating metrics dataframe
2022-09-10 23:05:07,018:INFO:Uploading results into container
2022-09-10 23:05:07,018:INFO:Uploading model into container now
2022-09-10 23:05:07,019:INFO:master_model_container: 4
2022-09-10 23:05:07,019:INFO:display_container: 2
2022-09-10 23:05:07,019:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=7178, splitter='best')
2022-09-10 23:05:07,019:INFO:create_model() successfully completed......................................
2022-09-10 23:05:07,110:INFO:SubProcess create_model() end ==================================
2022-09-10 23:05:07,110:INFO:Creating metrics dataframe
2022-09-10 23:05:07,120:INFO:Initializing SVM - Linear Kernel
2022-09-10 23:05:07,120:INFO:Total runtime is 0.08452683687210083 minutes
2022-09-10 23:05:07,123:INFO:SubProcess create_model() called ==================================
2022-09-10 23:05:07,123:INFO:Initializing create_model()
2022-09-10 23:05:07,123:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000026DB9BCBEB0>, estimator=svm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000026DB9F28970>, model_only=True, return_train_score=False, kwargs={})
2022-09-10 23:05:07,123:INFO:Checking exceptions
2022-09-10 23:05:07,125:INFO:Importing libraries
2022-09-10 23:05:07,125:INFO:Copying training dataset
2022-09-10 23:05:07,127:INFO:Defining folds
2022-09-10 23:05:07,127:INFO:Declaring metric variables
2022-09-10 23:05:07,130:INFO:Importing untrained model
2022-09-10 23:05:07,134:INFO:SVM - Linear Kernel Imported successfully
2022-09-10 23:05:07,140:INFO:Starting cross validation
2022-09-10 23:05:07,141:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-09-10 23:05:07,210:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 23:05:07,218:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 23:05:07,219:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 23:05:07,222:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 23:05:07,223:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 23:05:07,235:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 23:05:07,246:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 23:05:07,246:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 23:05:07,248:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 23:05:07,249:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 23:05:07,252:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 23:05:07,252:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 23:05:07,254:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 23:05:07,254:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 23:05:07,254:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-09-10 23:05:07,255:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 23:05:07,255:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 23:05:07,256:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 23:05:07,256:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 23:05:07,256:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 23:05:07,257:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 23:05:07,257:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 23:05:07,257:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-09-10 23:05:07,258:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 23:05:07,258:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 23:05:07,259:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 23:05:07,259:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-09-10 23:05:07,259:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-09-10 23:05:07,260:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 23:05:07,260:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 23:05:07,267:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 23:05:07,267:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 23:05:07,269:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 23:05:07,270:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-09-10 23:05:07,271:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 23:05:07,300:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 23:05:07,310:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 23:05:07,312:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 23:05:07,313:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 23:05:07,335:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 23:05:07,336:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 23:05:07,337:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 23:05:07,338:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-09-10 23:05:07,338:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 23:05:07,341:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 23:05:07,342:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 23:05:07,343:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 23:05:07,344:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-09-10 23:05:07,344:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 23:05:07,345:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 23:05:07,345:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 23:05:07,346:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 23:05:07,346:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 23:05:07,347:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 23:05:07,347:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 23:05:07,348:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-09-10 23:05:07,348:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-09-10 23:05:07,348:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 23:05:07,349:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 23:05:07,352:INFO:Calculating mean and std
2022-09-10 23:05:07,353:INFO:Creating metrics dataframe
2022-09-10 23:05:07,356:INFO:Uploading results into container
2022-09-10 23:05:07,357:INFO:Uploading model into container now
2022-09-10 23:05:07,357:INFO:master_model_container: 5
2022-09-10 23:05:07,357:INFO:display_container: 2
2022-09-10 23:05:07,358:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=7178, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2022-09-10 23:05:07,358:INFO:create_model() successfully completed......................................
2022-09-10 23:05:07,447:INFO:SubProcess create_model() end ==================================
2022-09-10 23:05:07,447:INFO:Creating metrics dataframe
2022-09-10 23:05:07,457:INFO:Initializing Ridge Classifier
2022-09-10 23:05:07,457:INFO:Total runtime is 0.09014861583709717 minutes
2022-09-10 23:05:07,460:INFO:SubProcess create_model() called ==================================
2022-09-10 23:05:07,460:INFO:Initializing create_model()
2022-09-10 23:05:07,461:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000026DB9BCBEB0>, estimator=ridge, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000026DB9F28970>, model_only=True, return_train_score=False, kwargs={})
2022-09-10 23:05:07,461:INFO:Checking exceptions
2022-09-10 23:05:07,462:INFO:Importing libraries
2022-09-10 23:05:07,462:INFO:Copying training dataset
2022-09-10 23:05:07,465:INFO:Defining folds
2022-09-10 23:05:07,465:INFO:Declaring metric variables
2022-09-10 23:05:07,468:INFO:Importing untrained model
2022-09-10 23:05:07,471:INFO:Ridge Classifier Imported successfully
2022-09-10 23:05:07,477:INFO:Starting cross validation
2022-09-10 23:05:07,478:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-09-10 23:05:07,541:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 23:05:07,543:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 23:05:07,550:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 23:05:07,551:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 23:05:07,558:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 23:05:07,574:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 23:05:07,575:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 23:05:07,575:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 23:05:07,575:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 23:05:07,576:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 23:05:07,577:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-09-10 23:05:07,577:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 23:05:07,578:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 23:05:07,578:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 23:05:07,578:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-09-10 23:05:07,579:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 23:05:07,579:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 23:05:07,580:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 23:05:07,581:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-09-10 23:05:07,581:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 23:05:07,584:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 23:05:07,585:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 23:05:07,586:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 23:05:07,586:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 23:05:07,586:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 23:05:07,587:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-09-10 23:05:07,588:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 23:05:07,591:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 23:05:07,592:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-09-10 23:05:07,593:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 23:05:07,594:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 23:05:07,594:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 23:05:07,596:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 23:05:07,597:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-09-10 23:05:07,598:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 23:05:07,620:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 23:05:07,628:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 23:05:07,628:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 23:05:07,633:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 23:05:07,652:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 23:05:07,653:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 23:05:07,654:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 23:05:07,655:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-09-10 23:05:07,656:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 23:05:07,658:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 23:05:07,659:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 23:05:07,659:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 23:05:07,660:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 23:05:07,660:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 23:05:07,661:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 23:05:07,661:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-09-10 23:05:07,662:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-09-10 23:05:07,662:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 23:05:07,663:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 23:05:07,664:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 23:05:07,664:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 23:05:07,666:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 23:05:07,667:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-09-10 23:05:07,667:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 23:05:07,670:INFO:Calculating mean and std
2022-09-10 23:05:07,672:INFO:Creating metrics dataframe
2022-09-10 23:05:07,675:INFO:Uploading results into container
2022-09-10 23:05:07,675:INFO:Uploading model into container now
2022-09-10 23:05:07,675:INFO:master_model_container: 6
2022-09-10 23:05:07,675:INFO:display_container: 2
2022-09-10 23:05:07,676:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, normalize='deprecated', positive=False,
                random_state=7178, solver='auto', tol=0.001)
2022-09-10 23:05:07,676:INFO:create_model() successfully completed......................................
2022-09-10 23:05:07,766:INFO:SubProcess create_model() end ==================================
2022-09-10 23:05:07,766:INFO:Creating metrics dataframe
2022-09-10 23:05:07,777:INFO:Initializing Random Forest Classifier
2022-09-10 23:05:07,777:INFO:Total runtime is 0.09547011454900106 minutes
2022-09-10 23:05:07,780:INFO:SubProcess create_model() called ==================================
2022-09-10 23:05:07,780:INFO:Initializing create_model()
2022-09-10 23:05:07,780:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000026DB9BCBEB0>, estimator=rf, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000026DB9F28970>, model_only=True, return_train_score=False, kwargs={})
2022-09-10 23:05:07,780:INFO:Checking exceptions
2022-09-10 23:05:07,782:INFO:Importing libraries
2022-09-10 23:05:07,782:INFO:Copying training dataset
2022-09-10 23:05:07,785:INFO:Defining folds
2022-09-10 23:05:07,785:INFO:Declaring metric variables
2022-09-10 23:05:07,788:INFO:Importing untrained model
2022-09-10 23:05:07,791:INFO:Random Forest Classifier Imported successfully
2022-09-10 23:05:07,797:INFO:Starting cross validation
2022-09-10 23:05:07,798:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-09-10 23:05:07,984:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 23:05:07,986:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 23:05:07,995:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 23:05:08,000:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 23:05:08,004:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 23:05:08,031:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 23:05:08,032:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 23:05:08,051:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 23:05:08,053:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 23:05:08,059:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 23:05:08,079:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 23:05:08,079:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 23:05:08,080:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 23:05:08,080:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 23:05:08,082:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 23:05:08,082:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 23:05:08,101:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 23:05:08,108:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 23:05:08,109:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 23:05:08,111:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 23:05:08,111:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 23:05:08,112:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 23:05:08,114:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 23:05:08,114:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 23:05:08,116:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 23:05:08,117:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 23:05:08,151:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 23:05:08,202:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 23:05:08,204:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 23:05:08,205:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 23:05:08,261:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 23:05:08,264:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 23:05:08,300:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 23:05:08,300:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 23:05:08,309:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 23:05:08,313:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 23:05:08,348:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 23:05:08,351:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 23:05:08,359:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 23:05:08,361:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 23:05:08,363:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 23:05:08,365:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 23:05:08,366:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 23:05:08,368:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 23:05:08,398:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 23:05:08,399:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 23:05:08,400:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 23:05:08,401:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 23:05:08,401:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 23:05:08,403:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 23:05:08,406:INFO:Calculating mean and std
2022-09-10 23:05:08,407:INFO:Creating metrics dataframe
2022-09-10 23:05:08,411:INFO:Uploading results into container
2022-09-10 23:05:08,411:INFO:Uploading model into container now
2022-09-10 23:05:08,412:INFO:master_model_container: 7
2022-09-10 23:05:08,412:INFO:display_container: 2
2022-09-10 23:05:08,412:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=7178, verbose=0, warm_start=False)
2022-09-10 23:05:08,412:INFO:create_model() successfully completed......................................
2022-09-10 23:05:08,501:INFO:SubProcess create_model() end ==================================
2022-09-10 23:05:08,501:INFO:Creating metrics dataframe
2022-09-10 23:05:08,512:INFO:Initializing Quadratic Discriminant Analysis
2022-09-10 23:05:08,512:INFO:Total runtime is 0.10773125886917115 minutes
2022-09-10 23:05:08,515:INFO:SubProcess create_model() called ==================================
2022-09-10 23:05:08,515:INFO:Initializing create_model()
2022-09-10 23:05:08,515:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000026DB9BCBEB0>, estimator=qda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000026DB9F28970>, model_only=True, return_train_score=False, kwargs={})
2022-09-10 23:05:08,515:INFO:Checking exceptions
2022-09-10 23:05:08,517:INFO:Importing libraries
2022-09-10 23:05:08,517:INFO:Copying training dataset
2022-09-10 23:05:08,519:INFO:Defining folds
2022-09-10 23:05:08,520:INFO:Declaring metric variables
2022-09-10 23:05:08,523:INFO:Importing untrained model
2022-09-10 23:05:08,526:INFO:Quadratic Discriminant Analysis Imported successfully
2022-09-10 23:05:08,532:INFO:Starting cross validation
2022-09-10 23:05:08,532:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-09-10 23:05:08,595:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 23:05:08,597:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 23:05:08,598:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 23:05:08,602:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 23:05:08,604:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 23:05:08,609:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 23:05:08,627:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 23:05:08,629:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 23:05:08,632:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 23:05:08,634:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 23:05:08,635:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 23:05:08,643:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 23:05:08,661:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 23:05:08,662:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 23:05:08,662:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 23:05:08,663:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-09-10 23:05:08,663:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 23:05:08,664:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 23:05:08,664:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-09-10 23:05:08,664:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 23:05:08,668:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 23:05:08,669:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 23:05:08,670:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-09-10 23:05:08,670:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 23:05:08,670:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 23:05:08,671:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 23:05:08,672:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 23:05:08,672:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 23:05:08,672:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-09-10 23:05:08,672:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-09-10 23:05:08,673:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 23:05:08,673:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 23:05:08,683:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 23:05:08,684:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 23:05:08,685:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-09-10 23:05:08,686:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 23:05:08,711:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 23:05:08,713:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 23:05:08,714:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 23:05:08,716:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 23:05:08,742:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 23:05:08,745:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 23:05:08,746:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 23:05:08,747:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 23:05:08,774:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 23:05:08,776:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 23:05:08,777:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-09-10 23:05:08,777:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 23:05:08,778:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 23:05:08,779:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 23:05:08,780:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 23:05:08,780:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-09-10 23:05:08,781:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 23:05:08,781:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 23:05:08,782:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-09-10 23:05:08,782:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 23:05:08,782:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 23:05:08,783:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 23:05:08,784:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-09-10 23:05:08,785:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 23:05:08,787:INFO:Calculating mean and std
2022-09-10 23:05:08,789:INFO:Creating metrics dataframe
2022-09-10 23:05:08,792:INFO:Uploading results into container
2022-09-10 23:05:08,793:INFO:Uploading model into container now
2022-09-10 23:05:08,793:INFO:master_model_container: 8
2022-09-10 23:05:08,793:INFO:display_container: 2
2022-09-10 23:05:08,793:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2022-09-10 23:05:08,793:INFO:create_model() successfully completed......................................
2022-09-10 23:05:08,882:INFO:SubProcess create_model() end ==================================
2022-09-10 23:05:08,882:INFO:Creating metrics dataframe
2022-09-10 23:05:08,893:INFO:Initializing Ada Boost Classifier
2022-09-10 23:05:08,894:INFO:Total runtime is 0.11408704916636149 minutes
2022-09-10 23:05:08,896:INFO:SubProcess create_model() called ==================================
2022-09-10 23:05:08,897:INFO:Initializing create_model()
2022-09-10 23:05:08,897:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000026DB9BCBEB0>, estimator=ada, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000026DB9F28970>, model_only=True, return_train_score=False, kwargs={})
2022-09-10 23:05:08,897:INFO:Checking exceptions
2022-09-10 23:05:08,898:INFO:Importing libraries
2022-09-10 23:05:08,898:INFO:Copying training dataset
2022-09-10 23:05:08,901:INFO:Defining folds
2022-09-10 23:05:08,901:INFO:Declaring metric variables
2022-09-10 23:05:08,904:INFO:Importing untrained model
2022-09-10 23:05:08,907:INFO:Ada Boost Classifier Imported successfully
2022-09-10 23:05:08,913:INFO:Starting cross validation
2022-09-10 23:05:08,914:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-09-10 23:05:09,036:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 23:05:09,037:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 23:05:09,039:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 23:05:09,046:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 23:05:09,046:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 23:05:09,056:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 23:05:09,074:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 23:05:09,074:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 23:05:09,077:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 23:05:09,086:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 23:05:09,086:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 23:05:09,095:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 23:05:09,113:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 23:05:09,114:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 23:05:09,116:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 23:05:09,116:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 23:05:09,117:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 23:05:09,118:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 23:05:09,119:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 23:05:09,119:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 23:05:09,120:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 23:05:09,127:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 23:05:09,128:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 23:05:09,129:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 23:05:09,129:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 23:05:09,130:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 23:05:09,130:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 23:05:09,138:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 23:05:09,139:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 23:05:09,140:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 23:05:09,219:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 23:05:09,225:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 23:05:09,230:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 23:05:09,237:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 23:05:09,258:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 23:05:09,262:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 23:05:09,269:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 23:05:09,275:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 23:05:09,297:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 23:05:09,298:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 23:05:09,300:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 23:05:09,301:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 23:05:09,302:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 23:05:09,304:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 23:05:09,310:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 23:05:09,311:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 23:05:09,313:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 23:05:09,313:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 23:05:09,315:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 23:05:09,316:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 23:05:09,319:INFO:Calculating mean and std
2022-09-10 23:05:09,320:INFO:Creating metrics dataframe
2022-09-10 23:05:09,323:INFO:Uploading results into container
2022-09-10 23:05:09,324:INFO:Uploading model into container now
2022-09-10 23:05:09,324:INFO:master_model_container: 9
2022-09-10 23:05:09,324:INFO:display_container: 2
2022-09-10 23:05:09,324:INFO:AdaBoostClassifier(algorithm='SAMME.R', base_estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=7178)
2022-09-10 23:05:09,325:INFO:create_model() successfully completed......................................
2022-09-10 23:05:09,414:INFO:SubProcess create_model() end ==================================
2022-09-10 23:05:09,414:INFO:Creating metrics dataframe
2022-09-10 23:05:09,425:INFO:Initializing Gradient Boosting Classifier
2022-09-10 23:05:09,425:INFO:Total runtime is 0.12294509808222452 minutes
2022-09-10 23:05:09,428:INFO:SubProcess create_model() called ==================================
2022-09-10 23:05:09,428:INFO:Initializing create_model()
2022-09-10 23:05:09,428:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000026DB9BCBEB0>, estimator=gbc, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000026DB9F28970>, model_only=True, return_train_score=False, kwargs={})
2022-09-10 23:05:09,428:INFO:Checking exceptions
2022-09-10 23:05:09,430:INFO:Importing libraries
2022-09-10 23:05:09,430:INFO:Copying training dataset
2022-09-10 23:05:09,433:INFO:Defining folds
2022-09-10 23:05:09,433:INFO:Declaring metric variables
2022-09-10 23:05:09,436:INFO:Importing untrained model
2022-09-10 23:05:09,439:INFO:Gradient Boosting Classifier Imported successfully
2022-09-10 23:05:09,445:INFO:Starting cross validation
2022-09-10 23:05:09,446:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-09-10 23:05:09,729:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 23:05:09,730:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 23:05:09,731:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 23:05:09,749:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 23:05:09,752:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 23:05:09,758:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 23:05:09,760:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 23:05:09,763:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 23:05:09,764:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 23:05:09,784:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 23:05:09,786:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 23:05:09,794:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 23:05:09,795:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 23:05:09,796:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 23:05:09,797:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 23:05:09,798:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 23:05:09,798:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 23:05:09,799:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 23:05:09,799:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 23:05:09,801:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 23:05:09,806:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 23:05:09,820:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 23:05:09,821:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 23:05:09,822:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 23:05:09,823:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 23:05:09,824:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 23:05:09,825:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 23:05:09,830:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 23:05:09,832:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 23:05:09,834:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 23:05:10,064:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 23:05:10,070:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 23:05:10,073:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 23:05:10,088:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 23:05:10,095:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 23:05:10,101:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 23:05:10,106:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 23:05:10,120:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 23:05:10,129:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 23:05:10,130:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 23:05:10,132:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 23:05:10,134:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 23:05:10,136:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 23:05:10,137:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 23:05:10,140:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 23:05:10,142:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 23:05:10,143:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 23:05:10,153:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 23:05:10,154:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 23:05:10,156:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 23:05:10,158:INFO:Calculating mean and std
2022-09-10 23:05:10,160:INFO:Creating metrics dataframe
2022-09-10 23:05:10,163:INFO:Uploading results into container
2022-09-10 23:05:10,163:INFO:Uploading model into container now
2022-09-10 23:05:10,164:INFO:master_model_container: 10
2022-09-10 23:05:10,164:INFO:display_container: 2
2022-09-10 23:05:10,164:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=7178, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2022-09-10 23:05:10,164:INFO:create_model() successfully completed......................................
2022-09-10 23:05:10,254:INFO:SubProcess create_model() end ==================================
2022-09-10 23:05:10,254:INFO:Creating metrics dataframe
2022-09-10 23:05:10,266:INFO:Initializing Linear Discriminant Analysis
2022-09-10 23:05:10,266:INFO:Total runtime is 0.13695782820383706 minutes
2022-09-10 23:05:10,269:INFO:SubProcess create_model() called ==================================
2022-09-10 23:05:10,269:INFO:Initializing create_model()
2022-09-10 23:05:10,269:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000026DB9BCBEB0>, estimator=lda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000026DB9F28970>, model_only=True, return_train_score=False, kwargs={})
2022-09-10 23:05:10,270:INFO:Checking exceptions
2022-09-10 23:05:10,271:INFO:Importing libraries
2022-09-10 23:05:10,271:INFO:Copying training dataset
2022-09-10 23:05:10,274:INFO:Defining folds
2022-09-10 23:05:10,274:INFO:Declaring metric variables
2022-09-10 23:05:10,277:INFO:Importing untrained model
2022-09-10 23:05:10,280:INFO:Linear Discriminant Analysis Imported successfully
2022-09-10 23:05:10,286:INFO:Starting cross validation
2022-09-10 23:05:10,287:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-09-10 23:05:10,350:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 23:05:10,350:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 23:05:10,350:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 23:05:10,356:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 23:05:10,357:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 23:05:10,363:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 23:05:10,381:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 23:05:10,383:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 23:05:10,384:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 23:05:10,389:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 23:05:10,389:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 23:05:10,396:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 23:05:10,414:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 23:05:10,415:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 23:05:10,416:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-09-10 23:05:10,417:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 23:05:10,419:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 23:05:10,420:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 23:05:10,420:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 23:05:10,421:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-09-10 23:05:10,421:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 23:05:10,422:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 23:05:10,422:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-09-10 23:05:10,423:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 23:05:10,424:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 23:05:10,425:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 23:05:10,427:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 23:05:10,427:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 23:05:10,427:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-09-10 23:05:10,428:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-09-10 23:05:10,428:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 23:05:10,429:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 23:05:10,433:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 23:05:10,435:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 23:05:10,436:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-09-10 23:05:10,436:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 23:05:10,460:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 23:05:10,466:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 23:05:10,467:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 23:05:10,474:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 23:05:10,492:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 23:05:10,498:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 23:05:10,499:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 23:05:10,505:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 23:05:10,525:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 23:05:10,527:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 23:05:10,528:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-09-10 23:05:10,529:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 23:05:10,530:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 23:05:10,532:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 23:05:10,532:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-09-10 23:05:10,533:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 23:05:10,535:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 23:05:10,536:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 23:05:10,537:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-09-10 23:05:10,537:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 23:05:10,537:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 23:05:10,539:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 23:05:10,539:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-09-10 23:05:10,540:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 23:05:10,543:INFO:Calculating mean and std
2022-09-10 23:05:10,544:INFO:Creating metrics dataframe
2022-09-10 23:05:10,548:INFO:Uploading results into container
2022-09-10 23:05:10,548:INFO:Uploading model into container now
2022-09-10 23:05:10,549:INFO:master_model_container: 11
2022-09-10 23:05:10,549:INFO:display_container: 2
2022-09-10 23:05:10,549:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2022-09-10 23:05:10,549:INFO:create_model() successfully completed......................................
2022-09-10 23:05:10,639:INFO:SubProcess create_model() end ==================================
2022-09-10 23:05:10,639:INFO:Creating metrics dataframe
2022-09-10 23:05:10,651:INFO:Initializing Extra Trees Classifier
2022-09-10 23:05:10,651:INFO:Total runtime is 0.14338033994038898 minutes
2022-09-10 23:05:10,654:INFO:SubProcess create_model() called ==================================
2022-09-10 23:05:10,654:INFO:Initializing create_model()
2022-09-10 23:05:10,654:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000026DB9BCBEB0>, estimator=et, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000026DB9F28970>, model_only=True, return_train_score=False, kwargs={})
2022-09-10 23:05:10,654:INFO:Checking exceptions
2022-09-10 23:05:10,656:INFO:Importing libraries
2022-09-10 23:05:10,656:INFO:Copying training dataset
2022-09-10 23:05:10,658:INFO:Defining folds
2022-09-10 23:05:10,658:INFO:Declaring metric variables
2022-09-10 23:05:10,662:INFO:Importing untrained model
2022-09-10 23:05:10,665:INFO:Extra Trees Classifier Imported successfully
2022-09-10 23:05:10,670:INFO:Starting cross validation
2022-09-10 23:05:10,671:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-09-10 23:05:10,827:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 23:05:10,828:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 23:05:10,831:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 23:05:10,838:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 23:05:10,845:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 23:05:10,861:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 23:05:10,874:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 23:05:10,875:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 23:05:10,896:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 23:05:10,897:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 23:05:10,899:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 23:05:10,922:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 23:05:10,923:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 23:05:10,924:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 23:05:10,924:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 23:05:10,925:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 23:05:10,926:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 23:05:10,926:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 23:05:10,954:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 23:05:10,954:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 23:05:10,955:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 23:05:10,955:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 23:05:10,956:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 23:05:10,956:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 23:05:10,957:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 23:05:10,957:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 23:05:10,957:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 23:05:10,984:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 23:05:10,985:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 23:05:10,987:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 23:05:11,071:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 23:05:11,074:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 23:05:11,105:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 23:05:11,107:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 23:05:11,120:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 23:05:11,122:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 23:05:11,152:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 23:05:11,155:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 23:05:11,170:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 23:05:11,171:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 23:05:11,171:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 23:05:11,173:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 23:05:11,173:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 23:05:11,174:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 23:05:11,200:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 23:05:11,201:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 23:05:11,203:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 23:05:11,203:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 23:05:11,205:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 23:05:11,206:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 23:05:11,209:INFO:Calculating mean and std
2022-09-10 23:05:11,210:INFO:Creating metrics dataframe
2022-09-10 23:05:11,214:INFO:Uploading results into container
2022-09-10 23:05:11,214:INFO:Uploading model into container now
2022-09-10 23:05:11,214:INFO:master_model_container: 12
2022-09-10 23:05:11,214:INFO:display_container: 2
2022-09-10 23:05:11,215:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     n_estimators=100, n_jobs=-1, oob_score=False,
                     random_state=7178, verbose=0, warm_start=False)
2022-09-10 23:05:11,215:INFO:create_model() successfully completed......................................
2022-09-10 23:05:11,304:INFO:SubProcess create_model() end ==================================
2022-09-10 23:05:11,304:INFO:Creating metrics dataframe
2022-09-10 23:05:11,317:INFO:Initializing Light Gradient Boosting Machine
2022-09-10 23:05:11,317:INFO:Total runtime is 0.15447376171747842 minutes
2022-09-10 23:05:11,320:INFO:SubProcess create_model() called ==================================
2022-09-10 23:05:11,320:INFO:Initializing create_model()
2022-09-10 23:05:11,320:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000026DB9BCBEB0>, estimator=lightgbm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000026DB9F28970>, model_only=True, return_train_score=False, kwargs={})
2022-09-10 23:05:11,321:INFO:Checking exceptions
2022-09-10 23:05:11,322:INFO:Importing libraries
2022-09-10 23:05:11,322:INFO:Copying training dataset
2022-09-10 23:05:11,325:INFO:Defining folds
2022-09-10 23:05:11,325:INFO:Declaring metric variables
2022-09-10 23:05:11,328:INFO:Importing untrained model
2022-09-10 23:05:11,331:INFO:Light Gradient Boosting Machine Imported successfully
2022-09-10 23:05:11,337:INFO:Starting cross validation
2022-09-10 23:05:11,338:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-09-10 23:05:11,442:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 23:05:11,452:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 23:05:11,453:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 23:05:11,454:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 23:05:11,454:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 23:05:11,455:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 23:05:11,474:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 23:05:11,486:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 23:05:11,486:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 23:05:11,487:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 23:05:11,487:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 23:05:11,488:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 23:05:11,511:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 23:05:11,512:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 23:05:11,514:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 23:05:11,520:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 23:05:11,521:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 23:05:11,521:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 23:05:11,522:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 23:05:11,522:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 23:05:11,522:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 23:05:11,523:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 23:05:11,523:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 23:05:11,523:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 23:05:11,524:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 23:05:11,524:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 23:05:11,524:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 23:05:11,525:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 23:05:11,525:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 23:05:11,526:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 23:05:11,588:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 23:05:11,594:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 23:05:11,595:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 23:05:11,600:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 23:05:11,622:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 23:05:11,624:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 23:05:11,626:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 23:05:11,633:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 23:05:11,657:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 23:05:11,657:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 23:05:11,658:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 23:05:11,658:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 23:05:11,659:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 23:05:11,660:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 23:05:11,660:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 23:05:11,660:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 23:05:11,662:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 23:05:11,668:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 23:05:11,669:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 23:05:11,670:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 23:05:11,673:INFO:Calculating mean and std
2022-09-10 23:05:11,675:INFO:Creating metrics dataframe
2022-09-10 23:05:11,678:INFO:Uploading results into container
2022-09-10 23:05:11,678:INFO:Uploading model into container now
2022-09-10 23:05:11,678:INFO:master_model_container: 13
2022-09-10 23:05:11,678:INFO:display_container: 2
2022-09-10 23:05:11,679:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=7178, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0)
2022-09-10 23:05:11,679:INFO:create_model() successfully completed......................................
2022-09-10 23:05:11,769:INFO:SubProcess create_model() end ==================================
2022-09-10 23:05:11,769:INFO:Creating metrics dataframe
2022-09-10 23:05:11,782:INFO:Initializing Dummy Classifier
2022-09-10 23:05:11,782:INFO:Total runtime is 0.1622308055559794 minutes
2022-09-10 23:05:11,785:INFO:SubProcess create_model() called ==================================
2022-09-10 23:05:11,785:INFO:Initializing create_model()
2022-09-10 23:05:11,785:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000026DB9BCBEB0>, estimator=dummy, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000026DB9F28970>, model_only=True, return_train_score=False, kwargs={})
2022-09-10 23:05:11,786:INFO:Checking exceptions
2022-09-10 23:05:11,787:INFO:Importing libraries
2022-09-10 23:05:11,787:INFO:Copying training dataset
2022-09-10 23:05:11,790:INFO:Defining folds
2022-09-10 23:05:11,790:INFO:Declaring metric variables
2022-09-10 23:05:11,793:INFO:Importing untrained model
2022-09-10 23:05:11,796:INFO:Dummy Classifier Imported successfully
2022-09-10 23:05:11,802:INFO:Starting cross validation
2022-09-10 23:05:11,803:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-09-10 23:05:11,862:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 23:05:11,863:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 23:05:11,866:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 23:05:11,869:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 23:05:11,871:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 23:05:11,879:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 23:05:11,893:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 23:05:11,895:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 23:05:11,897:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 23:05:11,901:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 23:05:11,902:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 23:05:11,913:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 23:05:11,927:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 23:05:11,928:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 23:05:11,929:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-09-10 23:05:11,930:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 23:05:11,933:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 23:05:11,934:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 23:05:11,934:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 23:05:11,935:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 23:05:11,935:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 23:05:11,935:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 23:05:11,935:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-09-10 23:05:11,936:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-09-10 23:05:11,936:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-09-10 23:05:11,936:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 23:05:11,937:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 23:05:11,937:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 23:05:11,962:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 23:05:11,963:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 23:05:11,964:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 23:05:11,965:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-09-10 23:05:11,965:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 23:05:11,967:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 23:05:11,967:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-09-10 23:05:11,968:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 23:05:11,977:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 23:05:11,981:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 23:05:11,982:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 23:05:11,983:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 23:05:12,008:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 23:05:12,011:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 23:05:12,014:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 23:05:12,015:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 23:05:12,041:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 23:05:12,043:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 23:05:12,043:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-09-10 23:05:12,044:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 23:05:12,044:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 23:05:12,045:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 23:05:12,046:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-09-10 23:05:12,046:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 23:05:12,047:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 23:05:12,048:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 23:05:12,048:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 23:05:12,049:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-09-10 23:05:12,049:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 23:05:12,049:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 23:05:12,050:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-09-10 23:05:12,051:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 23:05:12,053:INFO:Calculating mean and std
2022-09-10 23:05:12,055:INFO:Creating metrics dataframe
2022-09-10 23:05:12,058:INFO:Uploading results into container
2022-09-10 23:05:12,059:INFO:Uploading model into container now
2022-09-10 23:05:12,059:INFO:master_model_container: 14
2022-09-10 23:05:12,059:INFO:display_container: 2
2022-09-10 23:05:12,059:INFO:DummyClassifier(constant=None, random_state=7178, strategy='prior')
2022-09-10 23:05:12,059:INFO:create_model() successfully completed......................................
2022-09-10 23:05:12,149:INFO:SubProcess create_model() end ==================================
2022-09-10 23:05:12,149:INFO:Creating metrics dataframe
2022-09-10 23:05:12,170:INFO:Initializing create_model()
2022-09-10 23:05:12,170:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000026DB9BCBEB0>, estimator=KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform'), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2022-09-10 23:05:12,170:INFO:Checking exceptions
2022-09-10 23:05:12,173:INFO:Importing libraries
2022-09-10 23:05:12,173:INFO:Copying training dataset
2022-09-10 23:05:12,175:INFO:Defining folds
2022-09-10 23:05:12,175:INFO:Declaring metric variables
2022-09-10 23:05:12,175:INFO:Importing untrained model
2022-09-10 23:05:12,175:INFO:Declaring custom model
2022-09-10 23:05:12,176:INFO:K Neighbors Classifier Imported successfully
2022-09-10 23:05:12,177:INFO:Cross validation set to False
2022-09-10 23:05:12,177:INFO:Fitting Model
2022-09-10 23:05:12,321:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2022-09-10 23:05:12,321:INFO:create_model() successfully completed......................................
2022-09-10 23:05:12,436:INFO:master_model_container: 14
2022-09-10 23:05:12,436:INFO:display_container: 2
2022-09-10 23:05:12,437:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2022-09-10 23:05:12,437:INFO:compare_models() successfully completed......................................
2022-09-10 23:05:12,546:INFO:Initializing evaluate_model()
2022-09-10 23:05:12,546:INFO:evaluate_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000026DB9BCBEB0>, estimator=KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform'), fold=None, fit_kwargs=None, plot_kwargs=None, feature_name=None, groups=None, use_train_data=False)
2022-09-10 23:05:12,563:INFO:Initializing plot_model()
2022-09-10 23:05:12,564:INFO:plot_model(plot=pipeline, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform'), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000026DB9BCBEB0>, system=True)
2022-09-10 23:05:12,564:INFO:Checking exceptions
2022-09-10 23:05:12,567:INFO:Preloading libraries
2022-09-10 23:05:12,567:INFO:Copying training dataset
2022-09-10 23:05:12,567:INFO:Plot type: pipeline
2022-09-10 23:05:12,701:INFO:Visual Rendered Successfully
2022-09-10 23:05:12,791:INFO:plot_model() successfully completed......................................
2022-09-10 23:05:12,825:INFO:Initializing plot_model()
2022-09-10 23:05:12,825:INFO:plot_model(plot=auc, fold=None, use_train_data=False, verbose=True, display=None, display_format=None, estimator=KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform'), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000026DB9BCBEB0>, system=True)
2022-09-10 23:05:12,825:INFO:Checking exceptions
2022-09-10 23:05:12,830:INFO:Preloading libraries
2022-09-10 23:05:12,830:INFO:Copying training dataset
2022-09-10 23:05:12,830:INFO:Plot type: auc
2022-09-10 23:05:12,966:INFO:Fitting Model
2022-09-10 23:05:12,966:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\base.py:450: UserWarning: X does not have valid feature names, but KNeighborsClassifier was fitted with feature names
  warnings.warn(

2022-09-10 23:05:12,966:INFO:Scoring test/hold-out set
2022-09-10 23:05:13,164:INFO:Visual Rendered Successfully
2022-09-10 23:05:13,255:INFO:plot_model() successfully completed......................................
2022-09-10 23:05:13,298:INFO:Initializing predict_model()
2022-09-10 23:05:13,298:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000026DB9BCBEB0>, estimator=KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform'), probability_threshold=None, encoded_labels=False, raw_score=False, drift_report=False, round=4, verbose=True, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x0000026DB9D38CA0>)
2022-09-10 23:05:13,299:INFO:Checking exceptions
2022-09-10 23:05:13,299:INFO:Preloading libraries
2022-09-10 23:05:13,379:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 23:05:13,380:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 23:05:13,380:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 23:05:13,381:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 23:05:13,382:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 23:05:13,382:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 23:05:13,560:INFO:Initializing predict_model()
2022-09-10 23:05:13,560:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000026DB9BCBEB0>, estimator=KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform'), probability_threshold=None, encoded_labels=False, raw_score=False, drift_report=False, round=4, verbose=True, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x0000026DB9D38EE0>)
2022-09-10 23:05:13,560:INFO:Checking exceptions
2022-09-10 23:05:13,560:INFO:Preloading libraries
2022-09-10 23:05:13,561:INFO:Set up data.
2022-09-10 23:05:13,734:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 23:05:13,735:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 23:05:13,736:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 23:05:13,737:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 23:05:13,738:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 23:05:13,738:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 23:05:13,881:INFO:Initializing ensemble_model()
2022-09-10 23:05:13,881:INFO:ensemble_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000026DB9BCBEB0>, estimator=KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform'), method=Bagging, fold=None, n_estimators=10, round=4, choose_better=True, optimize=Accuracy, fit_kwargs=None, groups=None, probability_threshold=None, verbose=True, return_train_score=False)
2022-09-10 23:05:13,881:INFO:Checking exceptions
2022-09-10 23:05:13,911:INFO:Importing libraries
2022-09-10 23:05:13,911:INFO:Copying training dataset
2022-09-10 23:05:13,911:INFO:Checking base model
2022-09-10 23:05:13,911:INFO:Base model : K Neighbors Classifier
2022-09-10 23:05:13,918:INFO:Importing untrained ensembler
2022-09-10 23:05:13,918:INFO:Ensemble method set to Bagging
2022-09-10 23:05:13,918:INFO:SubProcess create_model() called ==================================
2022-09-10 23:05:13,919:INFO:Initializing create_model()
2022-09-10 23:05:13,920:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000026DB9BCBEB0>, estimator=BaggingClassifier(base_estimator=KNeighborsClassifier(algorithm='auto',
                                                      leaf_size=30,
                                                      metric='minkowski',
                                                      metric_params=None,
                                                      n_jobs=-1, n_neighbors=5,
                                                      p=2, weights='uniform'),
                  bootstrap=True, bootstrap_features=False, max_features=1.0,
                  max_samples=1.0, n_estimators=10, n_jobs=None,
                  oob_score=False, random_state=7178, verbose=0,
                  warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000026DB9F3E370>, model_only=True, return_train_score=False, kwargs={})
2022-09-10 23:05:13,920:INFO:Checking exceptions
2022-09-10 23:05:13,921:INFO:Importing libraries
2022-09-10 23:05:13,921:INFO:Copying training dataset
2022-09-10 23:05:13,923:INFO:Defining folds
2022-09-10 23:05:13,923:INFO:Declaring metric variables
2022-09-10 23:05:13,927:INFO:Importing untrained model
2022-09-10 23:05:13,927:INFO:Declaring custom model
2022-09-10 23:05:13,931:INFO:K Neighbors Classifier Imported successfully
2022-09-10 23:05:13,938:INFO:Starting cross validation
2022-09-10 23:05:13,939:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-09-10 23:05:14,022:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 23:05:14,025:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 23:05:14,027:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 23:05:14,029:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 23:05:14,043:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 23:05:14,048:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 23:05:14,093:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 23:05:14,115:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 23:05:14,120:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 23:05:14,121:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 23:05:14,126:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 23:05:14,136:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 23:05:14,172:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 23:05:14,173:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 23:05:14,175:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 23:05:14,203:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 23:05:14,205:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 23:05:14,206:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 23:05:14,211:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 23:05:14,213:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 23:05:14,214:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 23:05:14,219:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 23:05:14,221:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 23:05:14,222:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 23:05:14,227:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 23:05:14,229:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 23:05:14,230:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 23:05:14,231:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 23:05:14,232:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 23:05:14,233:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 23:05:14,248:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 23:05:14,271:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 23:05:14,274:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 23:05:14,276:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 23:05:14,318:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 23:05:14,344:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 23:05:14,347:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 23:05:14,352:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 23:05:14,387:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 23:05:14,389:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 23:05:14,391:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 23:05:14,415:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 23:05:14,416:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 23:05:14,417:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 23:05:14,418:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 23:05:14,419:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 23:05:14,420:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 23:05:14,423:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 23:05:14,425:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 23:05:14,426:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 23:05:14,429:INFO:Calculating mean and std
2022-09-10 23:05:14,430:INFO:Creating metrics dataframe
2022-09-10 23:05:14,434:INFO:Finalizing model
2022-09-10 23:05:14,508:INFO:Uploading results into container
2022-09-10 23:05:14,509:INFO:Uploading model into container now
2022-09-10 23:05:14,509:INFO:master_model_container: 15
2022-09-10 23:05:14,510:INFO:display_container: 5
2022-09-10 23:05:14,511:INFO:BaggingClassifier(base_estimator=KNeighborsClassifier(algorithm='auto',
                                                      leaf_size=30,
                                                      metric='minkowski',
                                                      metric_params=None,
                                                      n_jobs=-1, n_neighbors=5,
                                                      p=2, weights='uniform'),
                  bootstrap=True, bootstrap_features=False, max_features=1.0,
                  max_samples=1.0, n_estimators=10, n_jobs=None,
                  oob_score=False, random_state=7178, verbose=0,
                  warm_start=False)
2022-09-10 23:05:14,511:INFO:create_model() successfully completed......................................
2022-09-10 23:05:14,600:INFO:SubProcess create_model() end ==================================
2022-09-10 23:05:14,601:INFO:choose_better activated
2022-09-10 23:05:14,604:INFO:SubProcess create_model() called ==================================
2022-09-10 23:05:14,604:INFO:Initializing create_model()
2022-09-10 23:05:14,604:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000026DB9BCBEB0>, estimator=KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform'), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2022-09-10 23:05:14,604:INFO:Checking exceptions
2022-09-10 23:05:14,607:INFO:Importing libraries
2022-09-10 23:05:14,607:INFO:Copying training dataset
2022-09-10 23:05:14,609:INFO:Defining folds
2022-09-10 23:05:14,609:INFO:Declaring metric variables
2022-09-10 23:05:14,609:INFO:Importing untrained model
2022-09-10 23:05:14,609:INFO:Declaring custom model
2022-09-10 23:05:14,609:INFO:K Neighbors Classifier Imported successfully
2022-09-10 23:05:14,610:INFO:Starting cross validation
2022-09-10 23:05:14,610:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-09-10 23:05:14,672:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 23:05:14,674:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 23:05:14,674:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 23:05:14,678:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 23:05:14,683:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 23:05:14,689:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 23:05:14,713:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 23:05:14,713:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 23:05:14,716:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 23:05:14,722:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 23:05:14,727:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 23:05:14,736:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 23:05:14,749:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 23:05:14,751:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 23:05:14,752:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 23:05:14,755:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 23:05:14,757:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 23:05:14,757:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 23:05:14,758:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 23:05:14,758:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 23:05:14,760:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 23:05:14,763:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 23:05:14,765:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 23:05:14,766:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 23:05:14,774:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 23:05:14,775:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 23:05:14,777:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 23:05:14,777:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 23:05:14,779:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 23:05:14,780:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 23:05:14,797:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 23:05:14,804:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 23:05:14,807:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 23:05:14,810:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 23:05:14,836:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 23:05:14,843:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 23:05:14,847:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 23:05:14,849:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\utils\metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use available_if instead.
  warnings.warn(

2022-09-10 23:05:14,874:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 23:05:14,876:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 23:05:14,877:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 23:05:14,881:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 23:05:14,882:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 23:05:14,884:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 23:05:14,886:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 23:05:14,887:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 23:05:14,888:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 23:05:14,889:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 23:05:14,889:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 23:05:14,891:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'tuberculose') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-09-10 23:05:14,893:INFO:Calculating mean and std
2022-09-10 23:05:14,894:INFO:Creating metrics dataframe
2022-09-10 23:05:14,896:INFO:Finalizing model
2022-09-10 23:05:14,934:INFO:Uploading results into container
2022-09-10 23:05:14,934:INFO:Uploading model into container now
2022-09-10 23:05:14,935:INFO:master_model_container: 16
2022-09-10 23:05:14,935:INFO:display_container: 6
2022-09-10 23:05:14,935:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2022-09-10 23:05:14,935:INFO:create_model() successfully completed......................................
2022-09-10 23:05:15,023:INFO:SubProcess create_model() end ==================================
2022-09-10 23:05:15,024:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform') result for Accuracy is 0.585
2022-09-10 23:05:15,025:INFO:BaggingClassifier(base_estimator=KNeighborsClassifier(algorithm='auto',
                                                      leaf_size=30,
                                                      metric='minkowski',
                                                      metric_params=None,
                                                      n_jobs=-1, n_neighbors=5,
                                                      p=2, weights='uniform'),
                  bootstrap=True, bootstrap_features=False, max_features=1.0,
                  max_samples=1.0, n_estimators=10, n_jobs=None,
                  oob_score=False, random_state=7178, verbose=0,
                  warm_start=False) result for Accuracy is 0.5897
2022-09-10 23:05:15,025:INFO:BaggingClassifier(base_estimator=KNeighborsClassifier(algorithm='auto',
                                                      leaf_size=30,
                                                      metric='minkowski',
                                                      metric_params=None,
                                                      n_jobs=-1, n_neighbors=5,
                                                      p=2, weights='uniform'),
                  bootstrap=True, bootstrap_features=False, max_features=1.0,
                  max_samples=1.0, n_estimators=10, n_jobs=None,
                  oob_score=False, random_state=7178, verbose=0,
                  warm_start=False) is best model
2022-09-10 23:05:15,025:INFO:choose_better completed
2022-09-10 23:05:15,034:INFO:master_model_container: 16
2022-09-10 23:05:15,035:INFO:display_container: 5
2022-09-10 23:05:15,036:INFO:BaggingClassifier(base_estimator=KNeighborsClassifier(algorithm='auto',
                                                      leaf_size=30,
                                                      metric='minkowski',
                                                      metric_params=None,
                                                      n_jobs=-1, n_neighbors=5,
                                                      p=2, weights='uniform'),
                  bootstrap=True, bootstrap_features=False, max_features=1.0,
                  max_samples=1.0, n_estimators=10, n_jobs=None,
                  oob_score=False, random_state=7178, verbose=0,
                  warm_start=False)
2022-09-10 23:05:15,036:INFO:ensemble_model() succesfully completed......................................
2022-09-10 23:05:15,192:INFO:Initializing save_model()
2022-09-10 23:05:15,192:INFO:save_model(model=BaggingClassifier(base_estimator=KNeighborsClassifier(algorithm='auto',
                                                      leaf_size=30,
                                                      metric='minkowski',
                                                      metric_params=None,
                                                      n_jobs=-1, n_neighbors=5,
                                                      p=2, weights='uniform'),
                  bootstrap=True, bootstrap_features=False, max_features=1.0,
                  max_samples=1.0, n_estimators=10, n_jobs=None,
                  oob_score=False, random_state=7178, verbose=0,
                  warm_start=False), model_name=my_best_pipeline, prep_pipe_=Pipeline(memory=Memory(location=C:\Users\bruno\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              missing_values=nan,
                                                              strategy='m...
                ('rest_encoding',
                 TransformerWrapper(exclude=None, include=['input'],
                                    transformer=LeaveOneOutEncoder(cols=['input'],
                                                                   drop_invariant=False,
                                                                   handle_missing='return_nan',
                                                                   handle_unknown='value',
                                                                   random_state=7178,
                                                                   return_df=True,
                                                                   sigma=None,
                                                                   verbose=0))),
                ('low_variance',
                 TransformerWrapper(exclude=[], include=None,
                                    transformer=VarianceThreshold(threshold=0)))],
         verbose=False), verbose=True, use_case=MLUsecase.CLASSIFICATION, kwargs={})
2022-09-10 23:05:15,192:INFO:Adding model into prep_pipe
2022-09-10 23:05:15,207:INFO:my_best_pipeline.pkl saved in current working directory
2022-09-10 23:05:15,216:INFO:Pipeline(memory=Memory(location=C:\Users\bruno\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              missing_values=nan,
                                                              strategy='m...
                ['trained_model',
                 BaggingClassifier(base_estimator=KNeighborsClassifier(algorithm='auto',
                                                                       leaf_size=30,
                                                                       metric='minkowski',
                                                                       metric_params=None,
                                                                       n_jobs=-1,
                                                                       n_neighbors=5,
                                                                       p=2,
                                                                       weights='uniform'),
                                   bootstrap=True, bootstrap_features=False,
                                   max_features=1.0, max_samples=1.0,
                                   n_estimators=10, n_jobs=None,
                                   oob_score=False, random_state=7178,
                                   verbose=0, warm_start=False)]],
         verbose=False)
2022-09-10 23:05:15,216:INFO:save_model() successfully completed......................................
2022-09-10 23:05:15,363:INFO:Initializing load_model()
2022-09-10 23:05:15,363:INFO:load_model(model_name=my_best_pipeline, platform=None, authentication=None, verbose=True)
2022-09-10 23:06:20,888:INFO:Initializing plot_model()
2022-09-10 23:06:20,888:INFO:plot_model(plot=parameter, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform'), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000026DB9BCBEB0>, system=True)
2022-09-10 23:06:20,888:INFO:Checking exceptions
2022-09-10 23:06:20,891:INFO:Preloading libraries
2022-09-10 23:06:20,892:INFO:Copying training dataset
2022-09-10 23:06:20,892:INFO:Plot type: parameter
2022-09-10 23:06:20,895:INFO:Visual Rendered Successfully
2022-09-10 23:06:20,985:INFO:plot_model() successfully completed......................................
2022-09-10 23:06:22,136:INFO:Initializing plot_model()
2022-09-10 23:06:22,136:INFO:plot_model(plot=auc, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform'), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000026DB9BCBEB0>, system=True)
2022-09-10 23:06:22,136:INFO:Checking exceptions
2022-09-10 23:06:22,139:INFO:Preloading libraries
2022-09-10 23:06:22,140:INFO:Copying training dataset
2022-09-10 23:06:22,140:INFO:Plot type: auc
2022-09-10 23:06:22,270:INFO:Fitting Model
2022-09-10 23:06:22,270:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\base.py:450: UserWarning: X does not have valid feature names, but KNeighborsClassifier was fitted with feature names
  warnings.warn(

2022-09-10 23:06:22,270:INFO:Scoring test/hold-out set
2022-09-10 23:06:22,464:INFO:Visual Rendered Successfully
2022-09-10 23:06:22,554:INFO:plot_model() successfully completed......................................
2022-09-10 23:06:23,646:INFO:Initializing plot_model()
2022-09-10 23:06:23,646:INFO:plot_model(plot=confusion_matrix, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform'), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000026DB9BCBEB0>, system=True)
2022-09-10 23:06:23,646:INFO:Checking exceptions
2022-09-10 23:06:23,649:INFO:Preloading libraries
2022-09-10 23:06:23,649:INFO:Copying training dataset
2022-09-10 23:06:23,649:INFO:Plot type: confusion_matrix
2022-09-10 23:06:23,778:INFO:Fitting Model
2022-09-10 23:06:23,778:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\base.py:450: UserWarning: X does not have valid feature names, but KNeighborsClassifier was fitted with feature names
  warnings.warn(

2022-09-10 23:06:23,778:INFO:Scoring test/hold-out set
2022-09-10 23:06:23,929:INFO:Visual Rendered Successfully
2022-09-10 23:06:24,017:INFO:plot_model() successfully completed......................................
2022-09-10 23:06:25,053:INFO:Initializing plot_model()
2022-09-10 23:06:25,053:INFO:plot_model(plot=threshold, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform'), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000026DB9BCBEB0>, system=True)
2022-09-10 23:06:25,053:INFO:Checking exceptions
2022-09-10 23:06:32,922:INFO:Initializing plot_model()
2022-09-10 23:06:32,922:INFO:plot_model(plot=pr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform'), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000026DB9BCBEB0>, system=True)
2022-09-10 23:06:32,922:INFO:Checking exceptions
2022-09-10 23:06:32,925:INFO:Preloading libraries
2022-09-10 23:06:32,926:INFO:Copying training dataset
2022-09-10 23:06:32,926:INFO:Plot type: pr
2022-09-10 23:06:33,055:INFO:Fitting Model
2022-09-10 23:06:33,061:INFO:Scoring test/hold-out set
2022-09-10 23:06:33,242:INFO:Visual Rendered Successfully
2022-09-10 23:06:33,338:INFO:plot_model() successfully completed......................................
2022-09-10 23:06:34,454:INFO:Initializing plot_model()
2022-09-10 23:06:34,454:INFO:plot_model(plot=error, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform'), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000026DB9BCBEB0>, system=True)
2022-09-10 23:06:34,454:INFO:Checking exceptions
2022-09-10 23:06:34,458:INFO:Preloading libraries
2022-09-10 23:06:34,458:INFO:Copying training dataset
2022-09-10 23:06:34,458:INFO:Plot type: error
2022-09-10 23:06:34,587:INFO:Fitting Model
2022-09-10 23:06:34,587:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\base.py:450: UserWarning: X does not have valid feature names, but KNeighborsClassifier was fitted with feature names
  warnings.warn(

2022-09-10 23:06:34,587:INFO:Scoring test/hold-out set
2022-09-10 23:06:34,794:INFO:Visual Rendered Successfully
2022-09-10 23:06:34,892:INFO:plot_model() successfully completed......................................
2022-09-10 23:06:36,568:INFO:Initializing plot_model()
2022-09-10 23:06:36,568:INFO:plot_model(plot=class_report, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform'), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000026DB9BCBEB0>, system=True)
2022-09-10 23:06:36,568:INFO:Checking exceptions
2022-09-10 23:06:36,572:INFO:Preloading libraries
2022-09-10 23:06:36,572:INFO:Copying training dataset
2022-09-10 23:06:36,572:INFO:Plot type: class_report
2022-09-10 23:06:36,700:INFO:Fitting Model
2022-09-10 23:06:36,700:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\base.py:450: UserWarning: X does not have valid feature names, but KNeighborsClassifier was fitted with feature names
  warnings.warn(

2022-09-10 23:06:36,700:INFO:Scoring test/hold-out set
2022-09-10 23:06:36,927:INFO:Visual Rendered Successfully
2022-09-10 23:06:37,022:INFO:plot_model() successfully completed......................................
2022-09-10 23:06:37,835:INFO:Initializing plot_model()
2022-09-10 23:06:37,835:INFO:plot_model(plot=feature_all, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform'), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000026DB9BCBEB0>, system=True)
2022-09-10 23:06:37,836:INFO:Checking exceptions
2022-09-10 23:06:38,801:INFO:Initializing plot_model()
2022-09-10 23:06:38,801:INFO:plot_model(plot=rfe, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform'), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000026DB9BCBEB0>, system=True)
2022-09-10 23:06:38,801:INFO:Checking exceptions
2022-09-10 23:06:40,051:INFO:Initializing plot_model()
2022-09-10 23:06:40,051:INFO:plot_model(plot=learning, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform'), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000026DB9BCBEB0>, system=True)
2022-09-10 23:06:40,051:INFO:Checking exceptions
2022-09-10 23:06:40,054:INFO:Preloading libraries
2022-09-10 23:06:40,054:INFO:Copying training dataset
2022-09-10 23:06:40,054:INFO:Plot type: learning
2022-09-10 23:06:40,190:INFO:Fitting Model
2022-09-10 23:06:41,122:INFO:Visual Rendered Successfully
2022-09-10 23:06:41,218:INFO:plot_model() successfully completed......................................
2022-09-10 23:06:42,126:INFO:Initializing plot_model()
2022-09-10 23:06:42,126:INFO:plot_model(plot=manifold, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform'), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000026DB9BCBEB0>, system=True)
2022-09-10 23:06:42,126:INFO:Checking exceptions
2022-09-10 23:06:43,958:INFO:Initializing plot_model()
2022-09-10 23:06:43,958:INFO:plot_model(plot=calibration, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform'), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000026DB9BCBEB0>, system=True)
2022-09-10 23:06:43,958:INFO:Checking exceptions
2022-09-10 23:06:45,217:INFO:Initializing plot_model()
2022-09-10 23:06:45,217:INFO:plot_model(plot=vc, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform'), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000026DB9BCBEB0>, system=True)
2022-09-10 23:06:45,217:INFO:Checking exceptions
2022-09-10 23:06:45,220:INFO:Preloading libraries
2022-09-10 23:06:45,220:INFO:Copying training dataset
2022-09-10 23:06:45,220:INFO:Plot type: vc
2022-09-10 23:06:45,220:INFO:Determining param_name
2022-09-10 23:06:45,221:INFO:param_name: n_neighbors
2022-09-10 23:06:45,349:INFO:Fitting Model
2022-09-10 23:06:46,528:INFO:Visual Rendered Successfully
2022-09-10 23:06:46,624:INFO:plot_model() successfully completed......................................
2022-09-10 23:06:48,116:INFO:Initializing plot_model()
2022-09-10 23:06:48,116:INFO:plot_model(plot=dimension, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform'), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000026DB9BCBEB0>, system=True)
2022-09-10 23:06:48,116:INFO:Checking exceptions
2022-09-10 23:06:48,120:INFO:Preloading libraries
2022-09-10 23:06:48,120:INFO:Copying training dataset
2022-09-10 23:06:48,120:INFO:Plot type: dimension
2022-09-10 23:06:48,215:INFO:Fitting StandardScaler()
2022-09-10 23:06:48,257:INFO:Fitting PCA()
2022-09-10 23:06:48,384:INFO:Fitting & Transforming Model
2022-09-10 23:06:50,365:INFO:Initializing plot_model()
2022-09-10 23:06:50,365:INFO:plot_model(plot=feature, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform'), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000026DB9BCBEB0>, system=True)
2022-09-10 23:06:50,365:INFO:Checking exceptions
2022-09-10 23:06:51,518:INFO:Initializing plot_model()
2022-09-10 23:06:51,518:INFO:plot_model(plot=feature_all, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform'), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000026DB9BCBEB0>, system=True)
2022-09-10 23:06:51,518:INFO:Checking exceptions
2022-09-10 23:06:53,319:INFO:Initializing plot_model()
2022-09-10 23:06:53,319:INFO:plot_model(plot=boundary, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform'), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000026DB9BCBEB0>, system=True)
2022-09-10 23:06:53,319:INFO:Checking exceptions
2022-09-10 23:06:53,322:INFO:Preloading libraries
2022-09-10 23:06:53,323:INFO:Copying training dataset
2022-09-10 23:06:53,323:INFO:Plot type: boundary
2022-09-10 23:06:53,398:INFO:Fitting StandardScaler()
2022-09-10 23:06:53,402:INFO:Fitting PCA()
2022-09-10 23:06:55,292:INFO:Initializing plot_model()
2022-09-10 23:06:55,292:INFO:plot_model(plot=lift, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform'), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000026DB9BCBEB0>, system=True)
2022-09-10 23:06:55,292:INFO:Checking exceptions
2022-09-10 23:06:55,295:INFO:Preloading libraries
2022-09-10 23:06:55,296:INFO:Copying training dataset
2022-09-10 23:06:55,296:INFO:Plot type: lift
2022-09-10 23:06:55,296:INFO:Generating predictions / predict_proba on X_test
2022-09-10 23:06:56,825:INFO:Initializing plot_model()
2022-09-10 23:06:56,825:INFO:plot_model(plot=gain, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform'), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000026DB9BCBEB0>, system=True)
2022-09-10 23:06:56,825:INFO:Checking exceptions
2022-09-10 23:06:56,829:INFO:Preloading libraries
2022-09-10 23:06:56,829:INFO:Copying training dataset
2022-09-10 23:06:56,829:INFO:Plot type: gain
2022-09-10 23:06:56,829:INFO:Generating predictions / predict_proba on X_test
2022-09-10 23:06:58,320:INFO:Initializing plot_model()
2022-09-10 23:06:58,320:INFO:plot_model(plot=tree, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform'), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000026DB9BCBEB0>, system=True)
2022-09-10 23:06:58,320:INFO:Checking exceptions
2022-09-10 23:07:08,710:INFO:Initializing plot_model()
2022-09-10 23:07:08,710:INFO:plot_model(plot=ks, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform'), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000026DB9BCBEB0>, system=True)
2022-09-10 23:07:08,710:INFO:Checking exceptions
2022-09-10 23:07:08,713:INFO:Preloading libraries
2022-09-10 23:07:08,714:INFO:Copying training dataset
2022-09-10 23:07:08,714:INFO:Plot type: ks
2022-09-10 23:07:08,714:INFO:Generating predictions / predict_proba on X_test
2022-09-10 23:07:10,922:INFO:Initializing plot_model()
2022-09-10 23:07:10,922:INFO:plot_model(plot=pipeline, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform'), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000026DB9BCBEB0>, system=True)
2022-09-10 23:07:10,922:INFO:Checking exceptions
2022-09-10 23:07:10,925:INFO:Preloading libraries
2022-09-10 23:07:10,925:INFO:Copying training dataset
2022-09-10 23:07:10,925:INFO:Plot type: pipeline
2022-09-10 23:07:11,059:INFO:Visual Rendered Successfully
2022-09-10 23:07:11,164:INFO:plot_model() successfully completed......................................
2022-09-10 23:07:12,674:INFO:Initializing plot_model()
2022-09-10 23:07:12,674:INFO:plot_model(plot=parameter, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform'), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000026DB9BCBEB0>, system=True)
2022-09-10 23:07:12,674:INFO:Checking exceptions
2022-09-10 23:07:12,677:INFO:Preloading libraries
2022-09-10 23:07:12,677:INFO:Copying training dataset
2022-09-10 23:07:12,677:INFO:Plot type: parameter
2022-09-10 23:07:12,680:INFO:Visual Rendered Successfully
2022-09-10 23:07:12,790:INFO:plot_model() successfully completed......................................
2022-09-10 23:07:16,127:INFO:Initializing plot_model()
2022-09-10 23:07:16,128:INFO:plot_model(plot=class_report, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform'), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000026DB9BCBEB0>, system=True)
2022-09-10 23:07:16,128:INFO:Checking exceptions
2022-09-10 23:07:16,131:INFO:Preloading libraries
2022-09-10 23:07:16,131:INFO:Copying training dataset
2022-09-10 23:07:16,132:INFO:Plot type: class_report
2022-09-10 23:07:16,260:INFO:Fitting Model
2022-09-10 23:07:16,260:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\base.py:450: UserWarning: X does not have valid feature names, but KNeighborsClassifier was fitted with feature names
  warnings.warn(

2022-09-10 23:07:16,260:INFO:Scoring test/hold-out set
2022-09-10 23:07:16,486:INFO:Visual Rendered Successfully
2022-09-10 23:07:16,590:INFO:plot_model() successfully completed......................................
2022-09-10 23:07:19,239:INFO:Initializing plot_model()
2022-09-10 23:07:19,239:INFO:plot_model(plot=auc, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform'), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000026DB9BCBEB0>, system=True)
2022-09-10 23:07:19,239:INFO:Checking exceptions
2022-09-10 23:07:19,242:INFO:Preloading libraries
2022-09-10 23:07:19,245:INFO:Copying training dataset
2022-09-10 23:07:19,245:INFO:Plot type: auc
2022-09-10 23:07:19,374:INFO:Fitting Model
2022-09-10 23:07:19,374:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\base.py:450: UserWarning: X does not have valid feature names, but KNeighborsClassifier was fitted with feature names
  warnings.warn(

2022-09-10 23:07:19,375:INFO:Scoring test/hold-out set
2022-09-10 23:07:19,568:INFO:Visual Rendered Successfully
2022-09-10 23:07:19,670:INFO:plot_model() successfully completed......................................
2022-09-10 23:07:31,591:INFO:Initializing plot_model()
2022-09-10 23:07:31,591:INFO:plot_model(plot=confusion_matrix, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform'), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000026DB9BCBEB0>, system=True)
2022-09-10 23:07:31,591:INFO:Checking exceptions
2022-09-10 23:07:31,594:INFO:Preloading libraries
2022-09-10 23:07:31,594:INFO:Copying training dataset
2022-09-10 23:07:31,594:INFO:Plot type: confusion_matrix
2022-09-10 23:07:31,726:INFO:Fitting Model
2022-09-10 23:07:31,726:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\base.py:450: UserWarning: X does not have valid feature names, but KNeighborsClassifier was fitted with feature names
  warnings.warn(

2022-09-10 23:07:31,726:INFO:Scoring test/hold-out set
2022-09-10 23:07:31,875:INFO:Visual Rendered Successfully
2022-09-10 23:07:31,977:INFO:plot_model() successfully completed......................................
2022-09-10 23:07:56,315:INFO:Initializing plot_model()
2022-09-10 23:07:56,315:INFO:plot_model(plot=threshold, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform'), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000026DB9BCBEB0>, system=True)
2022-09-10 23:07:56,315:INFO:Checking exceptions
2022-09-10 23:07:57,472:INFO:Initializing plot_model()
2022-09-10 23:07:57,472:INFO:plot_model(plot=pr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform'), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000026DB9BCBEB0>, system=True)
2022-09-10 23:07:57,472:INFO:Checking exceptions
2022-09-10 23:07:57,475:INFO:Preloading libraries
2022-09-10 23:07:57,475:INFO:Copying training dataset
2022-09-10 23:07:57,475:INFO:Plot type: pr
2022-09-10 23:07:57,604:INFO:Fitting Model
2022-09-10 23:07:57,610:INFO:Scoring test/hold-out set
2022-09-10 23:07:57,789:INFO:Visual Rendered Successfully
2022-09-10 23:07:57,892:INFO:plot_model() successfully completed......................................
2022-09-10 23:08:00,961:INFO:Initializing plot_model()
2022-09-10 23:08:00,961:INFO:plot_model(plot=error, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform'), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000026DB9BCBEB0>, system=True)
2022-09-10 23:08:00,961:INFO:Checking exceptions
2022-09-10 23:08:00,964:INFO:Preloading libraries
2022-09-10 23:08:00,965:INFO:Copying training dataset
2022-09-10 23:08:00,965:INFO:Plot type: error
2022-09-10 23:08:01,094:INFO:Fitting Model
2022-09-10 23:08:01,094:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\base.py:450: UserWarning: X does not have valid feature names, but KNeighborsClassifier was fitted with feature names
  warnings.warn(

2022-09-10 23:08:01,095:INFO:Scoring test/hold-out set
2022-09-10 23:08:01,300:INFO:Visual Rendered Successfully
2022-09-10 23:08:01,403:INFO:plot_model() successfully completed......................................
2022-09-10 23:09:24,039:INFO:Initializing plot_model()
2022-09-10 23:09:24,039:INFO:plot_model(plot=rfe, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform'), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000026DB9BCBEB0>, system=True)
2022-09-10 23:09:24,039:INFO:Checking exceptions
2022-09-10 23:09:25,572:INFO:Initializing plot_model()
2022-09-10 23:09:25,572:INFO:plot_model(plot=class_report, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform'), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000026DB9BCBEB0>, system=True)
2022-09-10 23:09:25,572:INFO:Checking exceptions
2022-09-10 23:09:25,575:INFO:Preloading libraries
2022-09-10 23:09:25,576:INFO:Copying training dataset
2022-09-10 23:09:25,576:INFO:Plot type: class_report
2022-09-10 23:09:25,705:INFO:Fitting Model
2022-09-10 23:09:25,705:WARNING:c:\Users\bruno\anaconda3\envs\chatbot_env\lib\site-packages\sklearn\base.py:450: UserWarning: X does not have valid feature names, but KNeighborsClassifier was fitted with feature names
  warnings.warn(

2022-09-10 23:09:25,706:INFO:Scoring test/hold-out set
2022-09-10 23:09:25,932:INFO:Visual Rendered Successfully
2022-09-10 23:09:26,035:INFO:plot_model() successfully completed......................................
